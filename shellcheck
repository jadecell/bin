[4mnvf[24m(5)                                                                                                                        File Formats Manual                                                                                                                       [4mnvf[24m(5)

[1mNAME[0m
       nvf - Configuration specification for the nvf.

[1mDESCRIPTION[0m
       The nvf configuration specification provides a declarative structure for configuring Neovim using Nix with few lines of Nix. This document outlines the available options and their usage to create modular, reusable, and reproducible configurations using nvf's
       module system options. For tips, tricks and possible quirks with available plugins please visit https://notashelf.github.io/nvf/

       [1m_module.args[0m
           Additional arguments passed to each module in addition to ones like ‘lib’, ‘config’, and ‘pkgs’, ‘modulesPath’.

           This option is also available to all submodules. Submodules do not inherit args from their parent module, nor do they provide args to their parent module or sibling submodules. The sole exception to this is the argument ‘name’ which is provided by parent
           modules to a submodule and contains the attribute name the submodule is bound to, or a unique generated name if it is not bound to an attribute.

           Some arguments are already passed by default, of which the following [4mcannot[24m be changed with this option:

             [1m• [4m[22mlib[24m: The nixpkgs library.

             [1m• [4m[22mconfig[24m: The results of all options after merging the values from all modules together.

             [1m• [4m[22moptions[24m: The options declared in all modules.

             [1m• [4m[22mspecialArgs[24m: The ‘specialArgs’ argument passed to ‘evalModules’.

             [1m• [22mAll attributes of [4mspecialArgs[0m

               Whereas option values can generally depend on other option values thanks to laziness, this does not apply to ‘imports’, which must be computed statically before anything else.

               For this reason, callers of the module system can provide ‘specialArgs’ which are available during import resolution.

               For NixOS, ‘specialArgs’ includes [4mmodulesPath[24m, which allows you to import extra modules from the nixpkgs package tree without having to somehow make the module aware of the location of the ‘nixpkgs’ or NixOS directories.

                   { modulesPath, ... }: {
                     imports = [
                       (modulesPath + "/profiles/minimal.nix")
                     ];
                   }

           For NixOS, the default value for this option includes at least this argument:

             [1m• [4m[22mpkgs[24m: The nixpkgs package set according to the [1mnixpkgs.pkgs [22moption.

           [4mType:[24m lazy attribute set of raw value

           [4mDeclared[24m [4mby:[0m
               [1m<nixpkgs/lib/modules.nix>[0m

       [1mvim.enableLuaLoader[0m
           Whethere to enable the experimental Lua module loader to speed up the start up process. If ‘true’, this will enable the experimental Lua module loader which:

             [1m• [22moverrides loadfile
             [1m• [22madds the lua loader using the byte-compilation cache
             [1m• [22madds the libs loader
             [1m• [22mremoves the default Neovim loader

               [1mNote[0m
               The Lua module loader is [4mdisabled[24m by default. Before setting this option, please take a look at the [1m[official documentation][22m. This option may be enabled by default in the future.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

       [1mvim.package[0m
           The neovim package to use for the wrapper. This corresponds to the package that will be wrapped with your plugins and settings.

               [1mWarning[0m
               You will need to use an unwrapped package for this option to work as intended. Using an already wrapped package here may yield undesirable results.

           [4mType:[24m package

           [4mDefault:[24m <derivation neovim-unwrapped-0.11.1>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/environment/options.nix>[0m

       [1mvim.additionalRuntimePaths[0m
           Additional runtime paths that will be appended to the active runtimepath of the Neovim. This can be used to add additional lookup paths for configs, plugins, spell languages and other things you would generally place in your [4m$HOME/.config/nvim[24m.

           This is meant as a declarative alternative to throwing files into [4m~/.config/nvim[24m and having the Neovim wrapper pick them up. For more details on ‘vim.o.runtimepath’, and what paths to use; please see [1mthe official documentation[22m[1]

           [4mType:[24m list of (absolute path or string)

           [4mDefault:[24m [ ]

           [4mExample:[0m

               [
                 # absolute path, as a string - impure
                 "$HOME/.config/nvim-extra"

                 # relative path, as a path - pure
                 ./nvim

                 # source type path - pure and reproducible
                 (builtins.source {
                   path = ./runtime;
                   name = "nvim-runtime";
                 })
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

            [1m1. [22mhttps://neovim.io/doc/user/options.html#‘runtimepath’

       [1mvim.assistant.chatgpt.enable[0m
           Whether to enable ChatGPT AI assistant. Requires the environment variable OPENAI_API_KEY to be set.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/chatgpt/chatgpt.nix>[0m

       [1mvim.assistant.chatgpt.mappings.addTests[0m
           [ChatGPT] Add tests

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>aa"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/chatgpt/chatgpt.nix>[0m

       [1mvim.assistant.chatgpt.mappings.chatGpt[0m
           ChatGPT

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>ac"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/chatgpt/chatgpt.nix>[0m

       [1mvim.assistant.chatgpt.mappings.docstring[0m
           [ChatGPT] Docstring

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>ad"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/chatgpt/chatgpt.nix>[0m

       [1mvim.assistant.chatgpt.mappings.editWithInstructions[0m
           [ChatGPT] Edit with instructions

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>ae"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/chatgpt/chatgpt.nix>[0m

       [1mvim.assistant.chatgpt.mappings.explain[0m
           [ChatGPT] Explain code

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>ax"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/chatgpt/chatgpt.nix>[0m

       [1mvim.assistant.chatgpt.mappings.fixBugs[0m
           [ChatGPT] Fix bugs

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>af"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/chatgpt/chatgpt.nix>[0m

       [1mvim.assistant.chatgpt.mappings.grammarCorrection[0m
           [ChatGPT] Grammar correction

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>ag"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/chatgpt/chatgpt.nix>[0m

       [1mvim.assistant.chatgpt.mappings.keyword[0m
           [ChatGPT] Keywords

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>ak"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/chatgpt/chatgpt.nix>[0m

       [1mvim.assistant.chatgpt.mappings.optimize[0m
           [ChatGPT] Optimize code

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>ao"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/chatgpt/chatgpt.nix>[0m

       [1mvim.assistant.chatgpt.mappings.readabilityanalysis[0m
           [ChatGPT] Code reability analysis

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>al"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/chatgpt/chatgpt.nix>[0m

       [1mvim.assistant.chatgpt.mappings.roxygenEdit[0m
           [ChatGPT] Roxygen edit

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>ar"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/chatgpt/chatgpt.nix>[0m

       [1mvim.assistant.chatgpt.mappings.summarize[0m
           [ChatGPT] Summarize

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>as"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/chatgpt/chatgpt.nix>[0m

       [1mvim.assistant.chatgpt.mappings.translate[0m
           [ChatGPT] Translate

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>at"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/chatgpt/chatgpt.nix>[0m

       [1mvim.assistant.chatgpt.setupOpts[0m
           Option table to pass into the setup function of chatgpt

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/chatgpt/chatgpt.nix>[0m

       [1mvim.assistant.codecompanion-nvim.enable[0m
           Whether to enable complementary neovim plugin for codecompanion.nvim.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts[0m
           Option table to pass into the setup function of codecompanion-nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.adapters[0m
           An adapter is what connects Neovim to an LLM.

           [4mType:[24m null or (luaInline)

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.display.action_palette.height[0m
           Height of the action palette.

           [4mType:[24m signed integer

           [4mDefault:[24m 10

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.display.action_palette.opts.show_default_actions[0m
           Whether to enable showing default actions in the action palette.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.display.action_palette.opts.show_default_prompt_library[0m
           Whether to enable showing default prompt library in the action palette.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.display.action_palette.prompt[0m
           Prompt used for interactive LLM calls.

           [4mType:[24m string

           [4mDefault:[24m "Prompt "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.display.action_palette.provider[0m
           Provider used for the action palette.

           [4mType:[24m one of “default”, “telescope”, “mini_pick”

           [4mDefault:[24m "default"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.display.action_palette.width[0m
           Width of the action palette.

           [4mType:[24m signed integer

           [4mDefault:[24m 95

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.display.chat.auto_scroll[0m
           Whether to enable automatic page scrolling.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.display.chat.icons.pinned_buffer[0m
           The icon to represent a pinned buffer.

           [4mType:[24m string

           [4mDefault:[24m " "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.display.chat.icons.watched_buffer[0m
           The icon to represent a watched buffer.

           [4mType:[24m string

           [4mDefault:[24m "👀 "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.display.chat.intro_message[0m
           Message to appear in chat buffer.

           [4mType:[24m string

           [4mDefault:[24m "Welcome to CodeCompanion ✨! Press ? for options."

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.display.chat.separator[0m
           The separator between the different messages in the chat buffer.

           [4mType:[24m string

           [4mDefault:[24m "─"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.display.chat.show_header_separator[0m
           Whether to enable header separators in the chat buffer.

           Set this to false if you’re using an external markdown formatting plugin. .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.display.chat.show_references[0m
           Whether to enable references in the chat buffer.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.display.chat.show_settings[0m
           Whether to enable LLM settings to appear at the top of the chat buffer. .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.display.chat.show_token_count[0m
           Whether to enable the token count for each response.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.display.chat.start_in_insert_mode[0m
           Whether to enable opening the chat buffer in insert mode. .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.display.diff.enabled[0m
           Whether to enable a diff view to see the changes made by the LLM.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.display.diff.close_chat_at[0m
           Close an open chat buffer if the total columns of your display are less than…

           [4mType:[24m signed integer

           [4mDefault:[24m 240

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.display.diff.layout[0m
           Type of split for default provider.

           [4mType:[24m one of “vertical”, “horizontal”

           [4mDefault:[24m "vertical"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.display.diff.provider[0m
           The preferred kind of provider.

           [4mType:[24m one of “default”, “mini_diff”

           [4mDefault:[24m "default"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.display.inline.layout[0m
           Customize how output is created in new buffer.

           [4mType:[24m one of “vertical”, “horizontal”, “buffer”

           [4mDefault:[24m "vertical"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.opts.language[0m
           Specify which language an LLM should respond in.

           [4mType:[24m string

           [4mDefault:[24m "English"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.opts.log_level[0m
           Change the level of logging.

           [4mType:[24m one of “DEBUG”, “INFO”, “ERROR”, “TRACE”

           [4mDefault:[24m "ERROR"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.opts.send_code[0m
           Whether to enable code being sent to the LLM.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.prompt_library[0m
           A prompt library is a collection of prompts that can be used in the action palette.

           [4mType:[24m null or (attribute set)

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.strategies.chat.adapter[0m
           Adapter used for the chat strategy.

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.strategies.chat.keymaps[0m
           Define or override the default keymaps.

           [4mType:[24m null or (attribute set)

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.strategies.chat.roles[0m
           The chat buffer places user and LLM responses under a H2 header. These can be customized in the configuration.

           [4mType:[24m null or (luaInline)

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.strategies.chat.slash_commands[0m
           Slash Commands (invoked with /) let you dynamically insert context into the chat buffer, such as file contents or date/time.

           [4mType:[24m null or (luaInline)

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.strategies.chat.tools[0m
           Configure tools to perform specific tasks when invoked by an LLM.

           [4mType:[24m null or (attribute set)

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.strategies.chat.variables[0m
           Define your own variables to share specific content.

           [4mType:[24m null or (luaInline)

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.strategies.inline.adapter[0m
           Adapter used for the inline strategy.

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.strategies.inline.keymaps.accept_change.n[0m
           Accept the suggested change.

           [4mType:[24m string

           [4mDefault:[24m "ga"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.strategies.inline.keymaps.reject_change.n[0m
           Reject the suggested change.

           [4mType:[24m string

           [4mDefault:[24m "gr"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.codecompanion-nvim.setupOpts.strategies.inline.variables[0m
           Define your own variables to share specific content.

           [4mType:[24m null or (luaInline)

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/codecompanion/codecompanion-nvim.nix>[0m

       [1mvim.assistant.copilot.enable[0m
           Whether to enable GitHub Copilot AI assistant.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/copilot/copilot.nix>[0m

       [1mvim.assistant.copilot.cmp.enable[0m
           Whether to enable nvim-cmp integration for GitHub Copilot.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/copilot/copilot.nix>[0m

       [1mvim.assistant.copilot.mappings.panel.accept[0m
           Accept suggestion

           [4mType:[24m null or string

           [4mDefault:[24m "<CR>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/copilot/copilot.nix>[0m

       [1mvim.assistant.copilot.mappings.panel.jumpNext[0m
           Jump to next suggestion

           [4mType:[24m null or string

           [4mDefault:[24m "]]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/copilot/copilot.nix>[0m

       [1mvim.assistant.copilot.mappings.panel.jumpPrev[0m
           Jump to previous suggestion

           [4mType:[24m null or string

           [4mDefault:[24m "[["

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/copilot/copilot.nix>[0m

       [1mvim.assistant.copilot.mappings.panel.open[0m
           Open suggestions

           [4mType:[24m null or string

           [4mDefault:[24m "<M-CR>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/copilot/copilot.nix>[0m

       [1mvim.assistant.copilot.mappings.panel.refresh[0m
           Refresh suggestions

           [4mType:[24m null or string

           [4mDefault:[24m "gr"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/copilot/copilot.nix>[0m

       [1mvim.assistant.copilot.mappings.suggestion.accept[0m
           Accept suggetion

           [4mType:[24m null or string

           [4mDefault:[24m "<M-l>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/copilot/copilot.nix>[0m

       [1mvim.assistant.copilot.mappings.suggestion.acceptLine[0m
           Accept next line

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/copilot/copilot.nix>[0m

       [1mvim.assistant.copilot.mappings.suggestion.acceptWord[0m
           Accept next word

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/copilot/copilot.nix>[0m

       [1mvim.assistant.copilot.mappings.suggestion.dismiss[0m
           Dismiss suggestion

           [4mType:[24m null or string

           [4mDefault:[24m "<C-]>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/copilot/copilot.nix>[0m

       [1mvim.assistant.copilot.mappings.suggestion.next[0m
           Next suggestion

           [4mType:[24m null or string

           [4mDefault:[24m "<M-]>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/copilot/copilot.nix>[0m

       [1mvim.assistant.copilot.mappings.suggestion.prev[0m
           Previous suggestion

           [4mType:[24m null or string

           [4mDefault:[24m "<M-[>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/copilot/copilot.nix>[0m

       [1mvim.assistant.copilot.setupOpts[0m
           Option table to pass into the setup function of Copilot

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/copilot/copilot.nix>[0m

       [1mvim.assistant.copilot.setupOpts.copilot_node_command[0m
           The command that will be executed to initiate nodejs for GitHub Copilot. Recommended to leave as default.

           [4mType:[24m string

           [4mDefault:[24m "\${pkgs.nodejs-slim.out}/bin/node"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/copilot/copilot.nix>[0m

       [1mvim.assistant.copilot.setupOpts.panel.enabled[0m
           Whether to enable Completion Panel.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/copilot/copilot.nix>[0m

       [1mvim.assistant.copilot.setupOpts.panel.layout.position[0m
           Panel position

           [4mType:[24m one of “bottom”, “top”, “left”, “right”

           [4mDefault:[24m "bottom"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/copilot/copilot.nix>[0m

       [1mvim.assistant.copilot.setupOpts.panel.layout.ratio[0m
           Panel size

           [4mType:[24m floating point number

           [4mDefault:[24m 0.4

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/copilot/copilot.nix>[0m

       [1mvim.assistant.copilot.setupOpts.suggestion.enabled[0m
           Whether to enable Suggestions.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/assistant/copilot/copilot.nix>[0m

       [1mvim.augroups[0m
           A list of Neovim autogroups, which are used to organize and manage related autocommands together. Groups allow multiple autocommands to be cleared or redefined collectively, preventing duplicate definitions.

           Each autogroup consists of a name and a boolean indicating whether to clear existing autocommands.

           [4mType:[24m list of (submodule)

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/autocmds.nix>[0m

       [1mvim.augroups.*.enable[0m
           Whether to enable this autocommand group.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/autocmds.nix>[0m

       [1mvim.augroups.*.clear[0m
           Whether to clear existing autocommands in this group before defining new ones. This helps avoid duplicate autocommands.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/autocmds.nix>[0m

       [1mvim.augroups.*.name[0m
           The name of the autocommand group.

           [4mType:[24m string

           [4mExample:[24m "MyAutoCmdGroup"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/autocmds.nix>[0m

       [1mvim.autocmds[0m
           A list of Neovim autocommands to be registered.

           Each entry defines an autocommand, specifying events, patterns, a callback or Vim command, an optional group, a description, and execution settings.

           [4mType:[24m list of (submodule)

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/autocmds.nix>[0m

       [1mvim.autocmds.*.enable[0m
           Whether to enable this autocommand.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/autocmds.nix>[0m

       [1mvim.autocmds.*.callback[0m
           Lua function to be called when the event(s) are triggered.

           [4mType:[24m null or (luaInline)

           [4mDefault:[24m null

           [4mExample:[0m

               mkLuaInline ''
                 function()
                     print("Saving a Lua file...")
                 end
               '''

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/autocmds.nix>[0m

       [1mvim.autocmds.*.command[0m
           Vim command to be executed when the event(s) are triggered. Cannot be defined if the ‘callback’ option is already defined.

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/autocmds.nix>[0m

       [1mvim.autocmds.*.desc[0m
           A description for the autocommand.

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mExample:[24m "Notify when saving a Lua file"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/autocmds.nix>[0m

       [1mvim.autocmds.*.event[0m
           The event(s) that trigger the autocommand.

           [4mType:[24m null or (list of string)

           [4mDefault:[24m null

           [4mExample:[0m

               [
                 "BufRead"
                 "BufWritePre"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/autocmds.nix>[0m

       [1mvim.autocmds.*.group[0m
           An optional autocommand group to manage related autocommands.

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mExample:[24m "MyAutoCmdGroup"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/autocmds.nix>[0m

       [1mvim.autocmds.*.nested[0m
           Whether to allow nested autocommands to trigger.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/autocmds.nix>[0m

       [1mvim.autocmds.*.once[0m
           Whether to run the autocommand only once.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/autocmds.nix>[0m

       [1mvim.autocmds.*.pattern[0m
           The file pattern(s) that determine when the autocommand applies.

           [4mType:[24m null or (list of string)

           [4mDefault:[24m null

           [4mExample:[0m

               [
                 "*.lua"
                 "*.vim"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/autocmds.nix>[0m

       [1mvim.autocomplete.enableSharedCmpSources[0m
           Whether to enable sources shared by blink.cmp and nvim-cmp.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/module.nix>[0m

       [1mvim.autocomplete.blink-cmp.enable[0m
           Whether to enable blink.cmp.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.friendly-snippets.enable[0m
           Whether to enable friendly-snippets for blink to source from automatically.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.mappings.close[0m
           Close [blink.cmp]

           [4mType:[24m null or string

           [4mDefault:[24m "<C-e>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.mappings.complete[0m
           Complete [blink.cmp]

           [4mType:[24m null or string

           [4mDefault:[24m "<C-Space>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.mappings.confirm[0m
           Confirm [blink.cmp]

           [4mType:[24m null or string

           [4mDefault:[24m "<CR>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.mappings.next[0m
           Next item [blink.cmp]

           [4mType:[24m null or string

           [4mDefault:[24m "<Tab>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.mappings.previous[0m
           Previous item [blink.cmp]

           [4mType:[24m null or string

           [4mDefault:[24m "<S-Tab>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.mappings.scrollDocsDown[0m
           Scroll docs down [blink.cmp]

           [4mType:[24m null or string

           [4mDefault:[24m "<C-f>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.mappings.scrollDocsUp[0m
           Scroll docs up [blink.cmp]

           [4mType:[24m null or string

           [4mDefault:[24m "<C-d>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.setupOpts[0m
           Option table to pass into the setup function of blink.cmp

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.setupOpts.cmdline.keymap[0m
           blink.cmp cmdline keymap

           [4mType:[24m attribute set of list of (string or (luaInline))

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.setupOpts.cmdline.keymap.preset[0m
           keymap presets

           [4mType:[24m one of “default”, “none”, “super-tab”, “enter”

           [4mDefault:[24m "none"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.setupOpts.cmdline.sources[0m
           List of sources to enable for cmdline. Null means use default source list.

           [4mType:[24m null or (list of string)

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.setupOpts.completion.documentation.auto_show[0m
           Show documentation whenever an item is selected

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.setupOpts.completion.documentation.auto_show_delay_ms[0m
           Delay before auto show triggers

           [4mType:[24m signed integer

           [4mDefault:[24m 200

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.setupOpts.completion.menu.auto_show[0m
           Manages the appearance of the completion menu. You may prevent the menu from automatically showing by this option to ‘false’ and manually showing it with the show keymap command.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.setupOpts.fuzzy.implementation[0m
           fuzzy matcher implementation for Blink.

             [1m• [22m‘"lua"’: slower, Lua native fuzzy matcher implementation
             [1m• [22m`“rust”: use the SIMD fuzzy matcher, ‘frizbee’
             [1m• [22m‘"prefer_rust"’: use the rust implementation, but fall back to lua
             [1m• [22m‘"prefer_rust_with_warning"’: use the rust implementation, and fall back to lua if it is not available after emitting a warning.

           [4mType:[24m one of “lua”, “prefer_rust”, “rust”, “prefer_rust_with_warning”

           [4mDefault:[24m "prefer_rust"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.setupOpts.fuzzy.prebuilt_binaries.download[0m
           Auto-downloads prebuilt binaries.

           ::: .{warning} Do not enable this option, as it does [1mnot work [22mon Nix! :::

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.setupOpts.keymap[0m
           blink.cmp keymap

           [4mType:[24m attribute set of list of (string or (luaInline))

           [4mDefault:[24m { }

           [4mExample:[0m

               vim.autocomplete.blink-cmp.setupOpts.keymap = {
                 preset = "none";

                 "<Up>" = ["select_prev" "fallback"];
                 "<C-n>" = [
                   (lib.generators.mkLuaInline '''
                     function(cmp)
                       if some_condition then return end -- runs the next command
                         return true -- doesn't run the next command
                       end,
                   ''')
                   "select_next"
                 ];
               };

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.setupOpts.keymap.preset[0m
           keymap presets

           [4mType:[24m one of “default”, “none”, “super-tab”, “enter”

           [4mDefault:[24m "none"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.setupOpts.sources.default[0m
           Default list of sources to enable for completion.

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "lsp"
                 "path"
                 "snippets"
                 "buffer"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.setupOpts.sources.providers[0m
           Settings for completion providers.

           [4mType:[24m attribute set of (anything)

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.setupOpts.sources.providers.<name>.module[0m
           Provider module.

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.sourcePlugins[0m
           ‘blink.cmp’ sources.

           Attribute names must be source names used in [1mvim.autocomplete.blink-cmp.setupOpts.sources.default[22m.

           [4mType:[24m attribute set of (submodule)

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.sourcePlugins.<name>.enable[0m
           Whether to enable this source.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

       [1mvim.autocomplete.blink-cmp.sourcePlugins.<name>.package[0m
           ‘blink-cmp’ source plugin package.

           [4mType:[24m null or package or one of “blink-cmp”, “aerial-nvim”, “alpha-nvim”, “base16”, “blink-cmp-spell”, “blink-compat”, “blink-emoji-nvim”, “blink-ripgrep-nvim”, “bufdelete-nvim”, “catppuccin”, “ccc-nvim”, “cellular-automaton-nvim”, “chatgpt-nvim”,
           “cheatsheet-nvim”, “cinnamon-nvim”, “cmp-buffer”, “cmp-luasnip”, “cmp-nvim-lsp”, “cmp-path”, “cmp-treesitter”, “codecompanion-nvim”, “codewindow-nvim”, “comment-nvim”, “conform-nvim”, “copilot-cmp”, “copilot-lua”, “crates-nvim”, “csharpls-extended-lsp-nvim”,
           “dashboard-nvim”, “diffview-nvim”, “direnv-vim”, “dracula”, “dressing-nvim”, “elixir-tools-nvim”, “fastaction-nvim”, “fidget-nvim”, “flash-nvim”, “flutter-tools-nvim”, “friendly-snippets”, “fzf-lua”, “gesture-nvim”, “git-conflict-nvim”, “github”,
           “gitlinker-nvim”, “gitsigns-nvim”, “glow-nvim”, “gruvbox”, “hardtime-nvim”, “harpoon”, “haskell-tools-nvim”, “highlight-undo-nvim”, “hop-nvim”, “hydra-nvim”, “icon-picker-nvim”, “image-nvim”, “img-clip”, “indent-blankline-nvim”, “lazydev-nvim”, “leap-nvim”,
           “leetcode-nvim”, “lsp-signature-nvim”, “lspkind-nvim”, “lspsaga-nvim”, “lua-utils-nvim”, “lualine-nvim”, “luasnip”, “lz-n”, “lzn-auto-require”, “markview-nvim”, “mind-nvim”, “mini-ai”, “mini-align”, “mini-animate”, “mini-base16”, “mini-basics”,
           “mini-bracketed”, “mini-bufremove”, “mini-clue”, “mini-colors”, “mini-comment”, “mini-completion”, “mini-cursorword”, “mini-diff”, “mini-doc”, “mini-extra”, “mini-files”, “mini-fuzzy”, “mini-git”, “mini-hipatterns”, “mini-hues”, “mini-icons”,
           “mini-indentscope”, “mini-jump”, “mini-jump2d”, “mini-map”, “mini-misc”, “mini-move”, “mini-notify”, “mini-operators”, “mini-pairs”, “mini-pick”, “mini-sessions”, “mini-snippets”, “mini-splitjoin”, “mini-starter”, “mini-statusline”, “mini-surround”,
           “mini-tabline”, “mini-test”, “mini-trailspace”, “mini-visits”, “minimap-vim”, “mkdir-nvim”, “modes-nvim”, “multicursors-nvim”, “neo-tree-nvim”, “neocord”, “neorg”, “neorg-telescope”, “neovim-session-manager”, “new-file-template-nvim”, “nix-develop-nvim”,
           “noice-nvim”, “none-ls-nvim”, “nord”, “nui-nvim”, “nvim-autopairs”, “nvim-bufferline-lua”, “nvim-cmp”, “nvim-colorizer-lua”, “nvim-cursorline”, “nvim-dap”, “nvim-dap-go”, “nvim-dap-ui”, “nvim-docs-view”, “nvim-lightbulb”, “nvim-lint”, “nvim-lspconfig”,
           “nvim-metals”, “nvim-navbuddy”, “nvim-navic”, “nvim-neoclip-lua”, “nvim-nio”, “nvim-notify”, “nvim-scrollbar”, “nvim-surround”, “nvim-tree-lua”, “nvim-treesitter-context”, “nvim-treesitter-textobjects”, “nvim-ts-autotag”, “nvim-ufo”, “nvim-web-devicons”,
           “obsidian-nvim”, “oil-nvim”, “omnisharp-extended-lsp-nvim”, “onedark”, “orgmode”, “otter-nvim”, “oxocarbon”, “pathlib-nvim”, “plenary-nvim”, “precognition-nvim”, “project-nvim”, “promise-async”, “rainbow-delimiters-nvim”, “registers-nvim”,
           “render-markdown-nvim”, “rose-pine”, “rtp-nvim”, “run-nvim”, “rustaceanvim”, “smartcolumn-nvim”, “snacks-nvim”, “solarized-osaka”, “sqls-nvim”, “tabular”, “telescope”, “tiny-devicons-auto-colors-nvim”, “todo-comments-nvim”, “toggleterm-nvim”, “tokyonight”,
           “trouble”, “ts-error-translator-nvim”, “typst-preview-nvim”, “vim-dirtytalk”, “vim-fugitive”, “vim-illuminate”, “vim-markdown”, “vim-repeat”, “vim-sleuth”, “vim-startify”, “which-key-nvim”, “yanky-nvim”, “nvim-treesitter”, “flutter-tools-patched”,
           “vim-repeat”

       [1mvim.autocomplete.blink-cmp.sourcePlugins.<name>.module[0m
           Value of [1mvim.autocomplete.blink-cmp.setupOpts.sources.providers.<name>.module[22m.

           Should be present in the source’s documentation.

           [4mType:[24m string

       [1mvim.autocomplete.blink-cmp.sourcePlugins.emoji.enable[0m
           Whether to enable emoji source.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.sourcePlugins.emoji.package[0m
           ‘blink-cmp’ emoji source plugin package.

           [4mType:[24m null or package or one of “blink-cmp”, “aerial-nvim”, “alpha-nvim”, “base16”, “blink-cmp-spell”, “blink-compat”, “blink-emoji-nvim”, “blink-ripgrep-nvim”, “bufdelete-nvim”, “catppuccin”, “ccc-nvim”, “cellular-automaton-nvim”, “chatgpt-nvim”,
           “cheatsheet-nvim”, “cinnamon-nvim”, “cmp-buffer”, “cmp-luasnip”, “cmp-nvim-lsp”, “cmp-path”, “cmp-treesitter”, “codecompanion-nvim”, “codewindow-nvim”, “comment-nvim”, “conform-nvim”, “copilot-cmp”, “copilot-lua”, “crates-nvim”, “csharpls-extended-lsp-nvim”,
           “dashboard-nvim”, “diffview-nvim”, “direnv-vim”, “dracula”, “dressing-nvim”, “elixir-tools-nvim”, “fastaction-nvim”, “fidget-nvim”, “flash-nvim”, “flutter-tools-nvim”, “friendly-snippets”, “fzf-lua”, “gesture-nvim”, “git-conflict-nvim”, “github”,
           “gitlinker-nvim”, “gitsigns-nvim”, “glow-nvim”, “gruvbox”, “hardtime-nvim”, “harpoon”, “haskell-tools-nvim”, “highlight-undo-nvim”, “hop-nvim”, “hydra-nvim”, “icon-picker-nvim”, “image-nvim”, “img-clip”, “indent-blankline-nvim”, “lazydev-nvim”, “leap-nvim”,
           “leetcode-nvim”, “lsp-signature-nvim”, “lspkind-nvim”, “lspsaga-nvim”, “lua-utils-nvim”, “lualine-nvim”, “luasnip”, “lz-n”, “lzn-auto-require”, “markview-nvim”, “mind-nvim”, “mini-ai”, “mini-align”, “mini-animate”, “mini-base16”, “mini-basics”,
           “mini-bracketed”, “mini-bufremove”, “mini-clue”, “mini-colors”, “mini-comment”, “mini-completion”, “mini-cursorword”, “mini-diff”, “mini-doc”, “mini-extra”, “mini-files”, “mini-fuzzy”, “mini-git”, “mini-hipatterns”, “mini-hues”, “mini-icons”,
           “mini-indentscope”, “mini-jump”, “mini-jump2d”, “mini-map”, “mini-misc”, “mini-move”, “mini-notify”, “mini-operators”, “mini-pairs”, “mini-pick”, “mini-sessions”, “mini-snippets”, “mini-splitjoin”, “mini-starter”, “mini-statusline”, “mini-surround”,
           “mini-tabline”, “mini-test”, “mini-trailspace”, “mini-visits”, “minimap-vim”, “mkdir-nvim”, “modes-nvim”, “multicursors-nvim”, “neo-tree-nvim”, “neocord”, “neorg”, “neorg-telescope”, “neovim-session-manager”, “new-file-template-nvim”, “nix-develop-nvim”,
           “noice-nvim”, “none-ls-nvim”, “nord”, “nui-nvim”, “nvim-autopairs”, “nvim-bufferline-lua”, “nvim-cmp”, “nvim-colorizer-lua”, “nvim-cursorline”, “nvim-dap”, “nvim-dap-go”, “nvim-dap-ui”, “nvim-docs-view”, “nvim-lightbulb”, “nvim-lint”, “nvim-lspconfig”,
           “nvim-metals”, “nvim-navbuddy”, “nvim-navic”, “nvim-neoclip-lua”, “nvim-nio”, “nvim-notify”, “nvim-scrollbar”, “nvim-surround”, “nvim-tree-lua”, “nvim-treesitter-context”, “nvim-treesitter-textobjects”, “nvim-ts-autotag”, “nvim-ufo”, “nvim-web-devicons”,
           “obsidian-nvim”, “oil-nvim”, “omnisharp-extended-lsp-nvim”, “onedark”, “orgmode”, “otter-nvim”, “oxocarbon”, “pathlib-nvim”, “plenary-nvim”, “precognition-nvim”, “project-nvim”, “promise-async”, “rainbow-delimiters-nvim”, “registers-nvim”,
           “render-markdown-nvim”, “rose-pine”, “rtp-nvim”, “run-nvim”, “rustaceanvim”, “smartcolumn-nvim”, “snacks-nvim”, “solarized-osaka”, “sqls-nvim”, “tabular”, “telescope”, “tiny-devicons-auto-colors-nvim”, “todo-comments-nvim”, “toggleterm-nvim”, “tokyonight”,
           “trouble”, “ts-error-translator-nvim”, “typst-preview-nvim”, “vim-dirtytalk”, “vim-fugitive”, “vim-illuminate”, “vim-markdown”, “vim-repeat”, “vim-sleuth”, “vim-startify”, “which-key-nvim”, “yanky-nvim”, “nvim-treesitter”, “flutter-tools-patched”,
           “vim-repeat”

           [4mDefault:[24m "blink-emoji-nvim"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.sourcePlugins.emoji.module[0m
           Value of [1mvim.autocomplete.blink-cmp.setupOpts.sources.providers.emoji.module[22m.

           [4mType:[24m string

           [4mDefault:[24m "blink-emoji"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.sourcePlugins.ripgrep.enable[0m
           Whether to enable ripgrep source.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.sourcePlugins.ripgrep.package[0m
           ‘blink-cmp’ ripgrep source plugin package.

           [4mType:[24m null or package or one of “blink-cmp”, “aerial-nvim”, “alpha-nvim”, “base16”, “blink-cmp-spell”, “blink-compat”, “blink-emoji-nvim”, “blink-ripgrep-nvim”, “bufdelete-nvim”, “catppuccin”, “ccc-nvim”, “cellular-automaton-nvim”, “chatgpt-nvim”,
           “cheatsheet-nvim”, “cinnamon-nvim”, “cmp-buffer”, “cmp-luasnip”, “cmp-nvim-lsp”, “cmp-path”, “cmp-treesitter”, “codecompanion-nvim”, “codewindow-nvim”, “comment-nvim”, “conform-nvim”, “copilot-cmp”, “copilot-lua”, “crates-nvim”, “csharpls-extended-lsp-nvim”,
           “dashboard-nvim”, “diffview-nvim”, “direnv-vim”, “dracula”, “dressing-nvim”, “elixir-tools-nvim”, “fastaction-nvim”, “fidget-nvim”, “flash-nvim”, “flutter-tools-nvim”, “friendly-snippets”, “fzf-lua”, “gesture-nvim”, “git-conflict-nvim”, “github”,
           “gitlinker-nvim”, “gitsigns-nvim”, “glow-nvim”, “gruvbox”, “hardtime-nvim”, “harpoon”, “haskell-tools-nvim”, “highlight-undo-nvim”, “hop-nvim”, “hydra-nvim”, “icon-picker-nvim”, “image-nvim”, “img-clip”, “indent-blankline-nvim”, “lazydev-nvim”, “leap-nvim”,
           “leetcode-nvim”, “lsp-signature-nvim”, “lspkind-nvim”, “lspsaga-nvim”, “lua-utils-nvim”, “lualine-nvim”, “luasnip”, “lz-n”, “lzn-auto-require”, “markview-nvim”, “mind-nvim”, “mini-ai”, “mini-align”, “mini-animate”, “mini-base16”, “mini-basics”,
           “mini-bracketed”, “mini-bufremove”, “mini-clue”, “mini-colors”, “mini-comment”, “mini-completion”, “mini-cursorword”, “mini-diff”, “mini-doc”, “mini-extra”, “mini-files”, “mini-fuzzy”, “mini-git”, “mini-hipatterns”, “mini-hues”, “mini-icons”,
           “mini-indentscope”, “mini-jump”, “mini-jump2d”, “mini-map”, “mini-misc”, “mini-move”, “mini-notify”, “mini-operators”, “mini-pairs”, “mini-pick”, “mini-sessions”, “mini-snippets”, “mini-splitjoin”, “mini-starter”, “mini-statusline”, “mini-surround”,
           “mini-tabline”, “mini-test”, “mini-trailspace”, “mini-visits”, “minimap-vim”, “mkdir-nvim”, “modes-nvim”, “multicursors-nvim”, “neo-tree-nvim”, “neocord”, “neorg”, “neorg-telescope”, “neovim-session-manager”, “new-file-template-nvim”, “nix-develop-nvim”,
           “noice-nvim”, “none-ls-nvim”, “nord”, “nui-nvim”, “nvim-autopairs”, “nvim-bufferline-lua”, “nvim-cmp”, “nvim-colorizer-lua”, “nvim-cursorline”, “nvim-dap”, “nvim-dap-go”, “nvim-dap-ui”, “nvim-docs-view”, “nvim-lightbulb”, “nvim-lint”, “nvim-lspconfig”,
           “nvim-metals”, “nvim-navbuddy”, “nvim-navic”, “nvim-neoclip-lua”, “nvim-nio”, “nvim-notify”, “nvim-scrollbar”, “nvim-surround”, “nvim-tree-lua”, “nvim-treesitter-context”, “nvim-treesitter-textobjects”, “nvim-ts-autotag”, “nvim-ufo”, “nvim-web-devicons”,
           “obsidian-nvim”, “oil-nvim”, “omnisharp-extended-lsp-nvim”, “onedark”, “orgmode”, “otter-nvim”, “oxocarbon”, “pathlib-nvim”, “plenary-nvim”, “precognition-nvim”, “project-nvim”, “promise-async”, “rainbow-delimiters-nvim”, “registers-nvim”,
           “render-markdown-nvim”, “rose-pine”, “rtp-nvim”, “run-nvim”, “rustaceanvim”, “smartcolumn-nvim”, “snacks-nvim”, “solarized-osaka”, “sqls-nvim”, “tabular”, “telescope”, “tiny-devicons-auto-colors-nvim”, “todo-comments-nvim”, “toggleterm-nvim”, “tokyonight”,
           “trouble”, “ts-error-translator-nvim”, “typst-preview-nvim”, “vim-dirtytalk”, “vim-fugitive”, “vim-illuminate”, “vim-markdown”, “vim-repeat”, “vim-sleuth”, “vim-startify”, “which-key-nvim”, “yanky-nvim”, “nvim-treesitter”, “flutter-tools-patched”,
           “vim-repeat”

           [4mDefault:[24m "blink-ripgrep-nvim"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.sourcePlugins.ripgrep.module[0m
           Value of [1mvim.autocomplete.blink-cmp.setupOpts.sources.providers.ripgrep.module[22m.

           [4mType:[24m string

           [4mDefault:[24m "blink-ripgrep"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.sourcePlugins.spell.enable[0m
           Whether to enable spell source.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.sourcePlugins.spell.package[0m
           ‘blink-cmp’ spell source plugin package.

           [4mType:[24m null or package or one of “blink-cmp”, “aerial-nvim”, “alpha-nvim”, “base16”, “blink-cmp-spell”, “blink-compat”, “blink-emoji-nvim”, “blink-ripgrep-nvim”, “bufdelete-nvim”, “catppuccin”, “ccc-nvim”, “cellular-automaton-nvim”, “chatgpt-nvim”,
           “cheatsheet-nvim”, “cinnamon-nvim”, “cmp-buffer”, “cmp-luasnip”, “cmp-nvim-lsp”, “cmp-path”, “cmp-treesitter”, “codecompanion-nvim”, “codewindow-nvim”, “comment-nvim”, “conform-nvim”, “copilot-cmp”, “copilot-lua”, “crates-nvim”, “csharpls-extended-lsp-nvim”,
           “dashboard-nvim”, “diffview-nvim”, “direnv-vim”, “dracula”, “dressing-nvim”, “elixir-tools-nvim”, “fastaction-nvim”, “fidget-nvim”, “flash-nvim”, “flutter-tools-nvim”, “friendly-snippets”, “fzf-lua”, “gesture-nvim”, “git-conflict-nvim”, “github”,
           “gitlinker-nvim”, “gitsigns-nvim”, “glow-nvim”, “gruvbox”, “hardtime-nvim”, “harpoon”, “haskell-tools-nvim”, “highlight-undo-nvim”, “hop-nvim”, “hydra-nvim”, “icon-picker-nvim”, “image-nvim”, “img-clip”, “indent-blankline-nvim”, “lazydev-nvim”, “leap-nvim”,
           “leetcode-nvim”, “lsp-signature-nvim”, “lspkind-nvim”, “lspsaga-nvim”, “lua-utils-nvim”, “lualine-nvim”, “luasnip”, “lz-n”, “lzn-auto-require”, “markview-nvim”, “mind-nvim”, “mini-ai”, “mini-align”, “mini-animate”, “mini-base16”, “mini-basics”,
           “mini-bracketed”, “mini-bufremove”, “mini-clue”, “mini-colors”, “mini-comment”, “mini-completion”, “mini-cursorword”, “mini-diff”, “mini-doc”, “mini-extra”, “mini-files”, “mini-fuzzy”, “mini-git”, “mini-hipatterns”, “mini-hues”, “mini-icons”,
           “mini-indentscope”, “mini-jump”, “mini-jump2d”, “mini-map”, “mini-misc”, “mini-move”, “mini-notify”, “mini-operators”, “mini-pairs”, “mini-pick”, “mini-sessions”, “mini-snippets”, “mini-splitjoin”, “mini-starter”, “mini-statusline”, “mini-surround”,
           “mini-tabline”, “mini-test”, “mini-trailspace”, “mini-visits”, “minimap-vim”, “mkdir-nvim”, “modes-nvim”, “multicursors-nvim”, “neo-tree-nvim”, “neocord”, “neorg”, “neorg-telescope”, “neovim-session-manager”, “new-file-template-nvim”, “nix-develop-nvim”,
           “noice-nvim”, “none-ls-nvim”, “nord”, “nui-nvim”, “nvim-autopairs”, “nvim-bufferline-lua”, “nvim-cmp”, “nvim-colorizer-lua”, “nvim-cursorline”, “nvim-dap”, “nvim-dap-go”, “nvim-dap-ui”, “nvim-docs-view”, “nvim-lightbulb”, “nvim-lint”, “nvim-lspconfig”,
           “nvim-metals”, “nvim-navbuddy”, “nvim-navic”, “nvim-neoclip-lua”, “nvim-nio”, “nvim-notify”, “nvim-scrollbar”, “nvim-surround”, “nvim-tree-lua”, “nvim-treesitter-context”, “nvim-treesitter-textobjects”, “nvim-ts-autotag”, “nvim-ufo”, “nvim-web-devicons”,
           “obsidian-nvim”, “oil-nvim”, “omnisharp-extended-lsp-nvim”, “onedark”, “orgmode”, “otter-nvim”, “oxocarbon”, “pathlib-nvim”, “plenary-nvim”, “precognition-nvim”, “project-nvim”, “promise-async”, “rainbow-delimiters-nvim”, “registers-nvim”,
           “render-markdown-nvim”, “rose-pine”, “rtp-nvim”, “run-nvim”, “rustaceanvim”, “smartcolumn-nvim”, “snacks-nvim”, “solarized-osaka”, “sqls-nvim”, “tabular”, “telescope”, “tiny-devicons-auto-colors-nvim”, “todo-comments-nvim”, “toggleterm-nvim”, “tokyonight”,
           “trouble”, “ts-error-translator-nvim”, “typst-preview-nvim”, “vim-dirtytalk”, “vim-fugitive”, “vim-illuminate”, “vim-markdown”, “vim-repeat”, “vim-sleuth”, “vim-startify”, “which-key-nvim”, “yanky-nvim”, “nvim-treesitter”, “flutter-tools-patched”,
           “vim-repeat”

           [4mDefault:[24m "blink-cmp-spell"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.blink-cmp.sourcePlugins.spell.module[0m
           Value of [1mvim.autocomplete.blink-cmp.setupOpts.sources.providers.spell.module[22m.

           [4mType:[24m string

           [4mDefault:[24m "blink-cmp-spell"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/blink-cmp/blink-cmp.nix>[0m

       [1mvim.autocomplete.nvim-cmp.enable[0m
           Whether to enable nvim-cmp.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/nvim-cmp/nvim-cmp.nix>[0m

       [1mvim.autocomplete.nvim-cmp.format[0m
           The function used to customize the completion menu entries. This is outside of ‘setupOpts’ to allow for an easier integration with lspkind.nvim.

           See ‘:help cmp-config.formatting.format’.

           [4mType:[24m null or (luaInline)

           [4mDefault:[0m

               function(entry, vim_item)
                 vim_item.menu = (${toLuaObject config.vim.autocomplete.nvim-cmp.sources})[entry.source.name]
                 return vim_item
               end

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/nvim-cmp/nvim-cmp.nix>[0m

       [1mvim.autocomplete.nvim-cmp.mappings.close[0m
           Close [nvim-cmp]

           [4mType:[24m null or string

           [4mDefault:[24m "<C-e>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/nvim-cmp/nvim-cmp.nix>[0m

       [1mvim.autocomplete.nvim-cmp.mappings.complete[0m
           Complete [nvim-cmp]

           [4mType:[24m null or string

           [4mDefault:[24m "<C-Space>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/nvim-cmp/nvim-cmp.nix>[0m

       [1mvim.autocomplete.nvim-cmp.mappings.confirm[0m
           Confirm [nvim-cmp]

           [4mType:[24m null or string

           [4mDefault:[24m "<CR>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/nvim-cmp/nvim-cmp.nix>[0m

       [1mvim.autocomplete.nvim-cmp.mappings.next[0m
           Next item [nvim-cmp]

           [4mType:[24m null or string

           [4mDefault:[24m "<Tab>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/nvim-cmp/nvim-cmp.nix>[0m

       [1mvim.autocomplete.nvim-cmp.mappings.previous[0m
           Previous item [nvim-cmp]

           [4mType:[24m null or string

           [4mDefault:[24m "<S-Tab>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/nvim-cmp/nvim-cmp.nix>[0m

       [1mvim.autocomplete.nvim-cmp.mappings.scrollDocsDown[0m
           Scroll docs down [nvim-cmp]

           [4mType:[24m null or string

           [4mDefault:[24m "<C-f>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/nvim-cmp/nvim-cmp.nix>[0m

       [1mvim.autocomplete.nvim-cmp.mappings.scrollDocsUp[0m
           Scroll docs up [nvim-cmp]

           [4mType:[24m null or string

           [4mDefault:[24m "<C-d>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/nvim-cmp/nvim-cmp.nix>[0m

       [1mvim.autocomplete.nvim-cmp.setupOpts[0m
           Option table to pass into the setup function of the autocomplete plugin

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/nvim-cmp/nvim-cmp.nix>[0m

       [1mvim.autocomplete.nvim-cmp.setupOpts.completion.completeopt[0m
           A comma-separated list of options for completion.

           See ‘:help completeopt’ for the complete list.

           [4mType:[24m string

           [4mDefault:[24m "menu,menuone,noinsert"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/nvim-cmp/nvim-cmp.nix>[0m

       [1mvim.autocomplete.nvim-cmp.setupOpts.sorting.comparators[0m
           The comparator functions used for sorting completions.

           You can either pass a valid inline lua function (see ‘:help cmp-config.sorting.comparators’), or a string, in which case the builtin comparator with that name will be used.

           A ‘deprio’ function and a ‘kinds’ (‘require("cmp.types").lsp.CompletionItemKind’) variable is provided above ‘setupOpts’. By passing a type to the function, the returned function will be a comparator that always ranks the specified kind the lowest.

           [4mType:[24m mergeless list of (string or (luaInline))

           [4mDefault:[0m

               [
                 {
                   _type = "lua-inline";
                   expr = "deprio(kinds.Text)";
                 }
                 {
                   _type = "lua-inline";
                   expr = "deprio(kinds.Snippet)";
                 }
                 "offset"
                 "exact"
                 "score"
                 "kind"
                 "length"
                 "sort_text"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/nvim-cmp/nvim-cmp.nix>[0m

       [1mvim.autocomplete.nvim-cmp.sourcePlugins[0m
           List of source plugins used by nvim-cmp.

           [4mType:[24m list of (null or package or one of “blink-cmp”, “aerial-nvim”, “alpha-nvim”, “base16”, “blink-cmp-spell”, “blink-compat”, “blink-emoji-nvim”, “blink-ripgrep-nvim”, “bufdelete-nvim”, “catppuccin”, “ccc-nvim”, “cellular-automaton-nvim”, “chatgpt-nvim”,
           “cheatsheet-nvim”, “cinnamon-nvim”, “cmp-buffer”, “cmp-luasnip”, “cmp-nvim-lsp”, “cmp-path”, “cmp-treesitter”, “codecompanion-nvim”, “codewindow-nvim”, “comment-nvim”, “conform-nvim”, “copilot-cmp”, “copilot-lua”, “crates-nvim”, “csharpls-extended-lsp-nvim”,
           “dashboard-nvim”, “diffview-nvim”, “direnv-vim”, “dracula”, “dressing-nvim”, “elixir-tools-nvim”, “fastaction-nvim”, “fidget-nvim”, “flash-nvim”, “flutter-tools-nvim”, “friendly-snippets”, “fzf-lua”, “gesture-nvim”, “git-conflict-nvim”, “github”,
           “gitlinker-nvim”, “gitsigns-nvim”, “glow-nvim”, “gruvbox”, “hardtime-nvim”, “harpoon”, “haskell-tools-nvim”, “highlight-undo-nvim”, “hop-nvim”, “hydra-nvim”, “icon-picker-nvim”, “image-nvim”, “img-clip”, “indent-blankline-nvim”, “lazydev-nvim”, “leap-nvim”,
           “leetcode-nvim”, “lsp-signature-nvim”, “lspkind-nvim”, “lspsaga-nvim”, “lua-utils-nvim”, “lualine-nvim”, “luasnip”, “lz-n”, “lzn-auto-require”, “markview-nvim”, “mind-nvim”, “mini-ai”, “mini-align”, “mini-animate”, “mini-base16”, “mini-basics”,
           “mini-bracketed”, “mini-bufremove”, “mini-clue”, “mini-colors”, “mini-comment”, “mini-completion”, “mini-cursorword”, “mini-diff”, “mini-doc”, “mini-extra”, “mini-files”, “mini-fuzzy”, “mini-git”, “mini-hipatterns”, “mini-hues”, “mini-icons”,
           “mini-indentscope”, “mini-jump”, “mini-jump2d”, “mini-map”, “mini-misc”, “mini-move”, “mini-notify”, “mini-operators”, “mini-pairs”, “mini-pick”, “mini-sessions”, “mini-snippets”, “mini-splitjoin”, “mini-starter”, “mini-statusline”, “mini-surround”,
           “mini-tabline”, “mini-test”, “mini-trailspace”, “mini-visits”, “minimap-vim”, “mkdir-nvim”, “modes-nvim”, “multicursors-nvim”, “neo-tree-nvim”, “neocord”, “neorg”, “neorg-telescope”, “neovim-session-manager”, “new-file-template-nvim”, “nix-develop-nvim”,
           “noice-nvim”, “none-ls-nvim”, “nord”, “nui-nvim”, “nvim-autopairs”, “nvim-bufferline-lua”, “nvim-cmp”, “nvim-colorizer-lua”, “nvim-cursorline”, “nvim-dap”, “nvim-dap-go”, “nvim-dap-ui”, “nvim-docs-view”, “nvim-lightbulb”, “nvim-lint”, “nvim-lspconfig”,
           “nvim-metals”, “nvim-navbuddy”, “nvim-navic”, “nvim-neoclip-lua”, “nvim-nio”, “nvim-notify”, “nvim-scrollbar”, “nvim-surround”, “nvim-tree-lua”, “nvim-treesitter-context”, “nvim-treesitter-textobjects”, “nvim-ts-autotag”, “nvim-ufo”, “nvim-web-devicons”,
           “obsidian-nvim”, “oil-nvim”, “omnisharp-extended-lsp-nvim”, “onedark”, “orgmode”, “otter-nvim”, “oxocarbon”, “pathlib-nvim”, “plenary-nvim”, “precognition-nvim”, “project-nvim”, “promise-async”, “rainbow-delimiters-nvim”, “registers-nvim”,
           “render-markdown-nvim”, “rose-pine”, “rtp-nvim”, “run-nvim”, “rustaceanvim”, “smartcolumn-nvim”, “snacks-nvim”, “solarized-osaka”, “sqls-nvim”, “tabular”, “telescope”, “tiny-devicons-auto-colors-nvim”, “todo-comments-nvim”, “toggleterm-nvim”, “tokyonight”,
           “trouble”, “ts-error-translator-nvim”, “typst-preview-nvim”, “vim-dirtytalk”, “vim-fugitive”, “vim-illuminate”, “vim-markdown”, “vim-repeat”, “vim-sleuth”, “vim-startify”, “which-key-nvim”, “yanky-nvim”, “nvim-treesitter”, “flutter-tools-patched”,
           “vim-repeat”)

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/nvim-cmp/nvim-cmp.nix>[0m

       [1mvim.autocomplete.nvim-cmp.sources[0m
           The list of sources used by nvim-cmp

           [4mType:[24m attribute set of (null or string)

           [4mDefault:[0m

               {
                 buffer = "[Buffer]";
                 nvim-cmp = null;
                 path = "[Path]";
               }

           [4mExample:[0m

               {
                 buffer = "[Buffer]";
                 nvim-cmp = null;
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/completion/nvim-cmp/nvim-cmp.nix>[0m

       [1mvim.autopairs.nvim-autopairs.enable[0m
           Whether to enable autopairs.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/autopairs/nvim-autopairs/nvim-autopairs.nix>[0m

       [1mvim.autopairs.nvim-autopairs.setupOpts[0m
           Option table to pass into the setup function of nvim-autopairs

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/autopairs/nvim-autopairs/nvim-autopairs.nix>[0m

       [1mvim.bell[0m
           Set how bells are handled. Options: on, visual or none

           [4mType:[24m one of “none”, “visual”, “on”

           [4mDefault:[24m "none"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/basic.nix>[0m

       [1mvim.binds.cheatsheet.enable[0m
           Whether to enable cheatsheet-nvim: searchable cheatsheet for nvim using telescope.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/binds/cheatsheet/cheatsheet.nix>[0m

       [1mvim.binds.hardtime-nvim.enable[0m
           Whether to enable hardtime helper for no repeat keybinds.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/binds/hardtime/hardtime.nix>[0m

       [1mvim.binds.hardtime-nvim.setupOpts[0m
           Option table to pass into the setup function of hardtime-nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/binds/hardtime/hardtime.nix>[0m

       [1mvim.binds.whichKey.enable[0m
           Whether to enable which-key keybind helper menu.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/binds/which-key/which-key.nix>[0m

       [1mvim.binds.whichKey.register[0m
           Register label for which-key keybind helper menu

           [4mType:[24m attribute set of (null or string)

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/binds/which-key/which-key.nix>[0m

       [1mvim.binds.whichKey.setupOpts[0m
           Option table to pass into the setup function of which-key

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/binds/which-key/which-key.nix>[0m

       [1mvim.binds.whichKey.setupOpts.notify[0m
           Show a warning when issues were detected with mappings

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/binds/which-key/which-key.nix>[0m

       [1mvim.binds.whichKey.setupOpts.preset[0m
           The default preset for the which-key window

           [4mType:[24m one of “classic”, “modern”, “helix”

           [4mDefault:[24m "modern"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/binds/which-key/which-key.nix>[0m

       [1mvim.binds.whichKey.setupOpts.replace[0m
           Functions/Lua Patterns for formatting the labels

           [4mType:[24m attribute set

           [4mDefault:[0m

               {
                 "<cr>" = "RETURN";
                 "<leader>" = "SPACE";
                 "<space>" = "SPACE";
                 "<tab>" = "TAB";
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/binds/which-key/which-key.nix>[0m

       [1mvim.binds.whichKey.setupOpts.win.border[0m
           Which-key window border style

           [4mType:[24m string

           [4mDefault:[24m "rounded"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/binds/which-key/which-key.nix>[0m

       [1mvim.build.finalPackage[0m
           final output package

           [4mType:[24m package [4m(read[24m [4monly)[0m

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/build/options.nix>[0m

       [1mvim.clipboard.enable[0m
           Whether to enable clipboard management for Neovim. Users may still choose to manage their clipboard through [1mvim.options[22m[1] should they wish to avoid using this module. .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/clipboard.nix>[0m

            [1m1. [22msee the [1mvim.options [22moption

       [1mvim.clipboard.providers[0m
           Clipboard providers for which packages will be added to nvf’s [1mextraPackages[22m. The ‘package’ field may be set to ‘null’ if related packages are already found in system packages to potentially reduce closure sizes.

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/clipboard.nix>[0m

       [1mvim.clipboard.providers.wl-copy.enable[0m
           Whether to enable wl-copy.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/clipboard.nix>[0m

       [1mvim.clipboard.providers.wl-copy.package[0m
           The wl-clipboard package to use.

           [4mType:[24m null or package

           [4mDefault:[24m pkgs.wl-clipboard

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/clipboard.nix>[0m

       [1mvim.clipboard.providers.xclip.enable[0m
           Whether to enable xclip.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/clipboard.nix>[0m

       [1mvim.clipboard.providers.xclip.package[0m
           The xclip package to use.

           [4mType:[24m null or package

           [4mDefault:[24m pkgs.xclip

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/clipboard.nix>[0m

       [1mvim.clipboard.providers.xsel.enable[0m
           Whether to enable xsel.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/clipboard.nix>[0m

       [1mvim.clipboard.providers.xsel.package[0m
           The xsel package to use.

           [4mType:[24m null or package

           [4mDefault:[24m pkgs.xsel

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/clipboard.nix>[0m

       [1mvim.clipboard.registers[0m
           The register to be used by the Neovim clipboard. Recognized types are:

             [1m• [22munnamed: Vim will use the clipboard register ‘"*"’ for all yank, delete, change and put operations which would normally go to the unnamed register.

             [1m• [22munnamedplus: A variant of the “unnamed” flag which uses the clipboard register ‘"+"’ ([1m:h quoteplus[22m) instead of register ‘"*"’ for all yank, delete, change and put operations which would normally go to the unnamed register.

           When ‘unnamed’ and ‘unnamedplus’ is included simultaneously yank and delete operations (but not put) will additionally copy the text into register ‘"*"’.

           Please see [1m:h clipboard [22mfor more details.

           [4mType:[24m string or list of string

           [4mDefault:[24m ""

           [4mExample:[24m "unnamedplus"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/clipboard.nix>[0m

       [1mvim.comments.comment-nvim.enable[0m
           Whether to enable smart and powerful comment plugin for neovim comment-nvim.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/comments/comment-nvim/comment-nvim.nix>[0m

       [1mvim.comments.comment-nvim.mappings.toggleCurrentBlock[0m
           Toggle current block comment

           [4mType:[24m null or string

           [4mDefault:[24m "gbc"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/comments/comment-nvim/comment-nvim.nix>[0m

       [1mvim.comments.comment-nvim.mappings.toggleCurrentLine[0m
           Toggle current line comment

           [4mType:[24m null or string

           [4mDefault:[24m "gcc"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/comments/comment-nvim/comment-nvim.nix>[0m

       [1mvim.comments.comment-nvim.mappings.toggleOpLeaderBlock[0m
           Toggle block comment

           [4mType:[24m null or string

           [4mDefault:[24m "gb"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/comments/comment-nvim/comment-nvim.nix>[0m

       [1mvim.comments.comment-nvim.mappings.toggleOpLeaderLine[0m
           Toggle line comment

           [4mType:[24m null or string

           [4mDefault:[24m "gc"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/comments/comment-nvim/comment-nvim.nix>[0m

       [1mvim.comments.comment-nvim.mappings.toggleSelectedBlock[0m
           Toggle selected block

           [4mType:[24m null or string

           [4mDefault:[24m "gb"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/comments/comment-nvim/comment-nvim.nix>[0m

       [1mvim.comments.comment-nvim.mappings.toggleSelectedLine[0m
           Toggle selected comment

           [4mType:[24m null or string

           [4mDefault:[24m "gc"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/comments/comment-nvim/comment-nvim.nix>[0m

       [1mvim.comments.comment-nvim.setupOpts[0m
           Option table to pass into the setup function of Comment-nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/comments/comment-nvim/comment-nvim.nix>[0m

       [1mvim.comments.comment-nvim.setupOpts.mappings.basic[0m
           Whether to enable basic mappings.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/comments/comment-nvim/comment-nvim.nix>[0m

       [1mvim.comments.comment-nvim.setupOpts.mappings.extra[0m
           Whether to enable extra mappings.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/comments/comment-nvim/comment-nvim.nix>[0m

       [1mvim.dashboard.alpha.enable[0m
           Whether to enable fast and fully programmable greeter for neovim [alpha.nvim].

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/alpha/alpha.nix>[0m

       [1mvim.dashboard.alpha.layout[0m
           Alpha dashboard layout

           [4mType:[24m list of attribute set of anything

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/alpha/alpha.nix>[0m

       [1mvim.dashboard.alpha.opts[0m
           Optional global options

           [4mType:[24m attribute set of anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/alpha/alpha.nix>[0m

       [1mvim.dashboard.alpha.theme[0m
           Alpha default theme to use

           [4mType:[24m null or one of “dashboard”, “startify”, “theta”

           [4mDefault:[24m "dashboard"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/alpha/alpha.nix>[0m

       [1mvim.dashboard.dashboard-nvim.enable[0m
           Whether to enable Fancy and Blazing Fast start screen plugin of neovim [dashboard.nvim].

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/dashboard-nvim/dashboard-nvim.nix>[0m

       [1mvim.dashboard.dashboard-nvim.setupOpts[0m
           Option table to pass into the setup function of dashboard.nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/dashboard-nvim/dashboard-nvim.nix>[0m

       [1mvim.dashboard.startify.enable[0m
           Whether to enable dashboard via vim-startify.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.bookmarks[0m
           List of book marks to disaply on start page

           [4mType:[24m list of (attribute set)

           [4mDefault:[24m [ ]

           [4mExample:[0m

               {
                 c = "~/.vimrc";
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.changeDirCmd[0m
           Command to change the current window with. Can be cd, lcd or tcd

           [4mType:[24m one of “cd”, “lcd”, “tcd”

           [4mDefault:[24m "lcd"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.changeToDir[0m
           Should vim change to the directory of the file you open

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.changeToVCRoot[0m
           Should vim change to the version control root when opening a file

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.commands[0m
           Commands that are presented to the user on startify page

           [4mType:[24m list of (string or (attribute set) or list of string)

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.customFooter[0m
           Text to place in the footer

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.customHeader[0m
           Text to place in the header

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.customIndices[0m
           Specify a list of default characters to use instead of numbers

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.disableOnStartup[0m
           Prevent startify from opening on startup but can be called with :Startify

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.filesNumber[0m
           How many files to list

           [4mType:[24m signed integer

           [4mDefault:[24m 10

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.lists[0m
           Specify the lists and in what order they are displayed on startify.

           [4mType:[24m list of (attribute set)

           [4mDefault:[0m

               [
                 {
                   header = [
                     "MRU"
                   ];
                   type = "files";
                 }
                 {
                   header = [
                     "MRU Current Directory"
                   ];
                   type = "dir";
                 }
                 {
                   header = [
                     "Sessions"
                   ];
                   type = "sessions";
                 }
                 {
                   header = [
                     "Bookmarks"
                   ];
                   type = "bookmarks";
                 }
                 {
                   header = [
                     "Commands"
                   ];
                   type = "commands";
                 }
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.paddingLeft[0m
           Number of spaces used for left padding.

           [4mType:[24m signed integer

           [4mDefault:[24m 3

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.sessionAutoload[0m
           Make startify auto load Session.vim files from the current directory

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.sessionBeforeSave[0m
           Commands to run before saving a session

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.sessionDeleteBuffers[0m
           Delete all buffers when loading or closing a session

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.sessionDir[0m
           Directory to save and load sessions from

           [4mType:[24m string

           [4mDefault:[24m "~/.vim/session"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.sessionPersistence[0m
           Persist session before leaving vim or switching session

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.sessionRemoveLines[0m
           Patterns to remove from session files

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.sessionSavecmds[0m
           List of commands to run when loading a session.

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.sessionSavevars[0m
           List of variables to save into a session file.

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.sessionSort[0m
           Set if you want items sorted by date rather than alphabetically

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.skipList[0m
           List of regex patterns to exclude from MRU lists

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.skipListServer[0m
           List of vim servers to not load startify for

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.unsafe[0m
           Turns on unsafe mode for Startify. Stops resolving links, checking files are readable and filtering bookmark list

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.updateOldFiles[0m
           Set if you want startify to always update and not just when neovim closes

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.dashboard.startify.useEnv[0m
           Show environment variables in path if name is shorter than value

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/dashboard/startify/startify.nix>[0m

       [1mvim.debugMode.enable[0m
           Whether to enable debug mode.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/debug.nix>[0m

       [1mvim.debugMode.level[0m
           Set verbosity level of Neovim while debug mode is enabled.

           Value must be be one of the levels expected by Neovim’s ‘verbose’ [1moption[22m[1]

           [4mType:[24m one of 2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16

           [4mDefault:[24m 16

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/debug.nix>[0m

            [1m1. [22mhttps://neovim.io/doc/user/options.html#‘verbose’

       [1mvim.debugMode.logFile[0m
           Set the log file that will be used to store verbose messages set by the ‘verbose’ option.

           [4mType:[24m null or absolute path

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/debug.nix>[0m

       [1mvim.debugger.nvim-dap.enable[0m
           Whether to enable debugging via nvim-dap.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/debugger/nvim-dap/nvim-dap.nix>[0m

       [1mvim.debugger.nvim-dap.mappings.continue[0m
           Continue

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>dc"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/debugger/nvim-dap/nvim-dap.nix>[0m

       [1mvim.debugger.nvim-dap.mappings.goDown[0m
           Go down stacktrace

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>dvi"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/debugger/nvim-dap/nvim-dap.nix>[0m

       [1mvim.debugger.nvim-dap.mappings.goUp[0m
           Go up stacktrace

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>dvo"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/debugger/nvim-dap/nvim-dap.nix>[0m

       [1mvim.debugger.nvim-dap.mappings.hover[0m
           Hover

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>dh"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/debugger/nvim-dap/nvim-dap.nix>[0m

       [1mvim.debugger.nvim-dap.mappings.restart[0m
           Restart

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>dR"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/debugger/nvim-dap/nvim-dap.nix>[0m

       [1mvim.debugger.nvim-dap.mappings.runLast[0m
           Re-run Last Debug Session

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>d."

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/debugger/nvim-dap/nvim-dap.nix>[0m

       [1mvim.debugger.nvim-dap.mappings.runToCursor[0m
           Continue to the current cursor

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>dgc"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/debugger/nvim-dap/nvim-dap.nix>[0m

       [1mvim.debugger.nvim-dap.mappings.stepBack[0m
           Step back

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>dgk"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/debugger/nvim-dap/nvim-dap.nix>[0m

       [1mvim.debugger.nvim-dap.mappings.stepInto[0m
           Step into function

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>dgi"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/debugger/nvim-dap/nvim-dap.nix>[0m

       [1mvim.debugger.nvim-dap.mappings.stepOut[0m
           Step out of function

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>dgo"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/debugger/nvim-dap/nvim-dap.nix>[0m

       [1mvim.debugger.nvim-dap.mappings.stepOver[0m
           Next step

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>dgj"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/debugger/nvim-dap/nvim-dap.nix>[0m

       [1mvim.debugger.nvim-dap.mappings.terminate[0m
           Terminate

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>dq"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/debugger/nvim-dap/nvim-dap.nix>[0m

       [1mvim.debugger.nvim-dap.mappings.toggleBreakpoint[0m
           Toggle breakpoint

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>db"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/debugger/nvim-dap/nvim-dap.nix>[0m

       [1mvim.debugger.nvim-dap.mappings.toggleDapUI[0m
           Toggle DAP-UI

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>du"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/debugger/nvim-dap/nvim-dap.nix>[0m

       [1mvim.debugger.nvim-dap.mappings.toggleRepl[0m
           Toggle Repl

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>dr"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/debugger/nvim-dap/nvim-dap.nix>[0m

       [1mvim.debugger.nvim-dap.sources[0m
           List of debuggers to install

           [4mType:[24m attribute set of string

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/debugger/nvim-dap/nvim-dap.nix>[0m

       [1mvim.debugger.nvim-dap.ui.enable[0m
           Whether to enable UI extension for nvim-dap.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/debugger/nvim-dap/nvim-dap.nix>[0m

       [1mvim.debugger.nvim-dap.ui.autoStart[0m
           Automatically Opens and Closes DAP-UI upon starting/closing a debugging session

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/debugger/nvim-dap/nvim-dap.nix>[0m

       [1mvim.debugger.nvim-dap.ui.setupOpts[0m
           Option table to pass into the setup function of nvim-dap-ui

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/debugger/nvim-dap/nvim-dap.nix>[0m

       [1mvim.diagnostics.enable[0m
           Whether to enable diagostics module for Neovim.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/diagnostics.nix>[0m

       [1mvim.diagnostics.config[0m
           Values that will be passed to ‘vim.diagnostic.config’ after being converted to a Lua table. Possible values for each key can be found in the help text for ‘vim.diagnostics.Opts’. You may find more about the diagnostics API of Neovim in [1m:help diagnostic-api[22m.

               [1mNote[0m
               This option is freeform. You may set values that are not present in nvf documentation, but those values will not be fully type checked. Please refer to the help text for ‘vim.diagnostic.Opts’ for appropriate values.

           [4mType:[24m attribute set of ((attribute set of anything) or boolean or (luaInline))

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/diagnostics.nix>[0m

       [1mvim.diagnostics.config.signs[0m
           Use signs for diagnostics. See [1m:help diagnostic-signs[22m.

           [4mType:[24m (attribute set of anything) or boolean or (luaInline)

           [4mDefault:[24m false

           [4mExample:[0m

               {
                 signs = {
                   text = {
                     "vim.diagnostic.severity.ERROR" = "󰅚 ";
                     "vim.diagnostic.severity.WARN" = "󰀪 ";
                   };
                 };
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/diagnostics.nix>[0m

       [1mvim.diagnostics.config.underline[0m
           Use underline for diagnostics.

           [4mType:[24m (attribute set of anything) or boolean or (luaInline)

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/diagnostics.nix>[0m

       [1mvim.diagnostics.config.update_in_insert[0m
           Update diagnostics in Insert mode. If ‘false’, diagnostics will be updated on InsertLeave ([1m:help InsertLeave[22m).

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/diagnostics.nix>[0m

       [1mvim.diagnostics.config.virtual_lines[0m
           Use virtual lines for diagnostics.

           [4mType:[24m (attribute set of anything) or boolean or (luaInline)

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/diagnostics.nix>[0m

       [1mvim.diagnostics.config.virtual_text[0m
           Use virtual text for diagnostics. If multiple diagnostics are set for a namespace, one prefix per diagnostic + the last diagnostic message are shown.

           [4mType:[24m (attribute set of anything) or boolean or (luaInline)

           [4mDefault:[24m false

           [4mExample:[0m

               {
                 format = lib.generators.mkLuaInline ''
                   function(diagnostic)
                     return string.format("%s (%s)", diagnostic.message, diagnostic.source)
                   end
                 '';
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/diagnostics.nix>[0m

       [1mvim.diagnostics.nvim-lint.enable[0m
           Whether to enable asynchronous linter plugin for Neovim [nvim-lint].

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/diagnostics/nvim-lint/nvim-lint.nix>[0m

       [1mvim.diagnostics.nvim-lint.lint_after_save[0m
           Whether to enable autocmd to lint after each save.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/diagnostics/nvim-lint/nvim-lint.nix>[0m

       [1mvim.diagnostics.nvim-lint.lint_function[0m
           Define the global function nvf_lint which is used by nvf to lint.

           [4mType:[24m luaInline

           [4mDefault:[0m

               {
                 _type = "lua-inline";
                 expr = ''
                   function(buf)
                     local ft = vim.api.nvim_get_option_value("filetype", { buf = buf })
                     local linters = require("lint").linters
                     local linters_from_ft = require("lint").linters_by_ft[ft]

                     -- if no linter is configured for this filetype, stops linting
                     if linters_from_ft == nil then return end

                     for _, name in ipairs(linters_from_ft) do
                       local linter = linters[name]
                       assert(linter, 'Linter with name `' .. name .. '` not available')

                       if type(linter) == "function" then
                         linter = linter()
                       end
                       -- for require("lint").lint() to work, linter.name must be set
                       linter.name = linter.name or name
                       local cwd = linter.required_files

                       -- if no configuration files are configured, lint
                       if cwd == nil then
                         require("lint").lint(linter)
                       else
                         -- if configuration files are configured and present in the project, lint
                         for _, fn in ipairs(cwd) do
                           local path = vim.fs.joinpath(linter.cwd or vim.fn.getcwd(), fn);
                           if vim.uv.fs_stat(path) then
                             require("lint").lint(linter)
                             break
                           end
                         end
                       end
                     end
                   end
                 '';
               }

           [4mExample:[0m

               mkLuaInline ''
                 function(buf)
                   require("lint").try_lint()
                 end
               ''

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/diagnostics/nvim-lint/nvim-lint.nix>[0m

       [1mvim.diagnostics.nvim-lint.linters[0m
           Linter configurations. Builtin linters will be updated and not replaced, but note that this is not a deep extend operation, i.e. if you define an ‘env’ option, it will replace the entire ‘env’ table provided by the builtin (if it exists).

           [4mType:[24m attribute set of (submodule)

           [4mDefault:[24m { }

           [4mExample:[0m

               ''
                 {
                   phpcs = {
                     args = ["-q" "--report-json" "-"];

                     # this will replace the builtin's env table if it exists
                     env = {
                       ENV_VAR = "something";
                     };
                   };
                 }
               ''

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/diagnostics/nvim-lint/nvim-lint.nix>[0m

       [1mvim.diagnostics.nvim-lint.linters.<name>.append_fname[0m
           Automatically add the current file name to the commands arguments. Only has an effect if stdin is false

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/diagnostics/nvim-lint/nvim-lint.nix>[0m

       [1mvim.diagnostics.nvim-lint.linters.<name>.args[0m
           Arguments to pass

           [4mType:[24m null or (list of (string or (luaInline)))

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/diagnostics/nvim-lint/nvim-lint.nix>[0m

       [1mvim.diagnostics.nvim-lint.linters.<name>.cmd[0m
           Command of the linter

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/diagnostics/nvim-lint/nvim-lint.nix>[0m

       [1mvim.diagnostics.nvim-lint.linters.<name>.cwd[0m
           Working directory of the linter

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/diagnostics/nvim-lint/nvim-lint.nix>[0m

       [1mvim.diagnostics.nvim-lint.linters.<name>.env[0m
           Environment variables to use

           [4mType:[24m null or (attribute set of string)

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/diagnostics/nvim-lint/nvim-lint.nix>[0m

       [1mvim.diagnostics.nvim-lint.linters.<name>.ignore_exitcode[0m
           Declares if exit code != 1 should be ignored or result in a warning.

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/diagnostics/nvim-lint/nvim-lint.nix>[0m

       [1mvim.diagnostics.nvim-lint.linters.<name>.name[0m
           Name of the linter

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/diagnostics/nvim-lint/nvim-lint.nix>[0m

       [1mvim.diagnostics.nvim-lint.linters.<name>.parser[0m
           Parser function

           [4mType:[24m null or (luaInline)

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/diagnostics/nvim-lint/nvim-lint.nix>[0m

       [1mvim.diagnostics.nvim-lint.linters.<name>.required_files[0m
           Required files to lint. These files must exist relative to the cwd of the linter or else this linter will be skipped

               [1mNote[0m
               This option is an nvf extension that only takes effect if you use the ‘nvf_lint()’ lua function.

               See [1mvim.diagnostics.nvim-lint.lint_function[22m.

           [4mType:[24m null or (list of string)

           [4mDefault:[24m null

           [4mExample:[0m

               [
                 "eslint.config.js"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/diagnostics/nvim-lint/nvim-lint.nix>[0m

       [1mvim.diagnostics.nvim-lint.linters.<name>.stdin[0m
           Send content via stdin.

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/diagnostics/nvim-lint/nvim-lint.nix>[0m

       [1mvim.diagnostics.nvim-lint.linters.<name>.stream[0m
           Result stream

           [4mType:[24m null or one of “stdout”, “stderr”, “both”

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/diagnostics/nvim-lint/nvim-lint.nix>[0m

       [1mvim.diagnostics.nvim-lint.linters_by_ft[0m
           Map of filetype to formatters. This option takes a set of ‘key = value’ format where the ‘value’ will be converted to its Lua equivalent through `toLuaObject. You are responsible for passing the correct Nix data types to generate a correct Lua value that
           conform is able to accept.

           [4mType:[24m attribute set of list of string

           [4mDefault:[24m { }

           [4mExample:[0m

               {
                 markdown = [
                   "vale"
                 ];
                 text = [
                   "vale"
                 ];
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/diagnostics/nvim-lint/nvim-lint.nix>[0m

       [1mvim.extraLuaFiles[0m
           Additional lua files that will be sourced by Neovim. Takes both absolute and relative paths, all of which will be called via the ‘luafile’ command in Neovim.

           See [1mlua-commands[22m[1] on the Neovim documentation for more details.

               [1mWarning[0m
               All paths passed to this option must be valid. If Neovim cannot resolve the path you are attempting to source, then your configuration will error, and Neovim will not start. Please ensure that all paths are correct before using this option.

           [4mType:[24m list of (absolute path or string)

           [4mDefault:[24m [ ]

           [4mExample:[0m

               [
                 # absolute path, as a string - impure
                 "$HOME/.config/nvim/my-lua-file.lua"

                 # relative path, as a path - pure
                 ./nvim/my-lua-file.lua

                 # source type path - pure and reproducible
                 (builtins.path {
                   path = ./nvim/my-lua-file.lua;
                   name = "my-lua-file";
                 })
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

            [1m1. [22mhttps://neovim.io/doc/user/lua.html#lua-commands

       [1mvim.extraPackages[0m
           List of additional packages to make available to the Neovim wrapper.

           [4mType:[24m list of package

           [4mDefault:[24m [ ]

           [4mExample:[24m "[pkgs.fzf pkgs.ripgrep]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/environment/options.nix>[0m

       [1mvim.extraPlugins[0m
           A list of plugins and their configurations that will be set up after builtin plugins.

           This option takes a special type that allows you to order your custom plugins using nvf’s modified DAG library.

           [4mType:[24m attribute set of (submodule)

           [4mDefault:[24m { }

           [4mExample:[0m

               with pkgs.vimPlugins; {
                 aerial = {
                   package = aerial-nvim;
                   setup = "require('aerial').setup {}";
                 };

                 harpoon = {
                   package = harpoon;
                   setup = "require('harpoon').setup {}";
                   after = ["aerial"]; # place harpoon configuration after aerial
                 };
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/environment/options.nix>[0m

       [1mvim.extraPlugins.<name>.package[0m
           Plugin Package.

           [4mType:[24m null or package or one of “blink-cmp”, “aerial-nvim”, “alpha-nvim”, “base16”, “blink-cmp-spell”, “blink-compat”, “blink-emoji-nvim”, “blink-ripgrep-nvim”, “bufdelete-nvim”, “catppuccin”, “ccc-nvim”, “cellular-automaton-nvim”, “chatgpt-nvim”,
           “cheatsheet-nvim”, “cinnamon-nvim”, “cmp-buffer”, “cmp-luasnip”, “cmp-nvim-lsp”, “cmp-path”, “cmp-treesitter”, “codecompanion-nvim”, “codewindow-nvim”, “comment-nvim”, “conform-nvim”, “copilot-cmp”, “copilot-lua”, “crates-nvim”, “csharpls-extended-lsp-nvim”,
           “dashboard-nvim”, “diffview-nvim”, “direnv-vim”, “dracula”, “dressing-nvim”, “elixir-tools-nvim”, “fastaction-nvim”, “fidget-nvim”, “flash-nvim”, “flutter-tools-nvim”, “friendly-snippets”, “fzf-lua”, “gesture-nvim”, “git-conflict-nvim”, “github”,
           “gitlinker-nvim”, “gitsigns-nvim”, “glow-nvim”, “gruvbox”, “hardtime-nvim”, “harpoon”, “haskell-tools-nvim”, “highlight-undo-nvim”, “hop-nvim”, “hydra-nvim”, “icon-picker-nvim”, “image-nvim”, “img-clip”, “indent-blankline-nvim”, “lazydev-nvim”, “leap-nvim”,
           “leetcode-nvim”, “lsp-signature-nvim”, “lspkind-nvim”, “lspsaga-nvim”, “lua-utils-nvim”, “lualine-nvim”, “luasnip”, “lz-n”, “lzn-auto-require”, “markview-nvim”, “mind-nvim”, “mini-ai”, “mini-align”, “mini-animate”, “mini-base16”, “mini-basics”,
           “mini-bracketed”, “mini-bufremove”, “mini-clue”, “mini-colors”, “mini-comment”, “mini-completion”, “mini-cursorword”, “mini-diff”, “mini-doc”, “mini-extra”, “mini-files”, “mini-fuzzy”, “mini-git”, “mini-hipatterns”, “mini-hues”, “mini-icons”,
           “mini-indentscope”, “mini-jump”, “mini-jump2d”, “mini-map”, “mini-misc”, “mini-move”, “mini-notify”, “mini-operators”, “mini-pairs”, “mini-pick”, “mini-sessions”, “mini-snippets”, “mini-splitjoin”, “mini-starter”, “mini-statusline”, “mini-surround”,
           “mini-tabline”, “mini-test”, “mini-trailspace”, “mini-visits”, “minimap-vim”, “mkdir-nvim”, “modes-nvim”, “multicursors-nvim”, “neo-tree-nvim”, “neocord”, “neorg”, “neorg-telescope”, “neovim-session-manager”, “new-file-template-nvim”, “nix-develop-nvim”,
           “noice-nvim”, “none-ls-nvim”, “nord”, “nui-nvim”, “nvim-autopairs”, “nvim-bufferline-lua”, “nvim-cmp”, “nvim-colorizer-lua”, “nvim-cursorline”, “nvim-dap”, “nvim-dap-go”, “nvim-dap-ui”, “nvim-docs-view”, “nvim-lightbulb”, “nvim-lint”, “nvim-lspconfig”,
           “nvim-metals”, “nvim-navbuddy”, “nvim-navic”, “nvim-neoclip-lua”, “nvim-nio”, “nvim-notify”, “nvim-scrollbar”, “nvim-surround”, “nvim-tree-lua”, “nvim-treesitter-context”, “nvim-treesitter-textobjects”, “nvim-ts-autotag”, “nvim-ufo”, “nvim-web-devicons”,
           “obsidian-nvim”, “oil-nvim”, “omnisharp-extended-lsp-nvim”, “onedark”, “orgmode”, “otter-nvim”, “oxocarbon”, “pathlib-nvim”, “plenary-nvim”, “precognition-nvim”, “project-nvim”, “promise-async”, “rainbow-delimiters-nvim”, “registers-nvim”,
           “render-markdown-nvim”, “rose-pine”, “rtp-nvim”, “run-nvim”, “rustaceanvim”, “smartcolumn-nvim”, “snacks-nvim”, “solarized-osaka”, “sqls-nvim”, “tabular”, “telescope”, “tiny-devicons-auto-colors-nvim”, “todo-comments-nvim”, “toggleterm-nvim”, “tokyonight”,
           “trouble”, “ts-error-translator-nvim”, “typst-preview-nvim”, “vim-dirtytalk”, “vim-fugitive”, “vim-illuminate”, “vim-markdown”, “vim-repeat”, “vim-sleuth”, “vim-startify”, “which-key-nvim”, “yanky-nvim”, “nvim-treesitter”, “flutter-tools-patched”,
           “vim-repeat”

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/environment/options.nix>[0m

       [1mvim.extraPlugins.<name>.after[0m
           Setup this plugin after the following ones.

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/environment/options.nix>[0m

       [1mvim.extraPlugins.<name>.setup[0m
           Lua code to run during setup.

           [4mType:[24m strings concatenated with “\n”

           [4mDefault:[24m ""

           [4mExample:[24m "require('aerial').setup {}"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/environment/options.nix>[0m

       [1mvim.filetree.neo-tree.enable[0m
           Whether to enable filetree via neo-tree.nvim.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/neo-tree/neo-tree.nix>[0m

       [1mvim.filetree.neo-tree.setupOpts[0m
           Option table to pass into the setup function of neo-tree

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/neo-tree/neo-tree.nix>[0m

       [1mvim.filetree.neo-tree.setupOpts.enable_cursor_hijack[0m
           Whether to enable cursor hijacking.

           If enabled neotree will keep the cursor on the first letter of the filename when moving in the tree .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/neo-tree/neo-tree.nix>[0m

       [1mvim.filetree.neo-tree.setupOpts.enable_diagnostics[0m
           Whether to enable diagnostics.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/neo-tree/neo-tree.nix>[0m

       [1mvim.filetree.neo-tree.setupOpts.enable_git_status[0m
           Whether to enable git status.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/neo-tree/neo-tree.nix>[0m

       [1mvim.filetree.neo-tree.setupOpts.enable_modified_markers[0m
           Whether to enable markers for files with unsaved changes…

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/neo-tree/neo-tree.nix>[0m

       [1mvim.filetree.neo-tree.setupOpts.enable_opened_markers[0m
           Whether to enable tracking of opened files.

           Required for ‘components.name.highlight_opened_files’ .

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/neo-tree/neo-tree.nix>[0m

       [1mvim.filetree.neo-tree.setupOpts.enable_refresh_on_write[0m
           Whether to enable Refresh the tree when a file is written.

           Only used if ‘use_libuv_file_watcher’ is false. .

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/neo-tree/neo-tree.nix>[0m

       [1mvim.filetree.neo-tree.setupOpts.add_blank_line_at_top[0m
           Whether to add a blank line at the top of the tree

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/neo-tree/neo-tree.nix>[0m

       [1mvim.filetree.neo-tree.setupOpts.auto_clean_after_session_restore[0m
           Whether to automatically clean up broken neo-tree buffers saved in sessions

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/neo-tree/neo-tree.nix>[0m

       [1mvim.filetree.neo-tree.setupOpts.default_source[0m
           You can choose a specific source.

           ‘last’ here which indicates the last used source

           [4mType:[24m string

           [4mDefault:[24m "filesystem"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/neo-tree/neo-tree.nix>[0m

       [1mvim.filetree.neo-tree.setupOpts.filesystem.hijack_netrw_behavior[0m
           Hijack Netrw behavior

           [4mType:[24m one of “disabled”, “open_default”, “open_current”

           [4mDefault:[24m "open_default"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/neo-tree/neo-tree.nix>[0m

       [1mvim.filetree.neo-tree.setupOpts.git_status_async[0m
           Whether to enable async git status.

           This will make the git status check async and will not block the UI. .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/neo-tree/neo-tree.nix>[0m

       [1mvim.filetree.neo-tree.setupOpts.hide_root_node[0m
           Whether to hide the root node of the tree

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/neo-tree/neo-tree.nix>[0m

       [1mvim.filetree.neo-tree.setupOpts.log_level[0m
           Log level for the plugin.

           [4mType:[24m one of “trace”, “debug”, “info”, “warn”, “error”, “fatal”

           [4mDefault:[24m "info"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/neo-tree/neo-tree.nix>[0m

       [1mvim.filetree.neo-tree.setupOpts.log_to_file[0m
           Must be either a boolean or a path to your log file.

           Use :NeoTreeLogs to show the file

           [4mType:[24m boolean or string

           [4mDefault:[24m false

           [4mExample:[24m /tmp/neo-tree.log

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/neo-tree/neo-tree.nix>[0m

       [1mvim.filetree.neo-tree.setupOpts.open_files_do_not_replace_types[0m
           A list of filetypes that should not be replaced when opening a file

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "terminal"
                 "Trouble"
                 "qf"
                 "edgy"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/neo-tree/neo-tree.nix>[0m

       [1mvim.filetree.neo-tree.setupOpts.open_files_in_last_window[0m
           Whether to open files in the last window

           If disabled, neo-tree will open files in top left window

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/neo-tree/neo-tree.nix>[0m

       [1mvim.filetree.neo-tree.setupOpts.retain_hidden_root_indent[0m
           Whether to retain the indent of the hidden root node

           IF the root node is hidden, keep the indentation anyhow. This is needed if you use expanders because they render in the indent.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/neo-tree/neo-tree.nix>[0m

       [1mvim.filetree.nvimTree.enable[0m
           Whether to enable filetree via nvim-tree.lua.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.mappings.findFile[0m
           Find file in NvimTree

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>tg"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.mappings.focus[0m
           Focus NvimTree

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>tf"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.mappings.refresh[0m
           Refresh NvimTree

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>tr"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.mappings.toggle[0m
           Toggle NvimTree

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>t"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.openOnSetup[0m
           Open when vim is started on a directory

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts[0m
           Option table to pass into the setup function of Nvim Tree

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.actions[0m
           Configuration for various actions.

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.actions.change_dir[0m
           vim ‘change-directory’ behaviour

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.actions.change_dir.enable[0m
           Change the working directory when changing directories in the tree.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.actions.change_dir.global[0m
           Use ‘:cd’ instead of ‘:lcd’ when changing directories. Consider that this might cause issues with the ‘nvimTree.syncRootWithCwd’ option.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.actions.change_dir.restrict_above_cwd[0m
           Restrict changing to a directory above the global current working directory.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.actions.expand_all[0m
           Configuration for expand_all behaviour.

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.actions.expand_all.exclude[0m
           A list of directories that should not be expanded automatically.

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 ".git"
                 "target"
                 "build"
                 "result"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.actions.expand_all.max_folder_discovery[0m
           Limit the number of folders being explored when expanding every folders. Avoids hanging neovim when running this action on very large folders.

           [4mType:[24m signed integer

           [4mDefault:[24m 300

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.actions.file_popup[0m
           Configuration for file_popup behaviour.

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.actions.file_popup.open_win_config[0m
           Floating window config for file_popup. See |nvim_open_win| for more details.

           [4mType:[24m attribute set

           [4mDefault:[0m

               {
                 border = "rounded";
                 col = 1;
                 relative = "cursor";
                 row = 1;
                 style = "minimal";
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.actions.open_file[0m
           Configuration options for opening a file from nvim-tree.

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.actions.open_file.eject[0m
           Prevent new opened file from opening in the same window as the tree.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.actions.open_file.quit_on_open[0m
           Closes the explorer when opening a file.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.actions.open_file.resize_window[0m
           Resizes the tree when opening a file. Previously ‘view.auto_resize’

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.actions.open_file.window_picker[0m
           window_picker

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.actions.open_file.window_picker.enable[0m
           Enable the window picker. If this feature is not enabled, files will open in window from which you last opened the tree.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.actions.open_file.window_picker.chars[0m
           A string of chars used as identifiers by the window picker.

           [4mType:[24m string

           [4mDefault:[24m "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.actions.open_file.window_picker.exclude.buftype[0m
           A list of buftypes to exclude from the window picker.

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "nofile"
                 "terminal"
                 "help"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.actions.open_file.window_picker.exclude.filetype[0m
           A list of filetypes to exclude from the window picker.

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "notify"
                 "packer"
                 "qf"
                 "diff"
                 "fugitive"
                 "fugitiveblame"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.actions.open_file.window_picker.picker[0m
           Change the default window picker, can be a string ‘"default"’ or a function. The function should return the window id that will open the node, or ‘nil’ if an invalid window is picked or user cancelled the action.

           The picker may create a new window.

           [4mType:[24m string

           [4mDefault:[24m "default"

           [4mExample:[0m

               -- with s1n7ax/nvim-window-picker plugin
               require('window-picker').pick_window,

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.actions.remove_file.close_window[0m
           Close any window displaying a file when removing the file from the tree

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.actions.use_system_clipboard[0m
           A boolean value that toggle the use of system clipboard when copy/paste function are invoked. When enabled, copied text will be stored in registers ‘+’ (system), otherwise, it will be stored in ‘1’ and ‘"’.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.auto_reload_on_write[0m
           Auto reload tree on write

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.diagnostics[0m
           Show LSP and COC diagnostics in the signcolumn Note that the modified sign will take precedence over the diagnostics signs.

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.diagnostics.enable[0m
           Whether to enable diagnostics view in the signcolumn…

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.diagnostics.debounce_delay[0m
           Idle milliseconds between diagnostic event and update.

           [4mType:[24m signed integer

           [4mDefault:[24m 50

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.diagnostics.icons[0m
           Icons for diagnostic severity.

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.diagnostics.icons.error[0m
           Icon used for ‘error’ diagnostic.

           [4mType:[24m string

           [4mDefault:[24m ""

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.diagnostics.icons.hint[0m
           Icon used for ‘hint’ diagnostic.

           [4mType:[24m string

           [4mDefault:[24m ""

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.diagnostics.icons.info[0m
           Icon used for ‘info’ diagnostic.

           [4mType:[24m string

           [4mDefault:[24m ""

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.diagnostics.icons.warning[0m
           Icon used for ‘warning’ diagnostic.

           [4mType:[24m string

           [4mDefault:[24m ""

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.diagnostics.severity[0m
           Severity for which the diagnostics will be displayed. See ‘:help diagnostic-severity’

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.diagnostics.severity.max[0m
           Maximum severity.

           [4mType:[24m one of “HINT”, “INFO”, “WARNING”, “ERROR”

           [4mDefault:[24m "ERROR"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.diagnostics.severity.min[0m
           Minimum severity.

           [4mType:[24m one of “HINT”, “INFO”, “WARNING”, “ERROR”

           [4mDefault:[24m "HINT"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.diagnostics.show_on_dirs[0m
           Show diagnostic icons on parent directories.

           [4mType:[24m unspecified value

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.diagnostics.show_on_open_dirs[0m
           Show diagnostics icons on directories that are open. Only relevant when ‘diagnostics.show_on_dirs’ is ‘true’.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.disable_netrw[0m
           Disables netrw and replaces it with tree

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.filesystem_watchers[0m
           Will use file system watcher (libuv fs_event) to watch the filesystem for changes. Using this will disable BufEnter / BufWritePost events in nvim-tree which were used to update the whole tree. With this feature, the tree will be updated only for the
           appropriate folder change, resulting in better performance.

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.filesystem_watchers.enable[0m
           Enable filesystem watchers.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.filesystem_watchers.debounce_delay[0m
           Idle milliseconds between filesystem change and action.

           [4mType:[24m signed integer

           [4mDefault:[24m 50

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.filesystem_watchers.ignore_dirs[0m
           List of vim regex for absolute directory paths that will not be watched. Backslashes must be escaped e.g. ‘"my-project/\\.build$"’. Useful when path is not in ‘.gitignore’ or git integration is disabled.

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.filters[0m
           Filtering options.

           [4mType:[24m submodule

           [4mDefault:[0m

               {
                 dotfiles = false;
                 exclude = [ ];
                 git_clean = false;
                 git_ignored = false;
                 no_buffer = false;
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.filters.dotfiles[0m
           Do not show dotfiles: files starting with a ‘.’

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.filters.exclude[0m
           List of directories or files to exclude from filtering: always show them.

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.filters.git_clean[0m
           Do not show files with no git status. This will show ignored files when ‘nvimTree.filters.gitIgnored’ is set, as they are effectively dirty.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.filters.git_ignored[0m
           Ignore files based on ‘.gitignore’. Requires git.enable‘to be’true`

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.filters.no_buffer[0m
           Do not show files that have no ‘buflisted()’ buffer.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.git.enable[0m
           Whether to enable Git integration with icons and colors…

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.git.disable_for_dirs[0m
           Disable git integration when git top-level matches these paths. May be relative, evaluated via ‘":p"’

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.git.show_on_dirs[0m
           Show git icons on parent directories.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.git.show_on_open_dirs[0m
           Show git icons on directories that are open.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.git.timeout[0m
           Kills the git process after some time if it takes too long. Git integration will be disabled after 10 git jobs exceed this timeout.

           [4mType:[24m signed integer

           [4mDefault:[24m 400

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.hijack_cursor[0m
           Hijack the cursor in the tree to put it at the start of the filename

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.hijack_directories.enable[0m
           Enable the ‘hijack_directories’ feature. Disable this option if you use vim-dirvish or dirbuf.nvim. If ‘hijack_netrw’ and ‘disable_netrw’ are ‘false’, this feature will be disabled.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.hijack_directories.auto_open[0m
           Opens the tree if the tree was previously closed.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.hijack_netrw[0m
           Prevents netrw from automatically opening when opening directories

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.hijack_unnamed_buffer_when_opening[0m
           Open nvimtree in place of the unnamed buffer if it’s empty.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.live_filter[0m
           Configurations for the live_filtering feature. The live filter allows you to filter the tree nodes dynamically, based on regex matching (see ‘vim.regex’). This feature is bound to the ‘f’ key by default. The filter can be cleared with the ‘F’ key by default.

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.live_filter.always_show_folders[0m
           Whether to filter folders or not.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.live_filter.prefix[0m
           Prefix of the filter displayed in the buffer.

           [4mType:[24m string

           [4mDefault:[24m "[FILTER]: "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.modified[0m
           Indicate which file have unsaved modification.

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.modified.enable[0m
           Whether to enable Modified files with icons and color highlight…

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.modified.show_on_dirs[0m
           Show modified icons on parent directories.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.modified.show_on_open_dirs[0m
           Show modified icons on directories that are open.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.notify[0m
           Configuration for notifications.

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.notify.absolute_path[0m
           Whether to use absolute paths or item names in fs action notifications.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.notify.threshold[0m
           Specify minimum notification level, uses the values from ‘vim.log.levels’

           [4mType:[24m one of “ERROR”, “WARNING”, “INFO”, “DEBUG”

           [4mDefault:[24m "INFO"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.prefer_startup_root[0m
           Prefer startup root directory when updating root directory of the tree. Only relevant when ‘update_focused_file.update_root’ is ‘true’

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.reload_on_bufenter[0m
           Automatically reloads the tree on ‘BufEnter’ nvim-tree.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.add_trailing[0m
           Appends a trailing slash to folder names.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.full_name[0m
           Display node whose name length is wider than the width of nvim-tree window in floating window.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.group_empty[0m
           Compact folders that only contain a single folder into one node in the file tree.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.highlight_git[0m
           Enable file highlight for git attributes using ‘NvimTreeGit’ highlight groups. Requires ‘nvimTree.git.enable’ This can be used with or without the icons.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.highlight_modified[0m
           Highlight modified files in the tree using ‘NvimTreeNormal’ highlight group. Requires ‘nvimTree.view.highlightOpenedFiles’

           [4mType:[24m one of “none”, “icon”, “name”, “all”

           [4mDefault:[24m "none"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.highlight_opened_files[0m
           Highlight icons and/or names for bufloaded() files using the ‘NvimTreeOpenedFile’ highlight group.

           [4mType:[24m one of “none”, “icon”, “name”, “all”

           [4mDefault:[24m "none"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.icons[0m
           Configuration options for icons.

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.icons.bookmarks_placement[0m
           Place where the bookmark icons will be rendered. ‘signcolumn’ requires ‘view.signcolumn’ to be enabled.

           [4mType:[24m one of “before”, “after”, “signcolumn”, “right_align”

           [4mDefault:[24m "after"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.icons.diagnostics_placement[0m
           Place where the diagnostics icons will be rendered. ‘signcolumn’ requires ‘view.signcolumn’ to be enabled.

           [4mType:[24m one of “before”, “after”, “signcolumn”, “right_align”

           [4mDefault:[24m "after"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.icons.git_placement[0m
           Place where the git icons will be rendered. ‘signcolumn’ requires ‘view.signcolumn’ to be enabled.

           [4mType:[24m one of “before”, “after”, “signcolumn”, “right_align”

           [4mDefault:[24m "before"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.icons.glyphs[0m
           Configuration options for icon glyphs. NOTE: Do not set any glyphs to more than two characters if it’s going to appear in the signcolumn.

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.icons.glyphs.default[0m
           Glyph for files. Will be overridden by ‘nvim-web-devicons’ if available.

           [4mType:[24m string

           [4mDefault:[24m ""

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.icons.glyphs.folder[0m
           Glyphs for directories. Recommended to use the defaults unless you know what you are doing.

           [4mType:[24m attribute set

           [4mDefault:[0m

               {
                 arrow_closed = "";
                 arrow_open = "";
                 default = "";
                 empty = "";
                 empty_open = "";
                 open = "";
                 symlink = "";
                 symlink_open = "";
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.icons.glyphs.git[0m
           Glyphs for git status.

           [4mType:[24m attribute set

           [4mDefault:[0m

               {
                 deleted = "";
                 ignored = "◌";
                 renamed = "➜";
                 staged = "✓";
                 unmerged = "";
                 unstaged = "✗";
                 untracked = "★";
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.icons.glyphs.modified[0m
           Icon to display for modified files.

           [4mType:[24m string

           [4mDefault:[24m ""

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.icons.glyphs.symlink[0m
           Glyph for symlinks.

           [4mType:[24m string

           [4mDefault:[24m ""

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.icons.hidden_placement[0m
           Place where the hidden icons will be rendered. ‘signcolumn’ requires ‘view.signcolumn’ to be enabled.

           [4mType:[24m one of “before”, “after”, “signcolumn”, “right_align”

           [4mDefault:[24m "after"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.icons.modified_placement[0m
           Place where the modified icons will be rendered. ‘signcolumn’ requires ‘view.signcolumn’ to be enabled.

           [4mType:[24m one of “before”, “after”, “signcolumn”, “right_align”

           [4mDefault:[24m "after"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.icons.padding[0m
           Inserted between icon and filename

           [4mType:[24m string

           [4mDefault:[24m " "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.icons.show.file[0m
           Show an icon before the file name. ‘nvim-web-devicons’ will be used if available.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.icons.show.folder[0m
           Show an icon before the folder name.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.icons.show.folder_arrow[0m
           Show a small arrow before the folder node. Arrow will be a part of the node when using ‘renderer.indent_markers’.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.icons.show.git[0m
           Show a git status icon, see ‘renderer.icons.gitPlacement’ Requires ‘git.enable’ to be true.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.icons.show.modified[0m
           Show a modified icon, see ‘renderer.icons.modifiedPlacement’ Requires ‘modified.enable’ to be true.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.icons.symlink_arrow[0m
           Used as a separator between symlinks’ source and target.

           [4mType:[24m string

           [4mDefault:[24m " ➛ "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.icons.webdev_colors[0m
           Use the webdev icon colors, otherwise ‘NvimTreeFileIcon’

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.indent_markers[0m
           Configuration options for tree indent markers.

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.indent_markers.enable[0m
           Whether to enable Display indent markers when folders are open…

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.indent_markers.icons[0m
           Individual elements of the indent markers

           [4mType:[24m attribute set

           [4mDefault:[0m

               {
                 bottom = "─";
                 corner = "└";
                 edge = "│";
                 item = "│";
                 none = "";
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.indent_markers.inline_arrows[0m
           Display folder arrows in the same column as indent marker when using ‘renderer.icons.show.folder_arrow’

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.indent_width[0m
           Number of spaces for an each tree nesting level. Minimum 1.

           [4mType:[24m signed integer

           [4mDefault:[24m 2

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.root_folder_label[0m
           In what format to show root folder. See ‘:help filename-modifiers’ for available ‘string’ options. Set to ‘false’ to hide the root folder.

           Function is passed the absolute path of the root folder and should return a string. e.g. my_root_folder_label = function(path) return “…/” … vim.fn.fnamemodify(path, “:t”) end

           [4mType:[24m string or boolean

           [4mDefault:[24m false

           [4mExample:[24m "\"\":~:s?$?/..?\""

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.special_files[0m
           A list of filenames that gets highlighted with `NvimTreeSpecialFile

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "Cargo.toml"
                 "README.md"
                 "readme.md"
                 "Makefile"
                 "MAKEFILE"
                 "flake.nix"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.renderer.symlink_destination[0m
           Whether to show the destination of the symlink.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.respect_buf_cwd[0m
           Will change cwd of nvim-tree to that of new buffer’s when opening nvim-tree.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.root_dirs[0m
           Preferred root directories. Only relevant when ‘updateFocusedFile.updateRoot’ is ‘true’

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.select_prompts[0m
           Whether to enable Use ‘vim.ui.select’ style prompts. Necessary when using a UI prompt decorator such as dressing.nvim or telescope-ui-select.nvim .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.sort.folders_first[0m
           Sort folders before files. Has no effect when ‘sort.sorter’ is a function.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.sort.sorter[0m
           How files within the same directory are sorted.

           [4mType:[24m one of “name”, “extension”, “modification_time”, “case_sensitive”, “suffix”, “filetype”

           [4mDefault:[24m "name"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.sync_root_with_cwd[0m
           Changes the tree root directory on ‘DirChanged’ and refreshes the tree. Only relevant when ‘updateFocusedFile.updateRoot’ is ‘true’

           (previously ‘update_cwd’)

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.system_open.args[0m
           Optional argument list.

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.system_open.cmd[0m
           The open command itself

           [4mType:[24m string

           [4mDefault:[24m "\${pkgs.xdg-utils}/bin/xdg-open"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.tab[0m
           Configuration for tab behaviour.

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.tab.sync[0m
           Configuration for syncing nvim-tree across tabs.

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.tab.sync.close[0m
           Closes the tree across all tabpages when the tree is closed.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.tab.sync.ignore[0m
           List of filetypes or buffer names on new tab that will prevent ‘nvimTree.tab.sync.open’ and ‘nvimTree.tab.sync.close’

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.tab.sync.open[0m
           Opens the tree automatically when switching tabpage or opening a new tabpage if the tree was previously open.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.trash[0m
           Configuration options for trashing.

           [4mType:[24m submodule

           [4mDefault:[0m

               {
                 cmd = "\${pkgs.glib}/bin/gio trash";
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.trash.cmd[0m
           The command used to trash items

           [4mType:[24m string

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.ui[0m
           General UI configuration.

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.ui.confirm.remove[0m
           Prompt before removing.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.ui.confirm.trash[0m
           Prompt before trash.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.update_focused_file[0m
           Update the focused file on ‘BufEnter’, un-collapses the folders recursively until it finds the file.

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.update_focused_file.enable[0m
           update focused file

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.update_focused_file.ignore_list[0m
           List of buffer names and filetypes that will not update the root dir of the tree if the file isn’t found under the current root directory. Only relevant when ‘update_focused_file.update_root’ and ‘update_focused_file.enable’ are ‘true’.

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.update_focused_file.update_root[0m
           Update the root directory of the tree if the file is not under current root directory. It prefers vim’s cwd and ‘root_dirs’. Otherwise it falls back to the folder containing the file. Only relevant when ‘update_focused_file.enable’ is ‘true’

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.view[0m
           Window / buffer setup.

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.view.centralize_selection[0m
           If true, reposition the view so that the current node is initially centralized when entering nvim-tree.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.view.cursorline[0m
           Enable cursorline in nvim-tree window.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.view.debounce_delay[0m
           Idle milliseconds before some reload / refresh operations. Increase if you experience performance issues around screen refresh.

           [4mType:[24m signed integer

           [4mDefault:[24m 15

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.view.float[0m
           Configuration options for floating window.

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.view.float.enable[0m
           If true, tree window will be floating.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.view.float.open_win_config[0m
           Floating window config. See ‘:h nvim_open_win()’ for more details.

           [4mType:[24m attribute set

           [4mDefault:[0m

               {
                 border = "rounded";
                 col = 1;
                 height = 30;
                 relative = "editor";
                 row = 1;
                 width = 30;
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.view.float.quit_on_focus_loss[0m
           Close the floating tree window when it loses focus.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.view.number[0m
           Print the line number in front of each line.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.view.preserve_window_proportions[0m
           Preserves window proportions when opening a file. If ‘false’, the height and width of windows other than nvim-tree will be equalized.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.view.relativenumber[0m
           Show the line number relative to the line with the cursor in front of each line. If the option ‘view.number’ is also ‘true’, the number on the cursor line will be the line number instead of ‘0’.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.view.side[0m
           Side of the tree.

           [4mType:[24m one of “left”, “right”

           [4mDefault:[24m "left"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.view.signcolumn[0m
           Show diagnostic sign column. Value can be ‘"yes"’, ‘"auto"’ or‘"no"’.

           [4mType:[24m one of “yes”, “auto”, “no”

           [4mDefault:[24m "yes"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.filetree.nvimTree.setupOpts.view.width[0m
           Width of the window: can be a ‘%’ string, a number representing columns, a function or a table.

           A table (an attribute set in our case, see example) indicates that the view should be dynamically sized based on the longest line.

           [4mType:[24m signed integer or (attribute set)

           [4mDefault:[24m 30

           [4mExample:[0m

               {
                 min = 30;
                 max = -1;
                 padding = 1;
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/filetree/nvimtree/nvimtree.nix>[0m

       [1mvim.formatter.conform-nvim.enable[0m
           Whether to enable lightweight yet powerful formatter plugin for Neovim [conform-nvim].

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/formatter/conform-nvim/conform-nvim.nix>[0m

       [1mvim.formatter.conform-nvim.setupOpts[0m
           Option table to pass into the setup function of conform.nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/formatter/conform-nvim/conform-nvim.nix>[0m

       [1mvim.formatter.conform-nvim.setupOpts.default_format_opts[0m
           Default values when calling ‘conform.format()’

           [4mType:[24m attribute set

           [4mDefault:[0m

               {
                 lsp_format = "fallback";
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/formatter/conform-nvim/conform-nvim.nix>[0m

       [1mvim.formatter.conform-nvim.setupOpts.format_after_save[0m
           Table or function(luainline) that will be passed to ‘conform.format()’. If this is set, Conform will run the formatter asynchronously after save.

           [4mType:[24m null or (attribute set) or (luaInline)

           [4mDefault:[0m

               {
                 _type = "lua-inline";
                 expr = ''
                   function()
                     if not vim.g.formatsave or vim.b.disableFormatSave then
                       return
                     else
                       return {["lsp_format"] = "fallback"}
                     end
                   end
                 '';
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/formatter/conform-nvim/conform-nvim.nix>[0m

       [1mvim.formatter.conform-nvim.setupOpts.format_on_save[0m
           Attribute set or Lua function that will be passed to ‘conform.format()’. If this is set, Conform will run the formatter on save.

           [4mType:[24m null or (attribute set) or (luaInline)

           [4mDefault:[24m enabled by default, and respects [1mvim.lsp.formatOnSave [22mand [1mvim.lsp.mappings.toggleFormatSave[0m

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/formatter/conform-nvim/conform-nvim.nix>[0m

       [1mvim.formatter.conform-nvim.setupOpts.formatters_by_ft[0m
           Map of filetype to formatters. This option takes a set of ‘key = value’ format where the ‘value will’ be converted to its Lua equivalent. You are responsible for passing the correct Nix data types to generate a correct Lua value that conform is able to
           accept.

           [4mType:[24m attribute set

           [4mDefault:[24m { }

           [4mExample:[0m

               {
                 lua = [
                   "stylua"
                 ];
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/formatter/conform-nvim/conform-nvim.nix>[0m

       [1mvim.fzf-lua.enable[0m
           Whether to enable fzf-lua.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/fzf-lua/fzf-lua.nix>[0m

       [1mvim.fzf-lua.profile[0m
           The configuration profile to use

           [4mType:[24m one of “default”, “default-title”, “fzf-native”, “fzf-tmux”, “fzf-vim”, “max-perf”, “telescope”, “skim”, “borderless”, “borderless-full”, “border-fused”

           [4mDefault:[24m "default"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/fzf-lua/fzf-lua.nix>[0m

       [1mvim.fzf-lua.setupOpts[0m
           Option table to pass into the setup function of fzf-lua

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/fzf-lua/fzf-lua.nix>[0m

       [1mvim.fzf-lua.setupOpts.fzf_bin[0m
           Path to fzf executable

           [4mType:[24m string

           [4mDefault:[24m "\${pkgs.fzf.out}/bin/fzf"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/fzf-lua/fzf-lua.nix>[0m

       [1mvim.fzf-lua.setupOpts.winopts.border[0m
           Border type for the fzf-lua picker window

           [4mType:[24m one of “none”, “single”, “double”, “rounded”, “solid”, “shadow” or list of (string or list of string)

           [4mDefault:[24m "rounded"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/fzf-lua/fzf-lua.nix>[0m

       [1mvim.gestures.gesture-nvim.enable[0m
           Whether to enable gesture-nvim: mouse gestures.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/gestures/gesture-nvim/gesture-nvim.nix>[0m

       [1mvim.gestures.gesture-nvim.mappings.draw[0m
           Start drawing [gesture.nvim]

           [4mType:[24m null or string

           [4mDefault:[24m "<LeftDrag>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/gestures/gesture-nvim/gesture-nvim.nix>[0m

       [1mvim.gestures.gesture-nvim.mappings.finish[0m
           Finish drawing [gesture.nvim]

           [4mType:[24m null or string

           [4mDefault:[24m "<LeftRelease>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/gestures/gesture-nvim/gesture-nvim.nix>[0m

       [1mvim.git.enable[0m
           Whether to enable git integration suite.

           Enabling this option will enable the following plugins:

             [1m• [22mgitsigns
             [1m• [22mvim-fugitive
             [1m• [22mgit-conflict
             [1m• [22mgitlinker-nvim .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git>[0m

       [1mvim.git.git-conflict.enable[0m
           Whether to enable git-conflict.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/git-conflict/git-conflict.nix>[0m

       [1mvim.git.git-conflict.mappings.both[0m
           Choose Both [Git-Conflict]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>cb"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/git-conflict/git-conflict.nix>[0m

       [1mvim.git.git-conflict.mappings.nextConflict[0m
           Go to the next Conflict [Git-Conflict]

           [4mType:[24m null or string

           [4mDefault:[24m "[x"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/git-conflict/git-conflict.nix>[0m

       [1mvim.git.git-conflict.mappings.none[0m
           Choose None [Git-Conflict]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>c0"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/git-conflict/git-conflict.nix>[0m

       [1mvim.git.git-conflict.mappings.ours[0m
           Choose Ours [Git-Conflict]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>co"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/git-conflict/git-conflict.nix>[0m

       [1mvim.git.git-conflict.mappings.prevConflict[0m
           Go to the previous Conflict [Git-Conflict]

           [4mType:[24m null or string

           [4mDefault:[24m "]x"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/git-conflict/git-conflict.nix>[0m

       [1mvim.git.git-conflict.mappings.theirs[0m
           Choose Theirs [Git-Conflict]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>ct"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/git-conflict/git-conflict.nix>[0m

       [1mvim.git.git-conflict.setupOpts[0m
           Option table to pass into the setup function of git-conflict

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/git-conflict/git-conflict.nix>[0m

       [1mvim.git.gitlinker-nvim.enable[0m
           Whether to enable gitlinker-nvim.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/gitlinker-nvim/gitlinker-nvim.nix>[0m

       [1mvim.git.gitlinker-nvim.setupOpts[0m
           Option table to pass into the setup function of gitlinker-nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/gitlinker-nvim/gitlinker-nvim.nix>[0m

       [1mvim.git.gitsigns.enable[0m
           Whether to enable gitsigns.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/gitsigns/gitsigns.nix>[0m

       [1mvim.git.gitsigns.codeActions.enable[0m
           Whether to enable gitsigns codeactions through null-ls.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/gitsigns/gitsigns.nix>[0m

       [1mvim.git.gitsigns.mappings.blameLine[0m
           Blame line [Gitsigns]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>hb"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/gitsigns/gitsigns.nix>[0m

       [1mvim.git.gitsigns.mappings.diffProject[0m
           Diff project [Gitsigns]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>hD"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/gitsigns/gitsigns.nix>[0m

       [1mvim.git.gitsigns.mappings.diffThis[0m
           Diff this [Gitsigns]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>hd"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/gitsigns/gitsigns.nix>[0m

       [1mvim.git.gitsigns.mappings.nextHunk[0m
           Next hunk [Gitsigns]

           [4mType:[24m null or string

           [4mDefault:[24m "]c"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/gitsigns/gitsigns.nix>[0m

       [1mvim.git.gitsigns.mappings.previewHunk[0m
           Preview hunk [Gitsigns]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>hP"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/gitsigns/gitsigns.nix>[0m

       [1mvim.git.gitsigns.mappings.previousHunk[0m
           Previous hunk [Gitsigns]

           [4mType:[24m null or string

           [4mDefault:[24m "[c"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/gitsigns/gitsigns.nix>[0m

       [1mvim.git.gitsigns.mappings.resetBuffer[0m
           Reset buffer [Gitsigns]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>hR"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/gitsigns/gitsigns.nix>[0m

       [1mvim.git.gitsigns.mappings.resetHunk[0m
           Reset hunk [Gitsigns]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>hr"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/gitsigns/gitsigns.nix>[0m

       [1mvim.git.gitsigns.mappings.stageBuffer[0m
           Stage buffer [Gitsigns]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>hS"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/gitsigns/gitsigns.nix>[0m

       [1mvim.git.gitsigns.mappings.stageHunk[0m
           Stage hunk [Gitsigns]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>hs"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/gitsigns/gitsigns.nix>[0m

       [1mvim.git.gitsigns.mappings.toggleBlame[0m
           Toggle blame [Gitsigns]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>tb"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/gitsigns/gitsigns.nix>[0m

       [1mvim.git.gitsigns.mappings.toggleDeleted[0m
           Toggle deleted [Gitsigns]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>td"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/gitsigns/gitsigns.nix>[0m

       [1mvim.git.gitsigns.mappings.undoStageHunk[0m
           Undo stage hunk [Gitsigns]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>hu"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/gitsigns/gitsigns.nix>[0m

       [1mvim.git.gitsigns.setupOpts[0m
           Option table to pass into the setup function of gitsigns

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/gitsigns/gitsigns.nix>[0m

       [1mvim.git.vim-fugitive.enable[0m
           Whether to enable vim-fugitive.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/git/vim-fugitive/vim-fugitive.nix>[0m

       [1mvim.globals[0m
           A freeform attribute set containing global variable values for setting vim variables as early as possible. If populated, this option will set vim variables in the built [1mluaConfigRC [22mas the first item.

               [1mNote[0m
               ‘{foo = "bar";}’ will set ‘vim.g.foo’ to “bar”, where the type of ‘bar’ in the resulting Lua value will be inferred from the type of the value in the ‘{name = value;}’ pair passed to the option.

           [4mType:[24m attribute set of anything

           [4mDefault:[24m { }

           [4mExample:[0m

               {
                 some_variable = 42;
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

       [1mvim.globals.editorconfig[0m
           Whether to enable EditorConfig integration in Neovim.

           This defaults to true as it is enabled by default in stock Neovim, setting this option to false disables EditorConfig integration entirely.

           See [1mNeovim documentation[22m[1] for more details on configuring EditorConfig behaviour.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

            [1m1. [22mhttps://neovim.io/doc/user/editorconfig.html

       [1mvim.globals.mapleader[0m
           The key used for ‘<leader>’ mappings

           [4mType:[24m string

           [4mDefault:[24m " "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

       [1mvim.globals.maplocalleader[0m
           The key used for ‘<localleader>’ mappings

           [4mType:[24m string

           [4mDefault:[24m ","

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

       [1mvim.hideSearchHighlight[0m
           Hide search highlight so it doesn’t stay highlighted

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/basic.nix>[0m

       [1mvim.highlight[0m
           Custom highlights to apply

           [4mType:[24m attribute set of (submodule)

           [4mDefault:[24m { }

           [4mExample:[0m

               {
                 SignColumn = {
                   bg = "#282828";
                 };
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/highlight.nix>[0m

       [1mvim.highlight.<name>.bg[0m
           The background color to use. Written as color name or hex “#RRGGBB”.

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mExample:[24m "#ebdbb2"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/highlight.nix>[0m

       [1mvim.highlight.<name>.blend[0m
           Blend as an integer between 0 and 100

           [4mType:[24m null or integer between 0 and 100 (both inclusive)

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/highlight.nix>[0m

       [1mvim.highlight.<name>.bold[0m
           Whether to enable bold

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mExample:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/highlight.nix>[0m

       [1mvim.highlight.<name>.cterm[0m
           The cterm arguments to use. See ‘:h highlight-args’

           [4mType:[24m null or (list of (one of “bold”, “underline”, “undercurl”, “underdouble”, “underdotted”, “underdashed”, “strikethrough”, “reverse”, “inverse”, “italic”, “standout”, “altfont”, “nocombine”, “NONE”))

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/highlight.nix>[0m

       [1mvim.highlight.<name>.ctermbg[0m
           The cterm background color to use

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/highlight.nix>[0m

       [1mvim.highlight.<name>.ctermfg[0m
           The cterm foreground color to use

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/highlight.nix>[0m

       [1mvim.highlight.<name>.default[0m
           Don’t override existing definition

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/highlight.nix>[0m

       [1mvim.highlight.<name>.fg[0m
           The foreground color to use. Written as color name or hex “#RRGGBB”.

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mExample:[24m "#ebdbb2"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/highlight.nix>[0m

       [1mvim.highlight.<name>.force[0m
           Whether to enable force update

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mExample:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/highlight.nix>[0m

       [1mvim.highlight.<name>.italic[0m
           Whether to enable italic

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mExample:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/highlight.nix>[0m

       [1mvim.highlight.<name>.link[0m
           The name of another highlight group to link to

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/highlight.nix>[0m

       [1mvim.highlight.<name>.nocombine[0m
           Whether to enable nocombine

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mExample:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/highlight.nix>[0m

       [1mvim.highlight.<name>.reverse[0m
           Whether to enable reverse

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mExample:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/highlight.nix>[0m

       [1mvim.highlight.<name>.sp[0m
           The special color to use. Written as color name or hex “#RRGGBB”.

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mExample:[24m "#ebdbb2"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/highlight.nix>[0m

       [1mvim.highlight.<name>.standout[0m
           Whether to enable standout

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mExample:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/highlight.nix>[0m

       [1mvim.highlight.<name>.strikethrough[0m
           Whether to enable strikethrough

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mExample:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/highlight.nix>[0m

       [1mvim.highlight.<name>.undercurl[0m
           Whether to enable undercurl

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mExample:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/highlight.nix>[0m

       [1mvim.highlight.<name>.underdashed[0m
           Whether to enable underdashed

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mExample:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/highlight.nix>[0m

       [1mvim.highlight.<name>.underdotted[0m
           Whether to enable underdotted

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mExample:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/highlight.nix>[0m

       [1mvim.highlight.<name>.underdouble[0m
           Whether to enable underdouble

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mExample:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/highlight.nix>[0m

       [1mvim.highlight.<name>.underline[0m
           Whether to enable underline

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mExample:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/highlight.nix>[0m

       [1mvim.keymaps[0m
           Custom keybindings.

           [4mType:[24m list of (submodule)

           [4mDefault:[24m { }

           [4mExample:[0m

               ''
                 vim.keymaps = [
                   {
                     key = "<leader>m";
                     mode = "n";
                     silent = true;
                     action = ":make<CR>";
                   }
                   {
                     key = "<leader>l";
                     mode = ["n" "x"];
                     silent = true;
                     action = "<cmd>cnext<CR>";
                   }
                 ];
               ''

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.keymaps.*.action[0m
           The command to execute.

           [4mType:[24m string

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.keymaps.*.desc[0m
           A description of this keybind, to be shown in which-key, if you have it enabled.

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.keymaps.*.expr[0m
           Means that the action is actually an expression. Equivalent to adding <expr> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.keymaps.*.key[0m
           The key that triggers this keybind.

           [4mType:[24m null or string

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.keymaps.*.lua[0m
           If true, ‘action’ is considered to be lua code. Thus, it will not be wrapped in ‘""’.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.keymaps.*.mode[0m
           The short-name of the mode to set the keymapping for. Passing an empty string is the equivalent of ‘:map’.

           See ‘:help map-modes’ for a list of modes.

           [4mType:[24m string or list of string

           [4mExample:[24m ["n" "v" "c"] for normal, visual and command mode

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.keymaps.*.noremap[0m
           Whether to use the ‘noremap’ variant of the command, ignoring any custom mappings on the defined action. It is highly advised to keep this on, which is the default.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.keymaps.*.nowait[0m
           Whether to wait for extra input on ambiguous mappings. Equivalent to adding <nowait> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.keymaps.*.script[0m
           Equivalent to adding <script> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.keymaps.*.silent[0m
           Whether this mapping should be silent. Equivalent to adding <silent> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.keymaps.*.unique[0m
           Whether to fail if the map is already defined. Equivalent to adding <unique> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.languages.enableDAP[0m
           Turn on Debug Adapter for enabled languages by default

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages>[0m

       [1mvim.languages.enableExtraDiagnostics[0m
           Turn on extra diagnostics for enabled languages by default

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages>[0m

       [1mvim.languages.enableFormat[0m
           Turn on Formatting for enabled languages by default

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages>[0m

       [1mvim.languages.enableTreesitter[0m
           Turn on Treesitter for enabled languages by default

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages>[0m

       [1mvim.languages.assembly.enable[0m
           Whether to enable Assembly support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/asm.nix>[0m

       [1mvim.languages.assembly.lsp.enable[0m
           Whether to enable Assembly LSP support (asm-lsp).

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/asm.nix>[0m

       [1mvim.languages.assembly.lsp.package[0m
           asm-lsp package

           [4mType:[24m package

           [4mDefault:[24m <derivation asm-lsp-0.10.0>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/asm.nix>[0m

       [1mvim.languages.assembly.treesitter.enable[0m
           Whether to enable Assembly treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/asm.nix>[0m

       [1mvim.languages.assembly.treesitter.package[0m
           The asm treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.asm

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/asm.nix>[0m

       [1mvim.languages.astro.enable[0m
           Whether to enable Astro language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/astro.nix>[0m

       [1mvim.languages.astro.extraDiagnostics.enable[0m
           Whether to enable extra Astro diagnostics.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/astro.nix>[0m

       [1mvim.languages.astro.extraDiagnostics.types[0m
           List of Astro diagnostics to enable

           [4mType:[24m list of (value “eslint_d” (singular enum) or (submodule))

           [4mDefault:[0m

               [
                 "eslint_d"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/astro.nix>[0m

       [1mvim.languages.astro.format.enable[0m
           Whether to enable Astro formatting.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/astro.nix>[0m

       [1mvim.languages.astro.format.package[0m
           Astro formatter package

           [4mType:[24m package

           [4mDefault:[24m <derivation prettier-3.5.3>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/astro.nix>[0m

       [1mvim.languages.astro.format.type[0m
           Astro formatter to use

           [4mType:[24m one of “biome”, “prettier”, “prettierd”

           [4mDefault:[24m "prettier"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/astro.nix>[0m

       [1mvim.languages.astro.lsp.enable[0m
           Whether to enable Astro LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/astro.nix>[0m

       [1mvim.languages.astro.lsp.package[0m
           Astro LSP server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation astro-language-server-2.15.4>

           [4mExample:[24m "[lib.getExe pkgs.astro-language-server \"--minify\" \"--stdio\"]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/astro.nix>[0m

       [1mvim.languages.astro.lsp.server[0m
           Astro LSP server to use

           [4mType:[24m value “astro” (singular enum)

           [4mDefault:[24m "astro"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/astro.nix>[0m

       [1mvim.languages.astro.treesitter.enable[0m
           Whether to enable Astro treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/astro.nix>[0m

       [1mvim.languages.astro.treesitter.astroPackage[0m
           The astro treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.astro

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/astro.nix>[0m

       [1mvim.languages.bash.enable[0m
           Whether to enable Bash language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/bash.nix>[0m

       [1mvim.languages.bash.extraDiagnostics.enable[0m
           Whether to enable extra Bash diagnostics.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/bash.nix>[0m

       [1mvim.languages.bash.extraDiagnostics.types[0m
           List of Bash diagnostics to enable

           [4mType:[24m list of (value “shellcheck” (singular enum) or (submodule))

           [4mDefault:[0m

               [
                 "shellcheck"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/bash.nix>[0m

       [1mvim.languages.bash.format.enable[0m
           Enable Bash formatting

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/bash.nix>[0m

       [1mvim.languages.bash.format.package[0m
           Bash formatter package

           [4mType:[24m package

           [4mDefault:[24m <derivation shfmt-3.11.0>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/bash.nix>[0m

       [1mvim.languages.bash.format.type[0m
           Bash formatter to use

           [4mType:[24m value “shfmt” (singular enum)

           [4mDefault:[24m "shfmt"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/bash.nix>[0m

       [1mvim.languages.bash.lsp.enable[0m
           Whether to enable Enable Bash LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/bash.nix>[0m

       [1mvim.languages.bash.lsp.package[0m
           bash-language-server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation bash-language-server-5.4.0>

           [4mExample:[24m [lib.getExe pkgs.nodePackages.bash-language-server "start"]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/bash.nix>[0m

       [1mvim.languages.bash.lsp.server[0m
           Bash LSP server to use

           [4mType:[24m value “bash-ls” (singular enum)

           [4mDefault:[24m "bash-ls"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/bash.nix>[0m

       [1mvim.languages.bash.treesitter.enable[0m
           Whether to enable Bash treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/bash.nix>[0m

       [1mvim.languages.bash.treesitter.package[0m
           The bash treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.bash

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/bash.nix>[0m

       [1mvim.languages.clang.enable[0m
           Whether to enable C/C++ language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/clang.nix>[0m

       [1mvim.languages.clang.cHeader[0m
           C syntax for headers. Can fix treesitter errors, see: https://www.reddit.com/r/neovim/comments/orfpcd/question_does_the_c_parser_from_nvimtreesitter/

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/clang.nix>[0m

       [1mvim.languages.clang.dap.enable[0m
           Enable clang Debug Adapter

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/clang.nix>[0m

       [1mvim.languages.clang.dap.package[0m
           clang debugger package.

           [4mType:[24m package

           [4mDefault:[24m <derivation lldb-19.1.7>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/clang.nix>[0m

       [1mvim.languages.clang.dap.debugger[0m
           clang debugger to use

           [4mType:[24m value “lldb-vscode” (singular enum)

           [4mDefault:[24m "lldb-vscode"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/clang.nix>[0m

       [1mvim.languages.clang.lsp.enable[0m
           Whether to enable clang LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/clang.nix>[0m

       [1mvim.languages.clang.lsp.package[0m
           clang LSP server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation clang-tools-19.1.7>

           [4mExample:[24m "[lib.getExe pkgs.jdt-language-server \" - data \" \" ~/.cache/jdtls/workspace \"]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/clang.nix>[0m

       [1mvim.languages.clang.lsp.opts[0m
           Options to pass to clang LSP server

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/clang.nix>[0m

       [1mvim.languages.clang.lsp.server[0m
           The clang LSP server to use

           [4mType:[24m one of “ccls”, “clangd”

           [4mDefault:[24m "clangd"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/clang.nix>[0m

       [1mvim.languages.clang.treesitter.enable[0m
           Whether to enable C/C++ treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/clang.nix>[0m

       [1mvim.languages.clang.treesitter.cPackage[0m
           The c treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.c

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/clang.nix>[0m

       [1mvim.languages.clang.treesitter.cppPackage[0m
           The cpp treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.cpp

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/clang.nix>[0m

       [1mvim.languages.clojure.enable[0m
           Whether to enable Clojure language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/clojure.nix>[0m

       [1mvim.languages.clojure.lsp.enable[0m
           Whether to enable Clojure LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/clojure.nix>[0m

       [1mvim.languages.clojure.lsp.package[0m
           Clojure LSP

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation clojure-lsp-2025.03.27-20.21.36>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/clojure.nix>[0m

       [1mvim.languages.clojure.treesitter.enable[0m
           Whether to enable Clojure treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/clojure.nix>[0m

       [1mvim.languages.clojure.treesitter.package[0m
           The clojure treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.clojure

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/clojure.nix>[0m

       [1mvim.languages.csharp.enable[0m
           Whether to enable C# language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/csharp.nix>[0m

       [1mvim.languages.csharp.lsp.enable[0m
           Whether to enable C# LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/csharp.nix>[0m

       [1mvim.languages.csharp.lsp.package[0m
           C# LSP server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation csharp-ls-0.17.0>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/csharp.nix>[0m

       [1mvim.languages.csharp.lsp.server[0m
           C# LSP server to use

           [4mType:[24m one of “csharp_ls”, “omnisharp”

           [4mDefault:[24m "csharp_ls"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/csharp.nix>[0m

       [1mvim.languages.csharp.treesitter.enable[0m
           Whether to enable C# treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/csharp.nix>[0m

       [1mvim.languages.csharp.treesitter.package[0m
           The c-sharp treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.c-sharp

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/csharp.nix>[0m

       [1mvim.languages.css.enable[0m
           Whether to enable CSS language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/css.nix>[0m

       [1mvim.languages.css.format.enable[0m
           Whether to enable CSS formatting.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/css.nix>[0m

       [1mvim.languages.css.format.package[0m
           CSS formatter package

           [4mType:[24m package

           [4mDefault:[24m <derivation prettier-3.5.3>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/css.nix>[0m

       [1mvim.languages.css.format.type[0m
           CSS formatter to use

           [4mType:[24m one of “biome”, “prettier”, “prettierd”

           [4mDefault:[24m "prettier"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/css.nix>[0m

       [1mvim.languages.css.lsp.enable[0m
           Whether to enable CSS LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/css.nix>[0m

       [1mvim.languages.css.lsp.package[0m
           CSS LSP server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation vscode-langservers-extracted-4.10.0>

           [4mExample:[24m "[lib.getExe pkgs.jdt-language-server \" - data \" \" ~/.cache/jdtls/workspace \"]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/css.nix>[0m

       [1mvim.languages.css.lsp.server[0m
           CSS LSP server to use

           [4mType:[24m value “vscode-langservers-extracted” (singular enum)

           [4mDefault:[24m "vscode-langservers-extracted"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/css.nix>[0m

       [1mvim.languages.css.treesitter.enable[0m
           Whether to enable CSS treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/css.nix>[0m

       [1mvim.languages.css.treesitter.package[0m
           The css treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.css

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/css.nix>[0m

       [1mvim.languages.cue.enable[0m
           Whether to enable CUE language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/cue.nix>[0m

       [1mvim.languages.cue.lsp.enable[0m
           Whether to enable CUE LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/cue.nix>[0m

       [1mvim.languages.cue.lsp.package[0m
           cue lsp implementation

           [4mType:[24m package

           [4mDefault:[24m <derivation cue-0.13.0>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/cue.nix>[0m

       [1mvim.languages.cue.treesitter.enable[0m
           Whether to enable CUE treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/cue.nix>[0m

       [1mvim.languages.cue.treesitter.package[0m
           The cue treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.cue

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/cue.nix>[0m

       [1mvim.languages.dart.enable[0m
           Whether to enable Dart language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/dart.nix>[0m

       [1mvim.languages.dart.dap.enable[0m
           Enable Dart DAP support via flutter-tools

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/dart.nix>[0m

       [1mvim.languages.dart.flutter-tools.enable[0m
           Enable flutter-tools for flutter support

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/dart.nix>[0m

       [1mvim.languages.dart.flutter-tools.enableNoResolvePatch[0m
           Whether to patch flutter-tools so that it doesn’t resolve symlinks when detecting flutter path.

               [1mNote[0m
               This is required if ‘flutterPackage’ is set to null and the flutter package in your ‘PATH’ was built with Nix. If you are using a flutter SDK installed from a different source and encounter the error “‘dart’ missing from ‘PATH’”, leave this option
               disabled.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/dart.nix>[0m

       [1mvim.languages.dart.flutter-tools.color.enable[0m
           Whether to enable highlighting color variables.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/dart.nix>[0m

       [1mvim.languages.dart.flutter-tools.color.highlightBackground[0m
           Highlight the background

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/dart.nix>[0m

       [1mvim.languages.dart.flutter-tools.color.highlightForeground[0m
           Highlight the foreground

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/dart.nix>[0m

       [1mvim.languages.dart.flutter-tools.color.virtualText.enable[0m
           Whether to enable Show the highlight using virtual text.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/dart.nix>[0m

       [1mvim.languages.dart.flutter-tools.color.virtualText.character[0m
           Virtual text character to highlight

           [4mType:[24m string

           [4mDefault:[24m "■"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/dart.nix>[0m

       [1mvim.languages.dart.flutter-tools.flutterPackage[0m
           Flutter package, or null to detect the flutter path at runtime instead.

           [4mType:[24m null or package

           [4mDefault:[24m <derivation flutter-wrapped-3.29.3-sdk-links>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/dart.nix>[0m

       [1mvim.languages.dart.lsp.enable[0m
           Whether to enable Dart LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/dart.nix>[0m

       [1mvim.languages.dart.lsp.package[0m
           Dart LSP server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation dart-3.7.3>

           [4mExample:[24m "[lib.getExe pkgs.jdt-language-server \"-data\" \"~/.cache/jdtls/workspace\"]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/dart.nix>[0m

       [1mvim.languages.dart.lsp.opts[0m
           Options to pass to Dart LSP server

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/dart.nix>[0m

       [1mvim.languages.dart.lsp.server[0m
           The Dart LSP server to use

           [4mType:[24m value “dart” (singular enum)

           [4mDefault:[24m "dart"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/dart.nix>[0m

       [1mvim.languages.dart.treesitter.enable[0m
           Whether to enable Dart treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/dart.nix>[0m

       [1mvim.languages.dart.treesitter.package[0m
           The dart treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.dart

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/dart.nix>[0m

       [1mvim.languages.elixir.enable[0m
           Whether to enable Elixir language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/elixir.nix>[0m

       [1mvim.languages.elixir.elixir-tools.enable[0m
           Whether to enable Elixir tools.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/elixir.nix>[0m

       [1mvim.languages.elixir.format.enable[0m
           Whether to enable Elixir formatting.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/elixir.nix>[0m

       [1mvim.languages.elixir.format.package[0m
           Elixir formatter package

           [4mType:[24m package

           [4mDefault:[24m <derivation elixir-1.18.4>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/elixir.nix>[0m

       [1mvim.languages.elixir.format.type[0m
           Elixir formatter to use

           [4mType:[24m value “mix” (singular enum)

           [4mDefault:[24m "mix"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/elixir.nix>[0m

       [1mvim.languages.elixir.lsp.enable[0m
           Whether to enable Elixir LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/elixir.nix>[0m

       [1mvim.languages.elixir.lsp.package[0m
           Elixir LSP server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation elixir-ls-0.27.2>

           [4mExample:[24m "[lib.getExe pkgs.jdt-language-server \" - data \" \" ~/.cache/jdtls/workspace \"]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/elixir.nix>[0m

       [1mvim.languages.elixir.lsp.server[0m
           Elixir LSP server to use

           [4mType:[24m value “elixirls” (singular enum)

           [4mDefault:[24m "elixirls"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/elixir.nix>[0m

       [1mvim.languages.elixir.treesitter.enable[0m
           Whether to enable Elixir treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/elixir.nix>[0m

       [1mvim.languages.elixir.treesitter.package[0m
           The elixir treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.elixir

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/elixir.nix>[0m

       [1mvim.languages.fsharp.enable[0m
           Whether to enable F# language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/fsharp.nix>[0m

       [1mvim.languages.fsharp.format.enable[0m
           Whether to enable F# formatting.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/fsharp.nix>[0m

       [1mvim.languages.fsharp.format.package[0m
           F# formatter package

           [4mType:[24m package

           [4mDefault:[24m <derivation fantomas-7.0.1>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/fsharp.nix>[0m

       [1mvim.languages.fsharp.format.type[0m
           F# formatter to use

           [4mType:[24m value “fantomas” (singular enum)

           [4mDefault:[24m "fantomas"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/fsharp.nix>[0m

       [1mvim.languages.fsharp.lsp.enable[0m
           Whether to enable F# LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/fsharp.nix>[0m

       [1mvim.languages.fsharp.lsp.package[0m
           F# LSP server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation fsautocomplete-0.77.7>

           [4mExample:[24m "[lib.getExe pkgs.fsautocomplete \"--state-directory\" \"~/.cache/fsautocomplete\"]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/fsharp.nix>[0m

       [1mvim.languages.fsharp.lsp.server[0m
           F# LSP server to use

           [4mType:[24m value “fsautocomplete” (singular enum)

           [4mDefault:[24m "fsautocomplete"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/fsharp.nix>[0m

       [1mvim.languages.fsharp.treesitter.enable[0m
           Whether to enable F# treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/fsharp.nix>[0m

       [1mvim.languages.fsharp.treesitter.package[0m
           The fsharp treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.fsharp

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/fsharp.nix>[0m

       [1mvim.languages.gleam.enable[0m
           Whether to enable Gleam language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/gleam.nix>[0m

       [1mvim.languages.gleam.lsp.enable[0m
           Whether to enable Gleam LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/gleam.nix>[0m

       [1mvim.languages.gleam.lsp.package[0m
           Gleam LSP server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation gleam-1.10.0>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/gleam.nix>[0m

       [1mvim.languages.gleam.lsp.server[0m
           Gleam LSP server to use

           [4mType:[24m value “gleam” (singular enum)

           [4mDefault:[24m "gleam"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/gleam.nix>[0m

       [1mvim.languages.gleam.treesitter.enable[0m
           Whether to enable Gleam treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/gleam.nix>[0m

       [1mvim.languages.gleam.treesitter.package[0m
           The gleam treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.gleam

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/gleam.nix>[0m

       [1mvim.languages.go.enable[0m
           Whether to enable Go language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/go.nix>[0m

       [1mvim.languages.go.dap.enable[0m
           Enable Go Debug Adapter via nvim-dap-go plugin

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/go.nix>[0m

       [1mvim.languages.go.dap.package[0m
           Go debugger package.

           [4mType:[24m package

           [4mDefault:[24m <derivation delve-1.24.2>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/go.nix>[0m

       [1mvim.languages.go.dap.debugger[0m
           Go debugger to use

           [4mType:[24m value “delve” (singular enum)

           [4mDefault:[24m "delve"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/go.nix>[0m

       [1mvim.languages.go.format.enable[0m
           Whether to enable Go formatting.

           [4mType:[24m boolean

           [4mDefault:[24m disabled if Go LSP is enabled, otherwise follows [1mvim.languages.enableFormat[0m

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/go.nix>[0m

       [1mvim.languages.go.format.package[0m
           Go formatter package

           [4mType:[24m package

           [4mDefault:[24m <derivation go-1.24.3>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/go.nix>[0m

       [1mvim.languages.go.format.type[0m
           Go formatter to use

           [4mType:[24m one of “gofmt”, “gofumpt”, “golines”

           [4mDefault:[24m "gofmt"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/go.nix>[0m

       [1mvim.languages.go.lsp.enable[0m
           Whether to enable Go LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/go.nix>[0m

       [1mvim.languages.go.lsp.package[0m
           Go LSP server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation gopls-0.18.1>

           [4mExample:[24m "[lib.getExe pkgs.jdt-language-server \" - data \" \" ~/.cache/jdtls/workspace \"]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/go.nix>[0m

       [1mvim.languages.go.lsp.server[0m
           Go LSP server to use

           [4mType:[24m value “gopls” (singular enum)

           [4mDefault:[24m "gopls"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/go.nix>[0m

       [1mvim.languages.go.treesitter.enable[0m
           Whether to enable Go treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/go.nix>[0m

       [1mvim.languages.go.treesitter.package[0m
           The go treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.go

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/go.nix>[0m

       [1mvim.languages.haskell.enable[0m
           Whether to enable Haskell support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/haskell.nix>[0m

       [1mvim.languages.haskell.dap.enable[0m
           Whether to enable DAP support for Haskell.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/haskell.nix>[0m

       [1mvim.languages.haskell.dap.package[0m
           Haskell DAP package or command to run the Haskell DAP

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation haskell-debug-adapter-0.0.42.0>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/haskell.nix>[0m

       [1mvim.languages.haskell.lsp.enable[0m
           Whether to enable LSP support for Haskell.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/haskell.nix>[0m

       [1mvim.languages.haskell.lsp.package[0m
           Haskell LSP package or command to run the Haskell LSP

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation haskell-language-server-2.10.0.0>

           [4mExample:[24m "[ (lib.getExe pkgs.haskellPackages.haskell-language-server) \"--debug\" ]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/haskell.nix>[0m

       [1mvim.languages.haskell.treesitter.enable[0m
           Whether to enable Treesitter support for Haskell.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/haskell.nix>[0m

       [1mvim.languages.haskell.treesitter.package[0m
           The haskell treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.haskell

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/haskell.nix>[0m

       [1mvim.languages.hcl.enable[0m
           Whether to enable HCL support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/hcl.nix>[0m

       [1mvim.languages.hcl.format.enable[0m
           Enable HCL formatting

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/hcl.nix>[0m

       [1mvim.languages.hcl.format.package[0m
           HCL formatter package

           [4mType:[24m package

           [4mDefault:[24m <derivation hclfmt-2.23.0>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/hcl.nix>[0m

       [1mvim.languages.hcl.format.type[0m
           HCL formatter to use

           [4mType:[24m value “hclfmt” (singular enum)

           [4mDefault:[24m "hclfmt"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/hcl.nix>[0m

       [1mvim.languages.hcl.lsp.enable[0m
           Whether to enable HCL LSP support (terraform-ls).

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/hcl.nix>[0m

       [1mvim.languages.hcl.lsp.package[0m
           HCL language server package (terraform-ls)

           [4mType:[24m package

           [4mDefault:[24m <derivation terraform-ls-0.36.4>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/hcl.nix>[0m

       [1mvim.languages.hcl.treesitter.enable[0m
           Whether to enable HCL treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/hcl.nix>[0m

       [1mvim.languages.hcl.treesitter.package[0m
           The hcl treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.hcl

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/hcl.nix>[0m

       [1mvim.languages.helm.enable[0m
           Whether to enable Helm language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/helm.nix>[0m

       [1mvim.languages.helm.lsp.enable[0m
           Whether to enable Helm LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/helm.nix>[0m

       [1mvim.languages.helm.lsp.package[0m
           Helm LSP server package

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation helm-ls-0.2.2>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/helm.nix>[0m

       [1mvim.languages.helm.lsp.server[0m
           Helm LSP server to use

           [4mType:[24m value “helm-ls” (singular enum)

           [4mDefault:[24m "helm-ls"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/helm.nix>[0m

       [1mvim.languages.helm.treesitter.enable[0m
           Whether to enable Helm treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/helm.nix>[0m

       [1mvim.languages.helm.treesitter.package[0m
           The helm treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.helm

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/helm.nix>[0m

       [1mvim.languages.html.enable[0m
           Whether to enable HTML language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/html.nix>[0m

       [1mvim.languages.html.treesitter.enable[0m
           Whether to enable HTML treesitter support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/html.nix>[0m

       [1mvim.languages.html.treesitter.package[0m
           The html treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.html

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/html.nix>[0m

       [1mvim.languages.html.treesitter.autotagHtml[0m
           Enable autoclose/autorename of html tags (nvim-ts-autotag)

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/html.nix>[0m

       [1mvim.languages.java.enable[0m
           Whether to enable Java language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/java.nix>[0m

       [1mvim.languages.java.lsp.enable[0m
           Whether to enable Java LSP support (java-language-server).

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/java.nix>[0m

       [1mvim.languages.java.lsp.package[0m
           java language server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation jdt-language-server-1.46.1>

           [4mExample:[24m "[lib.getExe pkgs.jdt-language-server \"-data\" \"~/.cache/jdtls/workspace\"]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/java.nix>[0m

       [1mvim.languages.java.treesitter.enable[0m
           Whether to enable Java treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/java.nix>[0m

       [1mvim.languages.java.treesitter.package[0m
           The java treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.java

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/java.nix>[0m

       [1mvim.languages.julia.enable[0m
           Whether to enable Julia language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/julia.nix>[0m

       [1mvim.languages.julia.lsp.enable[0m
           Whether to enable Julia LSP support.

               [1mNote[0m
               The entirety of Julia is bundled with nvf, if you enable this option, since there is no way to provide only the LSP server.

               If you want to avoid that, you have to change [1mvim.languages.julia.lsp.package[22m[1] to use the Julia binary in [1mPATH [22m(set it to ‘null’), and add the ‘LanguageServer’ package to Julia in your devshells.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/julia.nix>[0m

            [1m1. [22msee the [1mvim.languages.julia.lsp.package [22moption

       [1mvim.languages.julia.lsp.package[0m
           Julia LSP server package, ‘null’ to use the Julia binary in [1mPATH[22m, or the command to run as a list of strings.

           [4mType:[24m null or package or list of string

           [4mDefault:[24m <derivation julia-1.11.5-env>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/julia.nix>[0m

       [1mvim.languages.julia.lsp.server[0m
           Julia LSP server to use

           [4mType:[24m value “julials” (singular enum)

           [4mDefault:[24m "julials"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/julia.nix>[0m

       [1mvim.languages.julia.treesitter.enable[0m
           Whether to enable Julia treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/julia.nix>[0m

       [1mvim.languages.julia.treesitter.package[0m
           The julia treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.julia

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/julia.nix>[0m

       [1mvim.languages.kotlin.enable[0m
           Whether to enable Kotlin/HCL support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/kotlin.nix>[0m

       [1mvim.languages.kotlin.extraDiagnostics.enable[0m
           Whether to enable extra Kotlin diagnostics.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/kotlin.nix>[0m

       [1mvim.languages.kotlin.extraDiagnostics.types[0m
           List of Kotlin diagnostics to enable

           [4mType:[24m list of (value “ktlint” (singular enum) or (submodule))

           [4mDefault:[0m

               [
                 "ktlint"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/kotlin.nix>[0m

       [1mvim.languages.kotlin.lsp.enable[0m
           Whether to enable Kotlin LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/kotlin.nix>[0m

       [1mvim.languages.kotlin.lsp.package[0m
           kotlin_language_server package with Kotlin runtime

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation kotlin-language-server-1.3.13>

           [4mExample:[0m

               pkgs.symlinkJoin {
                 name = "kotlin-language-server-wrapped";
                 paths = [pkgs.kotlin-language-server];
                 nativeBuildInputs = [pkgs.makeBinaryWrapper];
                 postBuild = ''
                   wrapProgram $out/bin/kotlin-language-server \
                     --prefix PATH : ${pkgs.kotlin}/bin
                 '';
               };

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/kotlin.nix>[0m

       [1mvim.languages.kotlin.treesitter.enable[0m
           Whether to enable Kotlin treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/kotlin.nix>[0m

       [1mvim.languages.kotlin.treesitter.package[0m
           The kotlin treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.kotlin

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/kotlin.nix>[0m

       [1mvim.languages.lua.enable[0m
           Whether to enable Lua language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/lua.nix>[0m

       [1mvim.languages.lua.extraDiagnostics.enable[0m
           Whether to enable extra Lua diagnostics.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/lua.nix>[0m

       [1mvim.languages.lua.extraDiagnostics.types[0m
           List of Lua diagnostics to enable

           [4mType:[24m list of (value “luacheck” (singular enum) or (submodule))

           [4mDefault:[0m

               [
                 "luacheck"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/lua.nix>[0m

       [1mvim.languages.lua.format.enable[0m
           Enable Lua formatting

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/lua.nix>[0m

       [1mvim.languages.lua.format.package[0m
           Lua formatter package

           [4mType:[24m package

           [4mDefault:[24m <derivation stylua-2.1.0>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/lua.nix>[0m

       [1mvim.languages.lua.format.type[0m
           Lua formatter to use

           [4mType:[24m value “stylua” (singular enum)

           [4mDefault:[24m "stylua"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/lua.nix>[0m

       [1mvim.languages.lua.lsp.enable[0m
           Whether to enable Lua LSP support via LuaLS.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/lua.nix>[0m

       [1mvim.languages.lua.lsp.package[0m
           LuaLS package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation lua-language-server-3.14.0>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/lua.nix>[0m

       [1mvim.languages.lua.lsp.lazydev.enable[0m
           Whether to enable lazydev.nvim integration, useful for neovim plugin developers.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/lua.nix>[0m

       [1mvim.languages.lua.treesitter.enable[0m
           Whether to enable Lua Treesitter support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/lua.nix>[0m

       [1mvim.languages.lua.treesitter.package[0m
           The lua treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.lua

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/lua.nix>[0m

       [1mvim.languages.markdown.enable[0m
           Whether to enable Markdown markup language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/markdown.nix>[0m

       [1mvim.languages.markdown.extensions.markview-nvim.enable[0m
           [1mmarkview.nvim[22m[1] - a hackable markdown, Typst, latex, html(inline) & YAML previewer

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/markdown.nix>[0m

            [1m1. [22mhttps://github.com/OXY2DEV/markview.nvim

       [1mvim.languages.markdown.extensions.markview-nvim.setupOpts[0m
           Option table to pass into the setup function of markview-nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/markdown.nix>[0m

       [1mvim.languages.markdown.extensions.render-markdown-nvim.enable[0m
           Inline Markdown rendering with [1mrender-markdown.nvim[22m[1]

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/markdown.nix>[0m

            [1m1. [22mhttps://github.com/MeanderingProgrammer/render-markdown.nvim

       [1mvim.languages.markdown.extensions.render-markdown-nvim.setupOpts[0m
           Option table to pass into the setup function of render-markdown

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/markdown.nix>[0m

       [1mvim.languages.markdown.extensions.render-markdown-nvim.setupOpts.file_types[0m
           List of buffer filetypes to enable this plugin in.

           This will cause the plugin to attach to new buffers who have any of these filetypes.

           [4mType:[24m null or (list of string)

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/markdown.nix>[0m

       [1mvim.languages.markdown.extraDiagnostics.enable[0m
           Whether to enable extra Markdown diagnostics.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/markdown.nix>[0m

       [1mvim.languages.markdown.extraDiagnostics.types[0m
           List of Markdown diagnostics to enable

           [4mType:[24m list of (value “markdownlint-cli2” (singular enum) or (submodule))

           [4mDefault:[0m

               [
                 "markdownlint-cli2"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/markdown.nix>[0m

       [1mvim.languages.markdown.format.enable[0m
           Whether to enable Markdown formatting.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/markdown.nix>[0m

       [1mvim.languages.markdown.format.package[0m
           Markdown formatter package

           [4mType:[24m package

           [4mDefault:[24m <derivation deno-2.2.12>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/markdown.nix>[0m

       [1mvim.languages.markdown.format.extraFiletypes[0m
           Extra filetypes to format with the Markdown formatter

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/markdown.nix>[0m

       [1mvim.languages.markdown.format.type[0m
           Markdown formatter to use. ‘denofmt’ is deprecated and currently aliased to deno_fmt.

           [4mType:[24m one of “deno_fmt”, “denofmt”, “prettierd”

           [4mDefault:[24m "deno_fmt"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/markdown.nix>[0m

       [1mvim.languages.markdown.lsp.enable[0m
           Whether to enable Enable Markdown LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/markdown.nix>[0m

       [1mvim.languages.markdown.lsp.package[0m
           Markdown LSP server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation marksman-2024-12-18>

           [4mExample:[24m "[lib.getExe pkgs.jdt-language-server \" - data \" \" ~/.cache/jdtls/workspace \"]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/markdown.nix>[0m

       [1mvim.languages.markdown.lsp.server[0m
           Markdown LSP server to use

           [4mType:[24m value “marksman” (singular enum)

           [4mDefault:[24m "marksman"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/markdown.nix>[0m

       [1mvim.languages.markdown.treesitter.enable[0m
           Enable Markdown treesitter

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/markdown.nix>[0m

       [1mvim.languages.markdown.treesitter.mdInlinePackage[0m
           The markdown-inline treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.markdown-inline

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/markdown.nix>[0m

       [1mvim.languages.markdown.treesitter.mdPackage[0m
           The markdown treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.markdown

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/markdown.nix>[0m

       [1mvim.languages.nim.enable[0m
           Whether to enable Nim language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nim.nix>[0m

       [1mvim.languages.nim.format.enable[0m
           Whether to enable Nim formatting.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nim.nix>[0m

       [1mvim.languages.nim.format.package[0m
           Nim formatter package

           [4mType:[24m package

           [4mDefault:[24m <derivation x86_64-unknown-linux-gnu-nim-wrapper-2.2.4>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nim.nix>[0m

       [1mvim.languages.nim.format.type[0m
           Nim formatter to use

           [4mType:[24m value “nimpretty” (singular enum)

           [4mDefault:[24m "nimpretty"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nim.nix>[0m

       [1mvim.languages.nim.lsp.enable[0m
           Whether to enable Nim LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nim.nix>[0m

       [1mvim.languages.nim.lsp.package[0m
           Nim LSP server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation nimlsp-0.4.6>

           [4mExample:[24m "[lib.getExe pkgs.nimlsp]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nim.nix>[0m

       [1mvim.languages.nim.lsp.server[0m
           Nim LSP server to use

           [4mType:[24m string

           [4mDefault:[24m "nimlsp"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nim.nix>[0m

       [1mvim.languages.nim.treesitter.enable[0m
           Whether to enable Nim treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nim.nix>[0m

       [1mvim.languages.nim.treesitter.package[0m
           The nim treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.nim

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nim.nix>[0m

       [1mvim.languages.nix.enable[0m
           Whether to enable Nix language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nix.nix>[0m

       [1mvim.languages.nix.extraDiagnostics.enable[0m
           Whether to enable extra Nix diagnostics.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nix.nix>[0m

       [1mvim.languages.nix.extraDiagnostics.types[0m
           List of Nix diagnostics to enable

           [4mType:[24m list of (one of “deadnix”, “statix” or (submodule))

           [4mDefault:[0m

               [
                 "statix"
                 "deadnix"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nix.nix>[0m

       [1mvim.languages.nix.format.enable[0m
           Whether to enable Nix formatting.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nix.nix>[0m

       [1mvim.languages.nix.format.package[0m
           Nix formatter package

           [4mType:[24m package

           [4mDefault:[24m <derivation alejandra-4.0.0>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nix.nix>[0m

       [1mvim.languages.nix.format.type[0m
           Nix formatter to use

           [4mType:[24m one of “alejandra”, “nixfmt”

           [4mDefault:[24m "alejandra"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nix.nix>[0m

       [1mvim.languages.nix.lsp.enable[0m
           Whether to enable Nix LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nix.nix>[0m

       [1mvim.languages.nix.lsp.package[0m
           Nix LSP server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation nil-unstable-2025-03-04>

           [4mExample:[24m "[lib.getExe pkgs.jdt-language-server \"-data\" \"~/.cache/jdtls/workspace\"]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nix.nix>[0m

       [1mvim.languages.nix.lsp.options[0m
           Options to pass to nixd LSP server

           [4mType:[24m null or (attribute set of anything)

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nix.nix>[0m

       [1mvim.languages.nix.lsp.server[0m
           Nix LSP server to use

           [4mType:[24m one of “nil”, “nixd”

           [4mDefault:[24m "nil"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nix.nix>[0m

       [1mvim.languages.nix.treesitter.enable[0m
           Whether to enable Nix treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nix.nix>[0m

       [1mvim.languages.nix.treesitter.package[0m
           The nix treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.nix

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nix.nix>[0m

       [1mvim.languages.nu.enable[0m
           Whether to enable Nu language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nu.nix>[0m

       [1mvim.languages.nu.lsp.enable[0m
           Whether to enable Nu LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nu.nix>[0m

       [1mvim.languages.nu.lsp.package[0m
           Nu LSP server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation nushell-0.104.0>

           [4mExample:[24m "[(lib.getExe pkgs.nushell) \"--lsp\"]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nu.nix>[0m

       [1mvim.languages.nu.lsp.server[0m
           Nu LSP server to use

           [4mType:[24m string

           [4mDefault:[24m "nushell"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nu.nix>[0m

       [1mvim.languages.nu.treesitter.enable[0m
           Whether to enable Nu treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nu.nix>[0m

       [1mvim.languages.nu.treesitter.package[0m
           The nu treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.nu

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/nu.nix>[0m

       [1mvim.languages.ocaml.enable[0m
           Whether to enable OCaml language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ocaml.nix>[0m

       [1mvim.languages.ocaml.format.enable[0m
           Whether to enable OCaml formatting support (ocamlformat).

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ocaml.nix>[0m

       [1mvim.languages.ocaml.format.package[0m
           OCaml formatter package

           [4mType:[24m package

           [4mDefault:[24m <derivation ocaml5.3.0-ocamlformat-0.27.0>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ocaml.nix>[0m

       [1mvim.languages.ocaml.format.type[0m
           OCaml formatter to use

           [4mType:[24m value “ocamlformat” (singular enum)

           [4mDefault:[24m "ocamlformat"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ocaml.nix>[0m

       [1mvim.languages.ocaml.lsp.enable[0m
           Whether to enable OCaml LSP support (ocaml-lsp).

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ocaml.nix>[0m

       [1mvim.languages.ocaml.lsp.package[0m
           OCaml language server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation ocaml5.3.0-ocaml-lsp-server-1.22.0>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ocaml.nix>[0m

       [1mvim.languages.ocaml.lsp.server[0m
           OCaml LSP server to user

           [4mType:[24m value “ocaml-lsp” (singular enum)

           [4mDefault:[24m "ocaml-lsp"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ocaml.nix>[0m

       [1mvim.languages.ocaml.treesitter.enable[0m
           Whether to enable OCaml treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ocaml.nix>[0m

       [1mvim.languages.ocaml.treesitter.package[0m
           The ocaml treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.ocaml

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ocaml.nix>[0m

       [1mvim.languages.odin.enable[0m
           Whether to enable Odin language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/odin.nix>[0m

       [1mvim.languages.odin.lsp.enable[0m
           Whether to enable Odin LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/odin.nix>[0m

       [1mvim.languages.odin.lsp.package[0m
           Ols package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation ols-0-unstable-2025-05-11>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/odin.nix>[0m

       [1mvim.languages.odin.lsp.server[0m
           Odin LSP server to use

           [4mType:[24m value “ols” (singular enum)

           [4mDefault:[24m "ols"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/odin.nix>[0m

       [1mvim.languages.odin.treesitter.enable[0m
           Whether to enable Odin treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/odin.nix>[0m

       [1mvim.languages.odin.treesitter.package[0m
           The odin treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.odin

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/odin.nix>[0m

       [1mvim.languages.php.enable[0m
           Whether to enable PHP language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/php.nix>[0m

       [1mvim.languages.php.lsp.enable[0m
           Whether to enable PHP LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/php.nix>[0m

       [1mvim.languages.php.lsp.package[0m
           PHP LSP server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation phpactor-2025.04.17.0>

           [4mExample:[24m "[lib.getExe pkgs.jdt-language-server \" - data \" \" ~/.cache/jdtls/workspace \"]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/php.nix>[0m

       [1mvim.languages.php.lsp.server[0m
           PHP LSP server to use

           [4mType:[24m one of “intelephense”, “phan”, “phpactor”

           [4mDefault:[24m "phpactor"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/php.nix>[0m

       [1mvim.languages.php.treesitter.enable[0m
           Whether to enable PHP treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/php.nix>[0m

       [1mvim.languages.php.treesitter.package[0m
           The php treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.php

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/php.nix>[0m

       [1mvim.languages.python.enable[0m
           Whether to enable Python language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/python.nix>[0m

       [1mvim.languages.python.dap.enable[0m
           Enable Python Debug Adapter

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/python.nix>[0m

       [1mvim.languages.python.dap.package[0m
           Python debugger package. This is a python package with debugpy installed, see https://nixos.wiki/wiki/Python#Install_Python_Packages.

           [4mType:[24m package

           [4mDefault:[24m <derivation python3-3.12.10-env>

           [4mExample:[24m with pkgs; python39.withPackages (ps: with ps; [debugpy])

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/python.nix>[0m

       [1mvim.languages.python.dap.debugger[0m
           Python debugger to use

           [4mType:[24m value “debugpy” (singular enum)

           [4mDefault:[24m "debugpy"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/python.nix>[0m

       [1mvim.languages.python.format.enable[0m
           Whether to enable Python formatting.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/python.nix>[0m

       [1mvim.languages.python.format.package[0m
           Python formatter package

           [4mType:[24m package

           [4mDefault:[24m <derivation black-25.1.0>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/python.nix>[0m

       [1mvim.languages.python.format.type[0m
           Python formatter to use

           [4mType:[24m one of “black”, “black-and-isort”, “isort”, “ruff”

           [4mDefault:[24m "black"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/python.nix>[0m

       [1mvim.languages.python.lsp.enable[0m
           Whether to enable Python LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/python.nix>[0m

       [1mvim.languages.python.lsp.package[0m
           python LSP server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation basedpyright-1.29.1>

           [4mExample:[24m "[lib.getExe pkgs.jdt-language-server \"-data\" \"~/.cache/jdtls/workspace\"]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/python.nix>[0m

       [1mvim.languages.python.lsp.server[0m
           Python LSP server to use

           [4mType:[24m one of “basedpyright”, “pyright”, “python-lsp-server”

           [4mDefault:[24m "basedpyright"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/python.nix>[0m

       [1mvim.languages.python.treesitter.enable[0m
           Whether to enable Python treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/python.nix>[0m

       [1mvim.languages.python.treesitter.package[0m
           Python treesitter grammar to use

           [4mType:[24m package

           [4mDefault:[24m <derivation python-grammar-0.0.0+rev=710796b>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/python.nix>[0m

       [1mvim.languages.r.enable[0m
           Whether to enable R language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/r.nix>[0m

       [1mvim.languages.r.format.enable[0m
           Whether to enable R formatting.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/r.nix>[0m

       [1mvim.languages.r.format.package[0m
           R formatter package

           [4mType:[24m package

           [4mDefault:[24m <derivation R-4.5.0-wrapper>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/r.nix>[0m

       [1mvim.languages.r.format.type[0m
           R formatter to use

           [4mType:[24m one of “format_r”, “styler”

           [4mDefault:[24m "format_r"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/r.nix>[0m

       [1mvim.languages.r.lsp.enable[0m
           Whether to enable R LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/r.nix>[0m

       [1mvim.languages.r.lsp.package[0m
           R LSP server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation r_lsp>

           [4mExample:[24m [ (lib.getExe pkgs.jdt-language-server) "-data" "~/.cache/jdtls/workspace" ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/r.nix>[0m

       [1mvim.languages.r.lsp.server[0m
           R LSP server to use

           [4mType:[24m value “r_language_server” (singular enum)

           [4mDefault:[24m "r_language_server"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/r.nix>[0m

       [1mvim.languages.r.treesitter.enable[0m
           Whether to enable R treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/r.nix>[0m

       [1mvim.languages.r.treesitter.package[0m
           The r treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.r

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/r.nix>[0m

       [1mvim.languages.ruby.enable[0m
           Whether to enable Ruby language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ruby.nix>[0m

       [1mvim.languages.ruby.extraDiagnostics.enable[0m
           Whether to enable Ruby extra diagnostics support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ruby.nix>[0m

       [1mvim.languages.ruby.extraDiagnostics.types[0m
           List of Ruby diagnostics to enable

           [4mType:[24m list of (value “rubocop” (singular enum) or (submodule))

           [4mDefault:[0m

               [
                 "rubocop"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ruby.nix>[0m

       [1mvim.languages.ruby.format.enable[0m
           Whether to enable Ruby formatter support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ruby.nix>[0m

       [1mvim.languages.ruby.format.package[0m
           Ruby formatter package

           [4mType:[24m package

           [4mDefault:[24m <derivation ruby3.3-rubocop-1.75.2>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ruby.nix>[0m

       [1mvim.languages.ruby.format.type[0m
           Ruby formatter to use

           [4mType:[24m value “rubocop” (singular enum)

           [4mDefault:[24m "rubocop"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ruby.nix>[0m

       [1mvim.languages.ruby.lsp.enable[0m
           Whether to enable Ruby LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ruby.nix>[0m

       [1mvim.languages.ruby.lsp.package[0m
           Ruby LSP server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation ruby3.3-solargraph-0.54.0>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ruby.nix>[0m

       [1mvim.languages.ruby.lsp.server[0m
           Ruby LSP server to use

           [4mType:[24m one of “rubylsp”, “rubyserver”

           [4mDefault:[24m "rubyserver"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ruby.nix>[0m

       [1mvim.languages.ruby.treesitter.enable[0m
           Whether to enable Ruby treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ruby.nix>[0m

       [1mvim.languages.ruby.treesitter.package[0m
           The ruby treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.ruby

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ruby.nix>[0m

       [1mvim.languages.rust.enable[0m
           Whether to enable Rust language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/rust.nix>[0m

       [1mvim.languages.rust.crates.enable[0m
           Whether to enable crates-nvim, tools for managing dependencies.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/rust.nix>[0m

       [1mvim.languages.rust.crates.codeActions[0m
           Enable code actions through null-ls

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/rust.nix>[0m

       [1mvim.languages.rust.dap.enable[0m
           Rust Debug Adapter support

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/rust.nix>[0m

       [1mvim.languages.rust.dap.package[0m
           lldb package

           [4mType:[24m package

           [4mDefault:[24m <derivation lldb-19.1.7>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/rust.nix>[0m

       [1mvim.languages.rust.format.enable[0m
           Whether to enable Rust formatting.

           [4mType:[24m boolean

           [4mDefault:[24m Disabled if Rust LSP is enabled, otherwise follows [1mvim.languages.enableFormat[0m

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/rust.nix>[0m

       [1mvim.languages.rust.format.package[0m
           Rust formatter package

           [4mType:[24m package

           [4mDefault:[24m <derivation rustfmt-1.86.0>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/rust.nix>[0m

       [1mvim.languages.rust.format.type[0m
           Rust formatter to use

           [4mType:[24m value “rustfmt” (singular enum)

           [4mDefault:[24m "rustfmt"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/rust.nix>[0m

       [1mvim.languages.rust.lsp.enable[0m
           Whether to enable Rust LSP support (rust-analyzer with extra tools).

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/rust.nix>[0m

       [1mvim.languages.rust.lsp.package[0m
           rust-analyzer package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation rust-analyzer-2025-05-12>

           [4mExample:[24m "[lib.getExe pkgs.jdt-language-server \"-data\" \"~/.cache/jdtls/workspace\"]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/rust.nix>[0m

       [1mvim.languages.rust.lsp.opts[0m
           Options to pass to rust analyzer

           [4mType:[24m string

           [4mDefault:[24m ""

           [4mExample:[0m

               ''
                 ['rust-analyzer'] = {
                   cargo = {allFeature = true},
                   checkOnSave = true,
                   procMacro = {
                     enable = true,
                   },
                 },
               ''

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/rust.nix>[0m

       [1mvim.languages.rust.treesitter.enable[0m
           Whether to enable Rust treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/rust.nix>[0m

       [1mvim.languages.rust.treesitter.package[0m
           The rust treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.rust

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/rust.nix>[0m

       [1mvim.languages.scala.enable[0m
           Whether to enable Scala language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/scala.nix>[0m

       [1mvim.languages.scala.dap.enable[0m
           Whether to enable Scala Debug Adapter support (metals).

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/scala.nix>[0m

       [1mvim.languages.scala.dap.config[0m
           Lua configuration for dap

           [4mType:[24m luaInline

           [4mDefault:[0m

               {
                 _type = "lua-inline";
                 expr = ''
                   dap.configurations.scala = {
                     {
                       type = "scala",
                       request = "launch",
                       name = "RunOrTest",
                       metals = {
                         runType = "runOrTestFile",
                         --args = { "firstArg", "secondArg", "thirdArg" }, -- here just as an example
                       },
                     },
                     {
                       type = "scala",
                       request = "launch",
                       name = "Test Target",
                       metals = {
                         runType = "testTarget",
                       },
                     },
                   }
                 '';
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/scala.nix>[0m

       [1mvim.languages.scala.fixShortmess[0m
           Remove the ‘F’ flag from shortmess to allow messages to be shown. Without doing this, autocommands that deal with filetypes prohibit messages from being shown

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/scala.nix>[0m

       [1mvim.languages.scala.lsp.enable[0m
           Whether to enable Scala LSP support (metals).

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/scala.nix>[0m

       [1mvim.languages.scala.lsp.package[0m
           The metals package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.metals

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/scala.nix>[0m

       [1mvim.languages.scala.lsp.extraMappings.listCommands[0m
           List Metals commands

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>lc"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/scala.nix>[0m

       [1mvim.languages.scala.lsp.extraSettings[0m
           Extra settings passed to the metals config. Check nvim-metals docs for available options

           [4mType:[24m attribute set of anything

           [4mDefault:[0m

               {
                 excludedPackages = [
                   "akka.actor.typed.javadsl"
                   "com.github.swagger.akka.javadsl"
                 ];
                 showImplicitArguments = true;
                 showImplicitConversionsAndClasses = true;
                 showInferredType = true;
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/scala.nix>[0m

       [1mvim.languages.scala.treesitter.enable[0m
           Whether to enable Scala treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/scala.nix>[0m

       [1mvim.languages.scala.treesitter.package[0m
           The scala treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.scala

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/scala.nix>[0m

       [1mvim.languages.sql.enable[0m
           Whether to enable SQL language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/sql.nix>[0m

       [1mvim.languages.sql.dialect[0m
           SQL dialect for sqlfluff (if used)

           [4mType:[24m string

           [4mDefault:[24m "ansi"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/sql.nix>[0m

       [1mvim.languages.sql.extraDiagnostics.enable[0m
           Whether to enable extra SQL diagnostics.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/sql.nix>[0m

       [1mvim.languages.sql.extraDiagnostics.types[0m
           List of SQL diagnostics to enable

           [4mType:[24m list of (value “sqlfluff” (singular enum) or (submodule))

           [4mDefault:[0m

               [
                 "sqlfluff"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/sql.nix>[0m

       [1mvim.languages.sql.format.enable[0m
           Whether to enable SQL formatting.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/sql.nix>[0m

       [1mvim.languages.sql.format.package[0m
           SQL formatter package

           [4mType:[24m package

           [4mDefault:[24m <derivation sqlfluff-3.4.0>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/sql.nix>[0m

       [1mvim.languages.sql.format.type[0m
           SQL formatter to use

           [4mType:[24m value “sqlfluff” (singular enum)

           [4mDefault:[24m "sqlfluff"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/sql.nix>[0m

       [1mvim.languages.sql.lsp.enable[0m
           Whether to enable SQL LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/sql.nix>[0m

       [1mvim.languages.sql.lsp.package[0m
           SQL LSP server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation sqls-0.2.28>

           [4mExample:[24m "[lib.getExe pkgs.jdt-language-server \"-data\" \"~/.cache/jdtls/workspace\"]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/sql.nix>[0m

       [1mvim.languages.sql.lsp.server[0m
           SQL LSP server to use

           [4mType:[24m value “sqls” (singular enum)

           [4mDefault:[24m "sqls"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/sql.nix>[0m

       [1mvim.languages.sql.treesitter.enable[0m
           Whether to enable SQL treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/sql.nix>[0m

       [1mvim.languages.sql.treesitter.package[0m
           SQL treesitter grammar to use

           [4mType:[24m package

           [4mDefault:[24m <derivation sql-grammar-0.0.0+rev=b1ec2aa>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/sql.nix>[0m

       [1mvim.languages.svelte.enable[0m
           Whether to enable Svelte language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/svelte.nix>[0m

       [1mvim.languages.svelte.extraDiagnostics.enable[0m
           Whether to enable extra Svelte diagnostics.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/svelte.nix>[0m

       [1mvim.languages.svelte.extraDiagnostics.types[0m
           List of Svelte diagnostics to enable

           [4mType:[24m list of (value “eslint_d” (singular enum) or (submodule))

           [4mDefault:[0m

               [
                 "eslint_d"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/svelte.nix>[0m

       [1mvim.languages.svelte.format.enable[0m
           Whether to enable Svelte formatting.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/svelte.nix>[0m

       [1mvim.languages.svelte.format.package[0m
           Svelte formatter package

           [4mType:[24m package

           [4mDefault:[24m <derivation prettier-3.5.3>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/svelte.nix>[0m

       [1mvim.languages.svelte.format.type[0m
           Svelte formatter to use

           [4mType:[24m one of “biome”, “prettier”

           [4mDefault:[24m "prettier"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/svelte.nix>[0m

       [1mvim.languages.svelte.lsp.enable[0m
           Whether to enable Svelte LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/svelte.nix>[0m

       [1mvim.languages.svelte.lsp.package[0m
           Svelte LSP server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation svelte-language-server-0.17.12>

           [4mExample:[24m "[lib.getExe pkgs.jdt-language-server \"-data\" \"~/.cache/jdtls/workspace\"]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/svelte.nix>[0m

       [1mvim.languages.svelte.lsp.server[0m
           Svelte LSP server to use

           [4mType:[24m value “svelte” (singular enum)

           [4mDefault:[24m "svelte"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/svelte.nix>[0m

       [1mvim.languages.svelte.treesitter.enable[0m
           Whether to enable Svelte treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/svelte.nix>[0m

       [1mvim.languages.svelte.treesitter.sveltePackage[0m
           The svelte treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.svelte

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/svelte.nix>[0m

       [1mvim.languages.tailwind.enable[0m
           Whether to enable Tailwindcss language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/tailwind.nix>[0m

       [1mvim.languages.tailwind.lsp.enable[0m
           Whether to enable Tailwindcss LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/tailwind.nix>[0m

       [1mvim.languages.tailwind.lsp.package[0m
           Tailwindcss LSP server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation tailwindcss-language-server-0.14.18>

           [4mExample:[24m "[lib.getExe pkgs.jdt-language-server \" - data \" \" ~/.cache/jdtls/workspace \"]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/tailwind.nix>[0m

       [1mvim.languages.tailwind.lsp.server[0m
           Tailwindcss LSP server to use

           [4mType:[24m value “tailwindcss-language-server” (singular enum)

           [4mDefault:[24m "tailwindcss-language-server"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/tailwind.nix>[0m

       [1mvim.languages.terraform.enable[0m
           Whether to enable Terraform/HCL support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/terraform.nix>[0m

       [1mvim.languages.terraform.lsp.enable[0m
           Whether to enable Terraform LSP support (terraform-ls).

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/terraform.nix>[0m

       [1mvim.languages.terraform.lsp.package[0m
           terraform-ls package

           [4mType:[24m package

           [4mDefault:[24m <derivation terraform-ls-0.36.4>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/terraform.nix>[0m

       [1mvim.languages.terraform.treesitter.enable[0m
           Whether to enable Terraform treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/terraform.nix>[0m

       [1mvim.languages.terraform.treesitter.package[0m
           The terraform treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.terraform

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/terraform.nix>[0m

       [1mvim.languages.ts.enable[0m
           Whether to enable Typescript/Javascript language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ts.nix>[0m

       [1mvim.languages.ts.extensions.ts-error-translator.enable[0m
           Whether to enable [ts-error-translator.nvim]: https://github.com/dmmulroy/ts-error-translator.nvim

           Typescript error translation with [ts-error-translator.nvim]

           .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ts.nix>[0m

       [1mvim.languages.ts.extensions.ts-error-translator.setupOpts[0m
           Option table to pass into the setup function of ts-error-translator

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ts.nix>[0m

       [1mvim.languages.ts.extensions.ts-error-translator.setupOpts.auto_override_publish_diagnostics[0m
           Automatically override the publish_diagnostics handler

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ts.nix>[0m

       [1mvim.languages.ts.extraDiagnostics.enable[0m
           Whether to enable extra Typescript/Javascript diagnostics.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ts.nix>[0m

       [1mvim.languages.ts.extraDiagnostics.types[0m
           List of Typescript/Javascript diagnostics to enable

           [4mType:[24m list of (value “eslint_d” (singular enum) or (submodule))

           [4mDefault:[0m

               [
                 "eslint_d"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ts.nix>[0m

       [1mvim.languages.ts.format.enable[0m
           Whether to enable Typescript/Javascript formatting.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ts.nix>[0m

       [1mvim.languages.ts.format.package[0m
           Typescript/Javascript formatter package

           [4mType:[24m package

           [4mDefault:[24m <derivation prettier-3.5.3>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ts.nix>[0m

       [1mvim.languages.ts.format.type[0m
           Typescript/Javascript formatter to use

           [4mType:[24m one of “biome”, “prettier”, “prettierd”

           [4mDefault:[24m "prettier"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ts.nix>[0m

       [1mvim.languages.ts.lsp.enable[0m
           Whether to enable Typescript/Javascript LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ts.nix>[0m

       [1mvim.languages.ts.lsp.package[0m
           Typescript/Javascript LSP server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation typescript-language-server-4.3.3>

           [4mExample:[24m "[lib.getExe pkgs.jdt-language-server \"-data\" \"~/.cache/jdtls/workspace\"]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ts.nix>[0m

       [1mvim.languages.ts.lsp.server[0m
           Typescript/Javascript LSP server to use

           [4mType:[24m one of “denols”, “ts_ls”, “tsserver”

           [4mDefault:[24m "ts_ls"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ts.nix>[0m

       [1mvim.languages.ts.treesitter.enable[0m
           Whether to enable Typescript/Javascript treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ts.nix>[0m

       [1mvim.languages.ts.treesitter.jsPackage[0m
           The javascript treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.javascript

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ts.nix>[0m

       [1mvim.languages.ts.treesitter.tsPackage[0m
           The tsx treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.tsx

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/ts.nix>[0m

       [1mvim.languages.typst.enable[0m
           Whether to enable Typst language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/typst.nix>[0m

       [1mvim.languages.typst.extensions.typst-preview-nvim.enable[0m
           Whether to enable [typst-preview.nvim]: https://github.com/chomosuke/typst-preview.nvim

           Low latency typst preview for Neovim via [typst-preview.nvim] .

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/typst.nix>[0m

       [1mvim.languages.typst.extensions.typst-preview-nvim.setupOpts[0m
           Option table to pass into the setup function of typst-preview-nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/typst.nix>[0m

       [1mvim.languages.typst.extensions.typst-preview-nvim.setupOpts.dependencies_bin[0m
           Provide the path to binaries for dependencies. Setting this to a non-null value will skip the download of the binary by the plugin.

           [4mType:[24m attribute set of string

           [4mDefault:[0m

               {
                 tinymist = "\${pkgs.tinymist.out}/bin/tinymist";
                 websocat = "\${pkgs.websocat.out}/bin/websocat";
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/typst.nix>[0m

       [1mvim.languages.typst.extensions.typst-preview-nvim.setupOpts.extra_args[0m
           A list of extra arguments (or ‘null’) to be passed to previewer

           [4mType:[24m null or (list of string)

           [4mDefault:[24m null

           [4mExample:[0m

               [
                 "--input=ver=draft"
                 "--ignore-system-fonts"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/typst.nix>[0m

       [1mvim.languages.typst.extensions.typst-preview-nvim.setupOpts.open_cmd[0m
           Custom format string to open the output link provided with ‘%s’

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mExample:[24m "firefox %s -P typst-preview --class typst-preview"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/typst.nix>[0m

       [1mvim.languages.typst.format.enable[0m
           Whether to enable Typst document formatting.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/typst.nix>[0m

       [1mvim.languages.typst.format.package[0m
           Typst formatter package

           [4mType:[24m package

           [4mDefault:[24m <derivation typstfmt-0.2.10>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/typst.nix>[0m

       [1mvim.languages.typst.format.type[0m
           Typst formatter to use

           [4mType:[24m one of “typstfmt”, “typstyle”

           [4mDefault:[24m "typstfmt"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/typst.nix>[0m

       [1mvim.languages.typst.lsp.enable[0m
           Whether to enable Typst LSP support (typst-lsp).

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/typst.nix>[0m

       [1mvim.languages.typst.lsp.package[0m
           typst-lsp package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation tinymist-0.13.12>

           [4mExample:[24m "[lib.getExe pkgs.jdt-language-server \"-data\" \"~/.cache/jdtls/workspace\"]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/typst.nix>[0m

       [1mvim.languages.typst.lsp.server[0m
           Typst LSP server to use

           [4mType:[24m one of “tinymist”, “typst-lsp”

           [4mDefault:[24m "tinymist"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/typst.nix>[0m

       [1mvim.languages.typst.treesitter.enable[0m
           Whether to enable Typst treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/typst.nix>[0m

       [1mvim.languages.typst.treesitter.package[0m
           The typst treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.typst

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/typst.nix>[0m

       [1mvim.languages.vala.enable[0m
           Whether to enable Vala language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/vala.nix>[0m

       [1mvim.languages.vala.lsp.enable[0m
           Whether to enable Vala LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/vala.nix>[0m

       [1mvim.languages.vala.lsp.package[0m
           Vala LSP server package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation vala-language-server-wrapper>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/vala.nix>[0m

       [1mvim.languages.vala.lsp.server[0m
           Vala LSP server to use

           [4mType:[24m value “vala_ls” (singular enum)

           [4mDefault:[24m "vala_ls"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/vala.nix>[0m

       [1mvim.languages.vala.treesitter.enable[0m
           Whether to enable Vala treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/vala.nix>[0m

       [1mvim.languages.vala.treesitter.package[0m
           The vala treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.vala

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/vala.nix>[0m

       [1mvim.languages.wgsl.enable[0m
           Whether to enable WGSL language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/wgsl.nix>[0m

       [1mvim.languages.wgsl.lsp.enable[0m
           Whether to enable WGSL LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/wgsl.nix>[0m

       [1mvim.languages.wgsl.lsp.package[0m
           wgsl-analyzer package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation wgsl-analyzer-2025-04-04>

           [4mExample:[24m [(lib.getExe pkgs.wgsl-analyzer)]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/wgsl.nix>[0m

       [1mvim.languages.wgsl.lsp.server[0m
           WGSL LSP server to use

           [4mType:[24m value “wgsl-analyzer” (singular enum)

           [4mDefault:[24m "wgsl-analyzer"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/wgsl.nix>[0m

       [1mvim.languages.wgsl.treesitter.enable[0m
           Whether to enable WGSL treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/wgsl.nix>[0m

       [1mvim.languages.wgsl.treesitter.package[0m
           The wgsl treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.wgsl

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/wgsl.nix>[0m

       [1mvim.languages.yaml.enable[0m
           Whether to enable YAML language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/yaml.nix>[0m

       [1mvim.languages.yaml.lsp.enable[0m
           Whether to enable YAML LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/yaml.nix>[0m

       [1mvim.languages.yaml.lsp.package[0m
           YAML LSP server package

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation yaml-language-server-1.17.0>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/yaml.nix>[0m

       [1mvim.languages.yaml.lsp.server[0m
           YAML LSP server to use

           [4mType:[24m value “yaml-language-server” (singular enum)

           [4mDefault:[24m "yaml-language-server"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/yaml.nix>[0m

       [1mvim.languages.yaml.treesitter.enable[0m
           Whether to enable YAML treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/yaml.nix>[0m

       [1mvim.languages.yaml.treesitter.package[0m
           The yaml treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.yaml

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/yaml.nix>[0m

       [1mvim.languages.zig.enable[0m
           Whether to enable Zig language support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/zig.nix>[0m

       [1mvim.languages.zig.dap.enable[0m
           Enable Zig Debug Adapter

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/zig.nix>[0m

       [1mvim.languages.zig.dap.package[0m
           Zig debugger package.

           [4mType:[24m package

           [4mDefault:[24m <derivation lldb-19.1.7>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/zig.nix>[0m

       [1mvim.languages.zig.dap.debugger[0m
           Zig debugger to use

           [4mType:[24m value “lldb-vscode” (singular enum)

           [4mDefault:[24m "lldb-vscode"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/zig.nix>[0m

       [1mvim.languages.zig.lsp.enable[0m
           Whether to enable Zig LSP support.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/zig.nix>[0m

       [1mvim.languages.zig.lsp.package[0m
           ZLS package, or the command to run as a list of strings

           [4mType:[24m package or list of string

           [4mDefault:[24m <derivation zls-0.14.0>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/zig.nix>[0m

       [1mvim.languages.zig.lsp.server[0m
           Zig LSP server to use

           [4mType:[24m value “zls” (singular enum)

           [4mDefault:[24m "zls"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/zig.nix>[0m

       [1mvim.languages.zig.treesitter.enable[0m
           Whether to enable Zig treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/zig.nix>[0m

       [1mvim.languages.zig.treesitter.package[0m
           The zig treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.zig

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/languages/zig.nix>[0m

       [1mvim.lazy.enable[0m
           Whether to enable plugin lazy-loading via lz.n and lzn-auto-require.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/lazy/lazy.nix>[0m

       [1mvim.lazy.enableLznAutoRequire[0m
           Enable lzn-auto-require. Since builtin plugins rely on this, only turn off for debugging.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/lazy/lazy.nix>[0m

       [1mvim.lazy.loader[0m
           Lazy loader to use

           [4mType:[24m value “lz.n” (singular enum)

           [4mDefault:[24m "lz.n"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/lazy/lazy.nix>[0m

       [1mvim.lazy.plugins[0m
           Plugins to lazy load.

           The attribute key is used as the plugin name: for the default ‘vim.g.lz_n.load’ function this should be either the ‘package.pname’ or ‘package.name’.

           [4mType:[24m attribute set of (submodule)

           [4mDefault:[24m { }

           [4mExample:[0m

               ''
                 {
                   toggleterm-nvim = {
                     package = "toggleterm-nvim";
                     setupModule = "toggleterm";
                     setupOpts = cfg.setupOpts;

                     after = "require('toggleterm').do_something()";
                     cmd = ["ToggleTerm"];
                   };

                   $''${pkgs.vimPlugins.vim-bbye.pname} = {
                     package = pkgs.vimPlugins.vim-bbye;
                     cmd = ["Bdelete" "Bwipeout"];
                   };
                 }
               ''

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/lazy/lazy.nix>[0m

       [1mvim.lazy.plugins.<name>.enabled[0m
           When false, or if the lua function returns false, this plugin will not be included in the spec

           [4mType:[24m null or boolean or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/lazy/lazy.nix>[0m

       [1mvim.lazy.plugins.<name>.package[0m
           Plugin package.

           If null, a custom load function must be provided

           [4mType:[24m null or null or package or one of “blink-cmp”, “aerial-nvim”, “alpha-nvim”, “base16”, “blink-cmp-spell”, “blink-compat”, “blink-emoji-nvim”, “blink-ripgrep-nvim”, “bufdelete-nvim”, “catppuccin”, “ccc-nvim”, “cellular-automaton-nvim”, “chatgpt-nvim”,
           “cheatsheet-nvim”, “cinnamon-nvim”, “cmp-buffer”, “cmp-luasnip”, “cmp-nvim-lsp”, “cmp-path”, “cmp-treesitter”, “codecompanion-nvim”, “codewindow-nvim”, “comment-nvim”, “conform-nvim”, “copilot-cmp”, “copilot-lua”, “crates-nvim”, “csharpls-extended-lsp-nvim”,
           “dashboard-nvim”, “diffview-nvim”, “direnv-vim”, “dracula”, “dressing-nvim”, “elixir-tools-nvim”, “fastaction-nvim”, “fidget-nvim”, “flash-nvim”, “flutter-tools-nvim”, “friendly-snippets”, “fzf-lua”, “gesture-nvim”, “git-conflict-nvim”, “github”,
           “gitlinker-nvim”, “gitsigns-nvim”, “glow-nvim”, “gruvbox”, “hardtime-nvim”, “harpoon”, “haskell-tools-nvim”, “highlight-undo-nvim”, “hop-nvim”, “hydra-nvim”, “icon-picker-nvim”, “image-nvim”, “img-clip”, “indent-blankline-nvim”, “lazydev-nvim”, “leap-nvim”,
           “leetcode-nvim”, “lsp-signature-nvim”, “lspkind-nvim”, “lspsaga-nvim”, “lua-utils-nvim”, “lualine-nvim”, “luasnip”, “lz-n”, “lzn-auto-require”, “markview-nvim”, “mind-nvim”, “mini-ai”, “mini-align”, “mini-animate”, “mini-base16”, “mini-basics”,
           “mini-bracketed”, “mini-bufremove”, “mini-clue”, “mini-colors”, “mini-comment”, “mini-completion”, “mini-cursorword”, “mini-diff”, “mini-doc”, “mini-extra”, “mini-files”, “mini-fuzzy”, “mini-git”, “mini-hipatterns”, “mini-hues”, “mini-icons”,
           “mini-indentscope”, “mini-jump”, “mini-jump2d”, “mini-map”, “mini-misc”, “mini-move”, “mini-notify”, “mini-operators”, “mini-pairs”, “mini-pick”, “mini-sessions”, “mini-snippets”, “mini-splitjoin”, “mini-starter”, “mini-statusline”, “mini-surround”,
           “mini-tabline”, “mini-test”, “mini-trailspace”, “mini-visits”, “minimap-vim”, “mkdir-nvim”, “modes-nvim”, “multicursors-nvim”, “neo-tree-nvim”, “neocord”, “neorg”, “neorg-telescope”, “neovim-session-manager”, “new-file-template-nvim”, “nix-develop-nvim”,
           “noice-nvim”, “none-ls-nvim”, “nord”, “nui-nvim”, “nvim-autopairs”, “nvim-bufferline-lua”, “nvim-cmp”, “nvim-colorizer-lua”, “nvim-cursorline”, “nvim-dap”, “nvim-dap-go”, “nvim-dap-ui”, “nvim-docs-view”, “nvim-lightbulb”, “nvim-lint”, “nvim-lspconfig”,
           “nvim-metals”, “nvim-navbuddy”, “nvim-navic”, “nvim-neoclip-lua”, “nvim-nio”, “nvim-notify”, “nvim-scrollbar”, “nvim-surround”, “nvim-tree-lua”, “nvim-treesitter-context”, “nvim-treesitter-textobjects”, “nvim-ts-autotag”, “nvim-ufo”, “nvim-web-devicons”,
           “obsidian-nvim”, “oil-nvim”, “omnisharp-extended-lsp-nvim”, “onedark”, “orgmode”, “otter-nvim”, “oxocarbon”, “pathlib-nvim”, “plenary-nvim”, “precognition-nvim”, “project-nvim”, “promise-async”, “rainbow-delimiters-nvim”, “registers-nvim”,
           “render-markdown-nvim”, “rose-pine”, “rtp-nvim”, “run-nvim”, “rustaceanvim”, “smartcolumn-nvim”, “snacks-nvim”, “solarized-osaka”, “sqls-nvim”, “tabular”, “telescope”, “tiny-devicons-auto-colors-nvim”, “todo-comments-nvim”, “toggleterm-nvim”, “tokyonight”,
           “trouble”, “ts-error-translator-nvim”, “typst-preview-nvim”, “vim-dirtytalk”, “vim-fugitive”, “vim-illuminate”, “vim-markdown”, “vim-repeat”, “vim-sleuth”, “vim-startify”, “which-key-nvim”, “yanky-nvim”, “nvim-treesitter”, “flutter-tools-patched”,
           “vim-repeat”

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/lazy/lazy.nix>[0m

       [1mvim.lazy.plugins.<name>.after[0m
           Lua code to run after plugin is loaded. This will be wrapped in a function.

           If [1mvim.lazy.plugins.<name>.setupModule[22m[1] is provided, the setup will be ran before ‘after’.

           [4mType:[24m null or strings concatenated with “\n”

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/lazy/lazy.nix>[0m

            [1m1. [22msee the [1mvim.lazy.plugins.<name>.setupModule [22moption

       [1mvim.lazy.plugins.<name>.before[0m
           Lua code to run before plugin is loaded. This will be wrapped in a function.

           [4mType:[24m null or strings concatenated with “\n”

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/lazy/lazy.nix>[0m

       [1mvim.lazy.plugins.<name>.beforeAll[0m
           Lua code to run before any plugins are loaded. This will be wrapped in a function.

           [4mType:[24m null or strings concatenated with “\n”

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/lazy/lazy.nix>[0m

       [1mvim.lazy.plugins.<name>.beforeSetup[0m
           Lua code to run after the plugin is loaded, but before the setup function is called.

           [4mType:[24m null or strings concatenated with “\n”

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/lazy/lazy.nix>[0m

       [1mvim.lazy.plugins.<name>.cmd[0m
           Lazy-load on command

           [4mType:[24m null or string or list of string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/lazy/lazy.nix>[0m

       [1mvim.lazy.plugins.<name>.colorscheme[0m
           Lazy-load on colorscheme.

           [4mType:[24m null or string or list of string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/lazy/lazy.nix>[0m

       [1mvim.lazy.plugins.<name>.event[0m
           Lazy-load on event

           [4mType:[24m null or string or (submodule) or list of (string or (submodule))

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/lazy/lazy.nix>[0m

       [1mvim.lazy.plugins.<name>.ft[0m
           Lazy-load on filetype

           [4mType:[24m null or string or list of string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/lazy/lazy.nix>[0m

       [1mvim.lazy.plugins.<name>.keys[0m
           Lazy-load on key mapping

           [4mType:[24m null or string or list of (submodule) or list of string

           [4mDefault:[24m null

           [4mExample:[0m

               ''
                 keys = [
                   {
                     mode = "n";
                     key = "<leader>s";
                     action = ":DapStepOver<cr>";
                     desc = "DAP Step Over";
                   }
                   {
                     mode = ["n", "x"];
                     key = "<leader>dc";
                     action = "function() require('dap').continue() end";
                     lua = true;
                     desc = "DAP Continue";
                   }
                 ]
               ''

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/lazy/lazy.nix>[0m

       [1mvim.lazy.plugins.<name>.lazy[0m
           Force enable/disable lazy-loading. ‘null’ means only lazy-load if a valid lazy-load condition is set e.g. ‘cmd’, ‘ft’, ‘keys’ etc.

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/lazy/lazy.nix>[0m

       [1mvim.lazy.plugins.<name>.load[0m
           Lua code to override the ‘vim.g.lz_n.load()’ function for a single plugin.

           This will be wrapped in a ‘function(name) ... end’.

           [4mType:[24m null or strings concatenated with “\n”

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/lazy/lazy.nix>[0m

       [1mvim.lazy.plugins.<name>.priority[0m
           Only useful for stat plugins (not lazy-loaded) to force loading certain plugins first.

           [4mType:[24m null or signed integer

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/lazy/lazy.nix>[0m

       [1mvim.lazy.plugins.<name>.setupModule[0m
           Lua module to run setup function on.

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/lazy/lazy.nix>[0m

       [1mvim.lazy.plugins.<name>.setupOpts[0m
           Options to pass to the setup function

           [4mType:[24m attribute set of anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/lazy/lazy.nix>[0m

       [1mvim.lineNumberMode[0m
           How line numbers are displayed.

           [4mType:[24m one of “relative”, “number”, “relNumber”, “none”

           [4mDefault:[24m "relNumber"

           [4mExample:[24m "none"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/basic.nix>[0m

       [1mvim.lsp.enable[0m
           Whether to enable global LSP functionality for Neovim.

           This option controls whether to enable LSP functionality within modules under [1mvim.languages[22m. You do not need to set this to ‘true’ for language servers defined in [1mvim.lsp.servers [22mto take effect, since they are enabled automatically. .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/lsp.nix>[0m

       [1mvim.lsp.formatOnSave[0m
           Whether to enable format on save.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/module.nix>[0m

       [1mvim.lsp.inlayHints.enable[0m
           Whether to enable inlay hints.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/module.nix>[0m

       [1mvim.lsp.lightbulb.enable[0m
           Whether to enable Lightbulb for code actions. Requires an emoji font.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/lightbulb/lightbulb.nix>[0m

       [1mvim.lsp.lightbulb.autocmd.enable[0m
           Whether to enable updating lightbulb glyph automatically.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/lightbulb/lightbulb.nix>[0m

       [1mvim.lsp.lightbulb.autocmd.events[0m
           Events on which to update nvim-lightbulb glyphs

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "CursorHold"
                 "CursorHoldI"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/lightbulb/lightbulb.nix>[0m

       [1mvim.lsp.lightbulb.autocmd.pattern[0m
           File patterns or buffer names to match, determining which files or buffers trigger glyph updates.

           [4mType:[24m string or (luaInline)

           [4mDefault:[24m "*"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/lightbulb/lightbulb.nix>[0m

       [1mvim.lsp.lightbulb.setupOpts[0m
           Option table to pass into the setup function of nvim-lightbulb

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/lightbulb/lightbulb.nix>[0m

       [1mvim.lsp.lspSignature.enable[0m
           Whether to enable lsp signature viewer.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/lsp-signature/lsp-signature.nix>[0m

       [1mvim.lsp.lspSignature.setupOpts[0m
           Option table to pass into the setup function of lsp-signature

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/lsp-signature/lsp-signature.nix>[0m

       [1mvim.lsp.lspconfig.enable[0m
           Whether to enable nvim-lspconfig, also enabled automatically.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/lspconfig/lspconfig.nix>[0m

       [1mvim.lsp.lspconfig.sources[0m
           nvim-lspconfig sources

           [4mType:[24m attribute set of string

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/lspconfig/lspconfig.nix>[0m

       [1mvim.lsp.lspkind.enable[0m
           Whether to enable vscode-like pictograms for lsp [lspkind].

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/lspkind/lspkind.nix>[0m

       [1mvim.lsp.lspkind.setupOpts[0m
           Option table to pass into the setup function of lspkind.nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/lspkind/lspkind.nix>[0m

       [1mvim.lsp.lspkind.setupOpts.before[0m
           The function that will be called before lspkind’s modifications are applied

           [4mType:[24m null or (luaInline)

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/lspkind/lspkind.nix>[0m

       [1mvim.lsp.lspkind.setupOpts.mode[0m
           Defines how annotations are shown

           [4mType:[24m one of “text”, “text_symbol”, “symbol_text”, “symbol”

           [4mDefault:[24m "symbol_text"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/lspkind/lspkind.nix>[0m

       [1mvim.lsp.lspsaga.enable[0m
           Whether to enable LSP Saga.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/lspsaga/lspsaga.nix>[0m

       [1mvim.lsp.lspsaga.setupOpts[0m
           Option table to pass into the setup function of lspsaga

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/lspsaga/lspsaga.nix>[0m

       [1mvim.lsp.lspsaga.setupOpts.border_style[0m
           Border type, see [1m:help nvim_open_win[0m

           [4mType:[24m one of “none”, “single”, “double”, “rounded”, “solid”, “shadow” or list of (string or list of string)

           [4mDefault:[24m "rounded"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/lspsaga/lspsaga.nix>[0m

       [1mvim.lsp.mappings.addWorkspaceFolder[0m
           Add workspace folder

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>lwa"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/module.nix>[0m

       [1mvim.lsp.mappings.codeAction[0m
           Code action

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>la"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/module.nix>[0m

       [1mvim.lsp.mappings.documentHighlight[0m
           Document highlight

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>lH"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/module.nix>[0m

       [1mvim.lsp.mappings.format[0m
           Format

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>lf"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/module.nix>[0m

       [1mvim.lsp.mappings.goToDeclaration[0m
           Go to declaration

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>lgD"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/module.nix>[0m

       [1mvim.lsp.mappings.goToDefinition[0m
           Go to definition

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>lgd"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/module.nix>[0m

       [1mvim.lsp.mappings.goToType[0m
           Go to type

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>lgt"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/module.nix>[0m

       [1mvim.lsp.mappings.hover[0m
           Trigger hover

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>lh"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/module.nix>[0m

       [1mvim.lsp.mappings.listDocumentSymbols[0m
           List document symbols

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>lS"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/module.nix>[0m

       [1mvim.lsp.mappings.listImplementations[0m
           List implementations

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>lgi"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/module.nix>[0m

       [1mvim.lsp.mappings.listReferences[0m
           List references

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>lgr"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/module.nix>[0m

       [1mvim.lsp.mappings.listWorkspaceFolders[0m
           List workspace folders

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>lwl"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/module.nix>[0m

       [1mvim.lsp.mappings.listWorkspaceSymbols[0m
           List workspace symbols

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>lws"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/module.nix>[0m

       [1mvim.lsp.mappings.nextDiagnostic[0m
           Go to next diagnostic

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>lgn"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/module.nix>[0m

       [1mvim.lsp.mappings.openDiagnosticFloat[0m
           Open diagnostic float

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>le"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/module.nix>[0m

       [1mvim.lsp.mappings.previousDiagnostic[0m
           Go to previous diagnostic

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>lgp"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/module.nix>[0m

       [1mvim.lsp.mappings.removeWorkspaceFolder[0m
           Remove workspace folder

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>lwr"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/module.nix>[0m

       [1mvim.lsp.mappings.renameSymbol[0m
           Rename symbol

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>ln"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/module.nix>[0m

       [1mvim.lsp.mappings.signatureHelp[0m
           Signature help

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>ls"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/module.nix>[0m

       [1mvim.lsp.mappings.toggleFormatOnSave[0m
           Toggle format on save

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>ltf"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/module.nix>[0m

       [1mvim.lsp.null-ls.enable[0m
           Whether to enable null-ls, plugin to use Neovim as a language server to inject LSP diagnostics, code actions, and more via Lua. .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/null-ls/null-ls.nix>[0m

       [1mvim.lsp.null-ls.setupOpts[0m
           Option table to pass into the setup function of null-ls

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/null-ls/null-ls.nix>[0m

       [1mvim.lsp.null-ls.setupOpts.debounce[0m
           Amount of time between the last change to a buffer and the next ‘textDocument/didChange’ notification.

           [4mType:[24m signed integer

           [4mDefault:[24m 250

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/null-ls/null-ls.nix>[0m

       [1mvim.lsp.null-ls.setupOpts.debug[0m
           Whether to enable debugging information for null-ls.

           Displays all possible log messages and writes them to the null-ls log, which you can view with the command ‘:NullLsLog’ .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/null-ls/null-ls.nix>[0m

       [1mvim.lsp.null-ls.setupOpts.default_timeout[0m
           Amount of time (in milliseconds) after which built-in sources will time out.

               [1mNote[0m
               Built-in sources can define their own timeout period and users can override the timeout period on a per-source basis

           [4mType:[24m signed integer

           [4mDefault:[24m 5000

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/null-ls/null-ls.nix>[0m

       [1mvim.lsp.null-ls.setupOpts.diagnostics_format[0m
           Sets the default format used for diagnostics. null-ls will replace th e following special components with the relevant diagnostic information:

             [1m• [22m‘#{m}’: message
             [1m• [22m‘#{s}’: source name (defaults to null-ls if not specified)
             [1m• [22m‘#{c}’: code (if available)

           [4mType:[24m string

           [4mDefault:[24m "[#{m}] #{s} (#{c})"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/null-ls/null-ls.nix>[0m

       [1mvim.lsp.null-ls.setupOpts.on_attach[0m
           Defines an on_attach callback to run whenever null-ls attaches to a buffer.

           [4mType:[24m null or (luaInline)

           [4mDefault:[0m

               {
                 _type = "lua-inline";
                 expr = "on_attach";
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/null-ls/null-ls.nix>[0m

       [1mvim.lsp.null-ls.setupOpts.sources[0m
           Sources for null-ls to register

           [4mType:[24m null or (list of (luaInline))

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/null-ls/null-ls.nix>[0m

       [1mvim.lsp.nvim-docs-view.enable[0m
           Whether to enable nvim-docs-view, for displaying lsp hover documentation in a side panel…

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/nvim-docs-view/nvim-docs-view.nix>[0m

       [1mvim.lsp.nvim-docs-view.mappings.viewToggle[0m
           Open or close the docs view panel

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>lvt"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/nvim-docs-view/nvim-docs-view.nix>[0m

       [1mvim.lsp.nvim-docs-view.mappings.viewUpdate[0m
           Manually update the docs view panel

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>lvu"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/nvim-docs-view/nvim-docs-view.nix>[0m

       [1mvim.lsp.nvim-docs-view.setupOpts[0m
           Option table to pass into the setup function of nvim-docs-view

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/nvim-docs-view/nvim-docs-view.nix>[0m

       [1mvim.lsp.nvim-docs-view.setupOpts.height[0m
           Height of the docs view panel if the position is set to either top or bottom

           [4mType:[24m signed integer

           [4mDefault:[24m 10

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/nvim-docs-view/nvim-docs-view.nix>[0m

       [1mvim.lsp.nvim-docs-view.setupOpts.position[0m
           Where to open the docs view panel

           [4mType:[24m one of “left”, “right”, “top”, “bottom”

           [4mDefault:[24m "right"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/nvim-docs-view/nvim-docs-view.nix>[0m

       [1mvim.lsp.nvim-docs-view.setupOpts.update_mode[0m
           Determines the mechanism used to update the docs view panel content.

             [1m• [22mIf auto, the content will update upon cursor move.
             [1m• [22mIf manual, the content will only update once :DocsViewUpdate is called

           [4mType:[24m one of “auto”, “manual”

           [4mDefault:[24m "auto"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/nvim-docs-view/nvim-docs-view.nix>[0m

       [1mvim.lsp.nvim-docs-view.setupOpts.width[0m
           Width of the docs view panel if the position is set to either left or right

           [4mType:[24m signed integer

           [4mDefault:[24m 60

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/nvim-docs-view/nvim-docs-view.nix>[0m

       [1mvim.lsp.otter-nvim.enable[0m
           Whether to enable lsp features and a code completion source for code embedded in other documents [otter-nvim] .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/otter/otter.nix>[0m

       [1mvim.lsp.otter-nvim.mappings.toggle[0m
           Activate LSP on Cursor Position [otter-nvim]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>lo"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/otter/otter.nix>[0m

       [1mvim.lsp.otter-nvim.setupOpts[0m
           Option table to pass into the setup function of otter.nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/otter/otter.nix>[0m

       [1mvim.lsp.otter-nvim.setupOpts.buffers.set_filetype[0m
           if set to true, the filetype of the otterbuffers will be set. Other wide only the autocommand of lspconfig that attaches the language server will be executed without setting the filetype

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/otter/otter.nix>[0m

       [1mvim.lsp.otter-nvim.setupOpts.buffers.write_to_disk[0m
           write <path>.otter.<embedded language extension> files to disk on save of main buffer. Useful for some linters that require actual files. Otter files are deleted on quit or main buffer close

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/otter/otter.nix>[0m

       [1mvim.lsp.otter-nvim.setupOpts.handle_leading_whitespace[0m
           otter may not work the way you expect when entire code blocks are indented (eg. in Org files) When true, otter handles these cases fully.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/otter/otter.nix>[0m

       [1mvim.lsp.otter-nvim.setupOpts.lsp.diagnostic_update_event[0m
           ‘:h events’ that cause the diagnostic to update. Set to: {“BufWritePost”, “InsertLeave”, “TextChanged” } for less performant but more instant diagnostic updates

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "BufWritePost"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/otter/otter.nix>[0m

       [1mvim.lsp.otter-nvim.setupOpts.strip_wrapping_quote_characters[0m
           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "'"
                 "\""
                 "`"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/otter/otter.nix>[0m

       [1mvim.lsp.servers[0m
           LSP configurations that will be managed using ‘vim.lsp.config()’ and related utilities added in Neovim 0.11. LSPs defined here will be added to the resulting [4minit.lua[24m using ‘vim.lsp.config’ and enabled through ‘vim.lsp.enable()’ API from Neovim below the
           configuration table.

           You may review the generated configuration by running [1mnvf-print-config [22min a shell. Please see [1m:help lsp-config [22mfor more details on the underlying API.

           [4mType:[24m attribute set of (attribute set of anything)

           [4mDefault:[24m { }

           [4mExample:[0m

               ''
                 {
                   "*" = {
                     root_markers = [".git"];
                     capabilities = {
                       textDocument = {
                         semanticTokens = {
                           multilineTokenSupport = true;
                         };
                       };
                     };
                   };

                   "clangd" = {
                     filetypes = ["c"];
                   };
                 }
               ''

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/lsp.nix>[0m

       [1mvim.lsp.servers.<name>.enable[0m
           Whether to enable this LSP server.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/lsp.nix>[0m

       [1mvim.lsp.servers.<name>.capabilities[0m
           LSP capabilitiess to pass to lspconfig

           [4mType:[24m null or (luaInline) or attribute set of anything

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/lsp.nix>[0m

       [1mvim.lsp.servers.<name>.cmd[0m
           Command used to start the LSP server

           [4mType:[24m null or (list of string)

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/lsp.nix>[0m

       [1mvim.lsp.servers.<name>.filetypes[0m
           Filetypes to auto-attach LSP in

           [4mType:[24m null or (list of string)

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/lsp.nix>[0m

       [1mvim.lsp.servers.<name>.on_attach[0m
           Function to execute when an LSP server attaches to a buffer

           [4mType:[24m null or (luaInline)

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/lsp.nix>[0m

       [1mvim.lsp.servers.<name>.root_markers[0m
           “root markers” used to determine the root directory of the workspace, and the filetypes associated with this LSP server.

           [4mType:[24m null or (list of string)

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/lsp.nix>[0m

       [1mvim.lsp.trouble.enable[0m
           Whether to enable trouble diagnostics viewer.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/trouble/trouble.nix>[0m

       [1mvim.lsp.trouble.mappings.documentDiagnostics[0m
           Document diagnostics [trouble]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>ld"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/trouble/trouble.nix>[0m

       [1mvim.lsp.trouble.mappings.locList[0m
           LOCList [trouble]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>xl"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/trouble/trouble.nix>[0m

       [1mvim.lsp.trouble.mappings.lspReferences[0m
           LSP References [trouble]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>lr"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/trouble/trouble.nix>[0m

       [1mvim.lsp.trouble.mappings.quickfix[0m
           QuickFix [trouble]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>xq"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/trouble/trouble.nix>[0m

       [1mvim.lsp.trouble.mappings.symbols[0m
           Symbols [trouble]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>xs"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/trouble/trouble.nix>[0m

       [1mvim.lsp.trouble.mappings.workspaceDiagnostics[0m
           Workspace diagnostics [trouble]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>lwd"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/trouble/trouble.nix>[0m

       [1mvim.lsp.trouble.setupOpts[0m
           Option table to pass into the setup function of Trouble

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/lsp/trouble/trouble.nix>[0m

       [1mvim.luaConfigPost[0m
           Verbatim lua code that will be inserted [1mafter [22mthe result of the ‘luaConfigRc’ DAG has been resolved

           This option [1mdoes not [22mtake a DAG set, but a string instead. Useful when you’d like to insert contents of lua configs after the DAG result.

           [4mType:[24m string

           [4mDefault:[24m ""

           [4mExample:[24m ${builtins.readFile ./my-lua-config-post.lua}

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

       [1mvim.luaConfigPre[0m
           Verbatim lua code that will be inserted [1mbefore [22mthe result of ‘luaConfigRc’ DAG has been resolved.

           This option [1mdoes not [22mtake a DAG set, but a string instead. Useful when you’d like to insert contents of lua configs after the DAG result.

               [1mWarning[0m
               You do not want to override this option with mkForce It is used internally to set certain options as early as possible and should be avoided unless you know what you’re doing. Passing a string to this option will merge it with the default contents.

           [4mType:[24m string

           [4mDefault:[24m By default, this option will [1mappend [22mpaths in [1mvim.additionalRuntimePaths[22m[1] to the runtimepath and enable the experimental Lua module loader if [1mvim.enableLuaLoader[22m[2] is set to true.

           [4mExample:[24m ${builtins.readFile ./my-lua-config-pre.lua}

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

            [1m1. [22msee the [1mvim.additionalRuntimePaths [22moption
            [1m2. [22msee the [1mvim.enableLuaLoader [22moption

       [1mvim.luaConfigRC[0m
           Lua configuration, either as a string or a DAG.

           If this option is passed as a DAG, it will be resolved according to the DAG resolution rules (e.g. entryBefore or entryAfter) as per the [1mnvf [22mextended library.

           [4mType:[24m (DAG of strings concatenated with “\n”) or string

           [4mDefault:[24m { }

           [4mExample:[0m

               -- Set the tab size to 4 spaces
               vim.opt.tabstop = 4
               vim.opt.shiftwidth = 4
               vim.opt.expandtab = true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

       [1mvim.luaPackages[0m
           List of lua packages to install

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mExample:[24m "[\"magick\" \"serpent\"]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/environment/options.nix>[0m

       [1mvim.maps.command[0m
           Mappings for command-line mode

           [4mType:[24m attribute set of (submodule)

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.command.<name>.action[0m
           The command to execute.

           [4mType:[24m string

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.command.<name>.desc[0m
           A description of this keybind, to be shown in which-key, if you have it enabled.

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.command.<name>.expr[0m
           Means that the action is actually an expression. Equivalent to adding <expr> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.command.<name>.lua[0m
           If true, ‘action’ is considered to be lua code. Thus, it will not be wrapped in ‘""’.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.command.<name>.noremap[0m
           Whether to use the ‘noremap’ variant of the command, ignoring any custom mappings on the defined action. It is highly advised to keep this on, which is the default.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.command.<name>.nowait[0m
           Whether to wait for extra input on ambiguous mappings. Equivalent to adding <nowait> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.command.<name>.script[0m
           Equivalent to adding <script> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.command.<name>.silent[0m
           Whether this mapping should be silent. Equivalent to adding <silent> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.command.<name>.unique[0m
           Whether to fail if the map is already defined. Equivalent to adding <unique> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.insert[0m
           Mappings for insert mode

           [4mType:[24m attribute set of (submodule)

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.insert.<name>.action[0m
           The command to execute.

           [4mType:[24m string

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.insert.<name>.desc[0m
           A description of this keybind, to be shown in which-key, if you have it enabled.

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.insert.<name>.expr[0m
           Means that the action is actually an expression. Equivalent to adding <expr> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.insert.<name>.lua[0m
           If true, ‘action’ is considered to be lua code. Thus, it will not be wrapped in ‘""’.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.insert.<name>.noremap[0m
           Whether to use the ‘noremap’ variant of the command, ignoring any custom mappings on the defined action. It is highly advised to keep this on, which is the default.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.insert.<name>.nowait[0m
           Whether to wait for extra input on ambiguous mappings. Equivalent to adding <nowait> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.insert.<name>.script[0m
           Equivalent to adding <script> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.insert.<name>.silent[0m
           Whether this mapping should be silent. Equivalent to adding <silent> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.insert.<name>.unique[0m
           Whether to fail if the map is already defined. Equivalent to adding <unique> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.insertCommand[0m
           Mappings for insert and command-line mode

           [4mType:[24m attribute set of (submodule)

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.insertCommand.<name>.action[0m
           The command to execute.

           [4mType:[24m string

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.insertCommand.<name>.desc[0m
           A description of this keybind, to be shown in which-key, if you have it enabled.

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.insertCommand.<name>.expr[0m
           Means that the action is actually an expression. Equivalent to adding <expr> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.insertCommand.<name>.lua[0m
           If true, ‘action’ is considered to be lua code. Thus, it will not be wrapped in ‘""’.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.insertCommand.<name>.noremap[0m
           Whether to use the ‘noremap’ variant of the command, ignoring any custom mappings on the defined action. It is highly advised to keep this on, which is the default.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.insertCommand.<name>.nowait[0m
           Whether to wait for extra input on ambiguous mappings. Equivalent to adding <nowait> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.insertCommand.<name>.script[0m
           Equivalent to adding <script> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.insertCommand.<name>.silent[0m
           Whether this mapping should be silent. Equivalent to adding <silent> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.insertCommand.<name>.unique[0m
           Whether to fail if the map is already defined. Equivalent to adding <unique> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.lang[0m
           Mappings for insert, command-line and lang-arg mode

           [4mType:[24m attribute set of (submodule)

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.lang.<name>.action[0m
           The command to execute.

           [4mType:[24m string

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.lang.<name>.desc[0m
           A description of this keybind, to be shown in which-key, if you have it enabled.

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.lang.<name>.expr[0m
           Means that the action is actually an expression. Equivalent to adding <expr> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.lang.<name>.lua[0m
           If true, ‘action’ is considered to be lua code. Thus, it will not be wrapped in ‘""’.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.lang.<name>.noremap[0m
           Whether to use the ‘noremap’ variant of the command, ignoring any custom mappings on the defined action. It is highly advised to keep this on, which is the default.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.lang.<name>.nowait[0m
           Whether to wait for extra input on ambiguous mappings. Equivalent to adding <nowait> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.lang.<name>.script[0m
           Equivalent to adding <script> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.lang.<name>.silent[0m
           Whether this mapping should be silent. Equivalent to adding <silent> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.lang.<name>.unique[0m
           Whether to fail if the map is already defined. Equivalent to adding <unique> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.normal[0m
           Mappings for normal mode

           [4mType:[24m attribute set of (submodule)

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.normal.<name>.action[0m
           The command to execute.

           [4mType:[24m string

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.normal.<name>.desc[0m
           A description of this keybind, to be shown in which-key, if you have it enabled.

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.normal.<name>.expr[0m
           Means that the action is actually an expression. Equivalent to adding <expr> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.normal.<name>.lua[0m
           If true, ‘action’ is considered to be lua code. Thus, it will not be wrapped in ‘""’.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.normal.<name>.noremap[0m
           Whether to use the ‘noremap’ variant of the command, ignoring any custom mappings on the defined action. It is highly advised to keep this on, which is the default.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.normal.<name>.nowait[0m
           Whether to wait for extra input on ambiguous mappings. Equivalent to adding <nowait> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.normal.<name>.script[0m
           Equivalent to adding <script> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.normal.<name>.silent[0m
           Whether this mapping should be silent. Equivalent to adding <silent> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.normal.<name>.unique[0m
           Whether to fail if the map is already defined. Equivalent to adding <unique> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.normalVisualOp[0m
           Mappings for normal, visual, select and operator-pending (same as plain ‘map’) mode

           [4mType:[24m attribute set of (submodule)

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.normalVisualOp.<name>.action[0m
           The command to execute.

           [4mType:[24m string

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.normalVisualOp.<name>.desc[0m
           A description of this keybind, to be shown in which-key, if you have it enabled.

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.normalVisualOp.<name>.expr[0m
           Means that the action is actually an expression. Equivalent to adding <expr> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.normalVisualOp.<name>.lua[0m
           If true, ‘action’ is considered to be lua code. Thus, it will not be wrapped in ‘""’.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.normalVisualOp.<name>.noremap[0m
           Whether to use the ‘noremap’ variant of the command, ignoring any custom mappings on the defined action. It is highly advised to keep this on, which is the default.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.normalVisualOp.<name>.nowait[0m
           Whether to wait for extra input on ambiguous mappings. Equivalent to adding <nowait> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.normalVisualOp.<name>.script[0m
           Equivalent to adding <script> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.normalVisualOp.<name>.silent[0m
           Whether this mapping should be silent. Equivalent to adding <silent> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.normalVisualOp.<name>.unique[0m
           Whether to fail if the map is already defined. Equivalent to adding <unique> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.operator[0m
           Mappings for operator-pending mode

           [4mType:[24m attribute set of (submodule)

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.operator.<name>.action[0m
           The command to execute.

           [4mType:[24m string

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.operator.<name>.desc[0m
           A description of this keybind, to be shown in which-key, if you have it enabled.

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.operator.<name>.expr[0m
           Means that the action is actually an expression. Equivalent to adding <expr> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.operator.<name>.lua[0m
           If true, ‘action’ is considered to be lua code. Thus, it will not be wrapped in ‘""’.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.operator.<name>.noremap[0m
           Whether to use the ‘noremap’ variant of the command, ignoring any custom mappings on the defined action. It is highly advised to keep this on, which is the default.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.operator.<name>.nowait[0m
           Whether to wait for extra input on ambiguous mappings. Equivalent to adding <nowait> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.operator.<name>.script[0m
           Equivalent to adding <script> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.operator.<name>.silent[0m
           Whether this mapping should be silent. Equivalent to adding <silent> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.operator.<name>.unique[0m
           Whether to fail if the map is already defined. Equivalent to adding <unique> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.select[0m
           Mappings for select mode

           [4mType:[24m attribute set of (submodule)

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.select.<name>.action[0m
           The command to execute.

           [4mType:[24m string

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.select.<name>.desc[0m
           A description of this keybind, to be shown in which-key, if you have it enabled.

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.select.<name>.expr[0m
           Means that the action is actually an expression. Equivalent to adding <expr> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.select.<name>.lua[0m
           If true, ‘action’ is considered to be lua code. Thus, it will not be wrapped in ‘""’.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.select.<name>.noremap[0m
           Whether to use the ‘noremap’ variant of the command, ignoring any custom mappings on the defined action. It is highly advised to keep this on, which is the default.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.select.<name>.nowait[0m
           Whether to wait for extra input on ambiguous mappings. Equivalent to adding <nowait> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.select.<name>.script[0m
           Equivalent to adding <script> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.select.<name>.silent[0m
           Whether this mapping should be silent. Equivalent to adding <silent> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.select.<name>.unique[0m
           Whether to fail if the map is already defined. Equivalent to adding <unique> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.terminal[0m
           Mappings for terminal mode

           [4mType:[24m attribute set of (submodule)

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.terminal.<name>.action[0m
           The command to execute.

           [4mType:[24m string

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.terminal.<name>.desc[0m
           A description of this keybind, to be shown in which-key, if you have it enabled.

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.terminal.<name>.expr[0m
           Means that the action is actually an expression. Equivalent to adding <expr> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.terminal.<name>.lua[0m
           If true, ‘action’ is considered to be lua code. Thus, it will not be wrapped in ‘""’.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.terminal.<name>.noremap[0m
           Whether to use the ‘noremap’ variant of the command, ignoring any custom mappings on the defined action. It is highly advised to keep this on, which is the default.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.terminal.<name>.nowait[0m
           Whether to wait for extra input on ambiguous mappings. Equivalent to adding <nowait> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.terminal.<name>.script[0m
           Equivalent to adding <script> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.terminal.<name>.silent[0m
           Whether this mapping should be silent. Equivalent to adding <silent> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.terminal.<name>.unique[0m
           Whether to fail if the map is already defined. Equivalent to adding <unique> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.visual[0m
           Mappings for visual and select mode

           [4mType:[24m attribute set of (submodule)

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.visual.<name>.action[0m
           The command to execute.

           [4mType:[24m string

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.visual.<name>.desc[0m
           A description of this keybind, to be shown in which-key, if you have it enabled.

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.visual.<name>.expr[0m
           Means that the action is actually an expression. Equivalent to adding <expr> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.visual.<name>.lua[0m
           If true, ‘action’ is considered to be lua code. Thus, it will not be wrapped in ‘""’.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.visual.<name>.noremap[0m
           Whether to use the ‘noremap’ variant of the command, ignoring any custom mappings on the defined action. It is highly advised to keep this on, which is the default.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.visual.<name>.nowait[0m
           Whether to wait for extra input on ambiguous mappings. Equivalent to adding <nowait> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.visual.<name>.script[0m
           Equivalent to adding <script> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.visual.<name>.silent[0m
           Whether this mapping should be silent. Equivalent to adding <silent> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.visual.<name>.unique[0m
           Whether to fail if the map is already defined. Equivalent to adding <unique> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.visualOnly[0m
           Mappings for visual only mode

           [4mType:[24m attribute set of (submodule)

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.visualOnly.<name>.action[0m
           The command to execute.

           [4mType:[24m string

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.visualOnly.<name>.desc[0m
           A description of this keybind, to be shown in which-key, if you have it enabled.

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.visualOnly.<name>.expr[0m
           Means that the action is actually an expression. Equivalent to adding <expr> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.visualOnly.<name>.lua[0m
           If true, ‘action’ is considered to be lua code. Thus, it will not be wrapped in ‘""’.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.visualOnly.<name>.noremap[0m
           Whether to use the ‘noremap’ variant of the command, ignoring any custom mappings on the defined action. It is highly advised to keep this on, which is the default.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.visualOnly.<name>.nowait[0m
           Whether to wait for extra input on ambiguous mappings. Equivalent to adding <nowait> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.visualOnly.<name>.script[0m
           Equivalent to adding <script> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.visualOnly.<name>.silent[0m
           Whether this mapping should be silent. Equivalent to adding <silent> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.maps.visualOnly.<name>.unique[0m
           Whether to fail if the map is already defined. Equivalent to adding <unique> to a map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/mappings/options.nix>[0m

       [1mvim.mini.ai.enable[0m
           Whether to enable mini.ai.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/ai/ai.nix>[0m

       [1mvim.mini.ai.setupOpts[0m
           Option table to pass into the setup function of mini.ai

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/ai/ai.nix>[0m

       [1mvim.mini.align.enable[0m
           Whether to enable mini.align.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/align/align.nix>[0m

       [1mvim.mini.align.setupOpts[0m
           Option table to pass into the setup function of mini.align

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/align/align.nix>[0m

       [1mvim.mini.animate.enable[0m
           Whether to enable mini.animate.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/animate/animate.nix>[0m

       [1mvim.mini.animate.setupOpts[0m
           Option table to pass into the setup function of mini.animate

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/animate/animate.nix>[0m

       [1mvim.mini.basics.enable[0m
           Whether to enable mini.basics.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/basics/basics.nix>[0m

       [1mvim.mini.basics.setupOpts[0m
           Option table to pass into the setup function of mini.basics

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/basics/basics.nix>[0m

       [1mvim.mini.bracketed.enable[0m
           Whether to enable mini.bracketed.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/bracketed/bracketed.nix>[0m

       [1mvim.mini.bracketed.setupOpts[0m
           Option table to pass into the setup function of mini.bracketed

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/bracketed/bracketed.nix>[0m

       [1mvim.mini.bufremove.enable[0m
           Whether to enable mini.bufremove.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/bufremove/bufremove.nix>[0m

       [1mvim.mini.bufremove.setupOpts[0m
           Option table to pass into the setup function of mini.bufremove

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/bufremove/bufremove.nix>[0m

       [1mvim.mini.clue.enable[0m
           Whether to enable mini.clue.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/clue/clue.nix>[0m

       [1mvim.mini.clue.setupOpts[0m
           Option table to pass into the setup function of mini.clue

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/clue/clue.nix>[0m

       [1mvim.mini.colors.enable[0m
           Whether to enable mini.colors.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/colors/colors.nix>[0m

       [1mvim.mini.comment.enable[0m
           Whether to enable mini.comment.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/comment/comment.nix>[0m

       [1mvim.mini.comment.setupOpts[0m
           Option table to pass into the setup function of mini.comment

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/comment/comment.nix>[0m

       [1mvim.mini.completion.enable[0m
           Whether to enable mini.completion.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/completion/completion.nix>[0m

       [1mvim.mini.completion.setupOpts[0m
           Option table to pass into the setup function of mini.completion

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/completion/completion.nix>[0m

       [1mvim.mini.cursorword.enable[0m
           Whether to enable mini.cursorword.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/cursorword/cursorword.nix>[0m

       [1mvim.mini.cursorword.setupOpts[0m
           Option table to pass into the setup function of mini.cursorword

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/cursorword/cursorword.nix>[0m

       [1mvim.mini.diff.enable[0m
           Whether to enable mini.diff.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/diff/diff.nix>[0m

       [1mvim.mini.diff.setupOpts[0m
           Option table to pass into the setup function of mini.diff

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/diff/diff.nix>[0m

       [1mvim.mini.doc.enable[0m
           Whether to enable mini.doc.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/doc/doc.nix>[0m

       [1mvim.mini.doc.setupOpts[0m
           Option table to pass into the setup function of mini.doc

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/doc/doc.nix>[0m

       [1mvim.mini.extra.enable[0m
           Whether to enable mini.extra.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/extra/extra.nix>[0m

       [1mvim.mini.files.enable[0m
           Whether to enable mini.files.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/files/files.nix>[0m

       [1mvim.mini.files.setupOpts[0m
           Option table to pass into the setup function of mini.files

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/files/files.nix>[0m

       [1mvim.mini.fuzzy.enable[0m
           Whether to enable mini.fuzzy.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/fuzzy/fuzzy.nix>[0m

       [1mvim.mini.fuzzy.setupOpts[0m
           Option table to pass into the setup function of mini.fuzzy

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/fuzzy/fuzzy.nix>[0m

       [1mvim.mini.git.enable[0m
           Whether to enable mini.git.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/git/git.nix>[0m

       [1mvim.mini.git.setupOpts[0m
           Option table to pass into the setup function of mini.git

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/git/git.nix>[0m

       [1mvim.mini.hipatterns.enable[0m
           Whether to enable mini.hipatterns.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/hipatterns/hipatterns.nix>[0m

       [1mvim.mini.hipatterns.setupOpts[0m
           Option table to pass into the setup function of mini.hipatterns

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/hipatterns/hipatterns.nix>[0m

       [1mvim.mini.hues.enable[0m
           Whether to enable mini.hues.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/hues/hues.nix>[0m

       [1mvim.mini.hues.setupOpts[0m
           Option table to pass into the setup function of mini.hues

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/hues/hues.nix>[0m

       [1mvim.mini.hues.setupOpts.background[0m
           The hex color for the background color of the color scheme, prefixed with #

           [4mType:[24m RGB color in hex format

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/hues/hues.nix>[0m

       [1mvim.mini.hues.setupOpts.foreground[0m
           The hex color for the foreground color of the color scheme, prefixed with #

           [4mType:[24m RGB color in hex format

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/hues/hues.nix>[0m

       [1mvim.mini.icons.enable[0m
           Whether to enable mini.icons.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/icons/icons.nix>[0m

       [1mvim.mini.icons.setupOpts[0m
           Option table to pass into the setup function of mini.icons

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/icons/icons.nix>[0m

       [1mvim.mini.indentscope.enable[0m
           Whether to enable mini.indentscope.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/indentscope/indentscope.nix>[0m

       [1mvim.mini.indentscope.setupOpts[0m
           Option table to pass into the setup function of mini.indentscope

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/indentscope/indentscope.nix>[0m

       [1mvim.mini.indentscope.setupOpts.ignore_filetypes[0m
           File types to ignore for illuminate

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "help"
                 "neo-tree"
                 "notify"
                 "NvimTree"
                 "TelescopePrompt"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/indentscope/indentscope.nix>[0m

       [1mvim.mini.jump.enable[0m
           Whether to enable mini.jump.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/jump/jump.nix>[0m

       [1mvim.mini.jump.setupOpts[0m
           Option table to pass into the setup function of mini.jump

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/jump/jump.nix>[0m

       [1mvim.mini.jump2d.enable[0m
           Whether to enable mini.jump2d.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/jump2d/jump2d.nix>[0m

       [1mvim.mini.jump2d.setupOpts[0m
           Option table to pass into the setup function of mini.jump2d

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/jump2d/jump2d.nix>[0m

       [1mvim.mini.map.enable[0m
           Whether to enable mini.map.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/map/map.nix>[0m

       [1mvim.mini.map.setupOpts[0m
           Option table to pass into the setup function of mini.map

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/map/map.nix>[0m

       [1mvim.mini.misc.enable[0m
           Whether to enable mini.misc.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/misc/misc.nix>[0m

       [1mvim.mini.misc.setupOpts[0m
           Option table to pass into the setup function of mini.misc

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/misc/misc.nix>[0m

       [1mvim.mini.move.enable[0m
           Whether to enable mini.move.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/move/move.nix>[0m

       [1mvim.mini.move.setupOpts[0m
           Option table to pass into the setup function of mini.move

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/move/move.nix>[0m

       [1mvim.mini.notify.enable[0m
           Whether to enable mini.notify.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/notify/notify.nix>[0m

       [1mvim.mini.notify.notifyOpts[0m
           Option table to pass into the setup function of mini.notify notifications

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/notify/notify.nix>[0m

       [1mvim.mini.notify.notifyOpts.DEBUG.duration[0m
           The duration of the debug notification

           [4mType:[24m signed integer

           [4mDefault:[24m 0

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/notify/notify.nix>[0m

       [1mvim.mini.notify.notifyOpts.DEBUG.hl_group[0m
           The highlight group of the debug notification

           [4mType:[24m string

           [4mDefault:[24m "DiagnosticHint"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/notify/notify.nix>[0m

       [1mvim.mini.notify.notifyOpts.ERROR.duration[0m
           The duration of the error notification

           [4mType:[24m signed integer

           [4mDefault:[24m 5000

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/notify/notify.nix>[0m

       [1mvim.mini.notify.notifyOpts.ERROR.hl_group[0m
           The highlight group of the error notification

           [4mType:[24m string

           [4mDefault:[24m "DiagnosticError"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/notify/notify.nix>[0m

       [1mvim.mini.notify.notifyOpts.INFO.duration[0m
           The duration of the info notification

           [4mType:[24m signed integer

           [4mDefault:[24m 5000

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/notify/notify.nix>[0m

       [1mvim.mini.notify.notifyOpts.INFO.hl_group[0m
           The highlight group of the info notification

           [4mType:[24m string

           [4mDefault:[24m "DiagnosticInfo"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/notify/notify.nix>[0m

       [1mvim.mini.notify.notifyOpts.OFF.duration[0m
           The duration of the off notification

           [4mType:[24m signed integer

           [4mDefault:[24m 0

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/notify/notify.nix>[0m

       [1mvim.mini.notify.notifyOpts.OFF.hl_group[0m
           The highlight group of the off notification

           [4mType:[24m string

           [4mDefault:[24m "MiniNotifyNormal"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/notify/notify.nix>[0m

       [1mvim.mini.notify.notifyOpts.TRACE.duration[0m
           The duration of the trace notification

           [4mType:[24m signed integer

           [4mDefault:[24m 0

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/notify/notify.nix>[0m

       [1mvim.mini.notify.notifyOpts.TRACE.hl_group[0m
           The highlight group of the trace notification

           [4mType:[24m string

           [4mDefault:[24m "DiagnosticOk"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/notify/notify.nix>[0m

       [1mvim.mini.notify.notifyOpts.WARN.duration[0m
           The duration of the warn notification

           [4mType:[24m signed integer

           [4mDefault:[24m 5000

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/notify/notify.nix>[0m

       [1mvim.mini.notify.notifyOpts.WARN.hl_group[0m
           The highlight group of the warn notification

           [4mType:[24m string

           [4mDefault:[24m "DiagnosticWarn"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/notify/notify.nix>[0m

       [1mvim.mini.notify.setupOpts[0m
           Option table to pass into the setup function of mini.notify

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/notify/notify.nix>[0m

       [1mvim.mini.notify.setupOpts.window.config.border[0m
           The border type for the mini.notify-notifications

           [4mType:[24m one of “none”, “single”, “double”, “rounded”, “solid”, “shadow” or list of (string or list of string)

           [4mDefault:[24m "rounded"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/notify/notify.nix>[0m

       [1mvim.mini.operators.enable[0m
           Whether to enable mini.operators.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/operators/operators.nix>[0m

       [1mvim.mini.operators.setupOpts[0m
           Option table to pass into the setup function of mini.operators

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/operators/operators.nix>[0m

       [1mvim.mini.pairs.enable[0m
           Whether to enable mini.pairs.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/pairs/pairs.nix>[0m

       [1mvim.mini.pairs.setupOpts[0m
           Option table to pass into the setup function of mini.pairs

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/pairs/pairs.nix>[0m

       [1mvim.mini.pick.enable[0m
           Whether to enable mini.pick.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/pick/pick.nix>[0m

       [1mvim.mini.pick.setupOpts[0m
           Option table to pass into the setup function of mini.pick

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/pick/pick.nix>[0m

       [1mvim.mini.sessions.enable[0m
           Whether to enable mini.sessions.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/sessions/sessions.nix>[0m

       [1mvim.mini.sessions.setupOpts[0m
           Option table to pass into the setup function of mini.sessions

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/sessions/sessions.nix>[0m

       [1mvim.mini.snippets.enable[0m
           Whether to enable mini.snippets.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/snippets/snippets.nix>[0m

       [1mvim.mini.snippets.setupOpts[0m
           Option table to pass into the setup function of mini.snippets

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/snippets/snippets.nix>[0m

       [1mvim.mini.splitjoin.enable[0m
           Whether to enable mini.splitjoin.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/splitjoin/splitjoin.nix>[0m

       [1mvim.mini.splitjoin.setupOpts[0m
           Option table to pass into the setup function of mini.splitjoin

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/splitjoin/splitjoin.nix>[0m

       [1mvim.mini.starter.enable[0m
           Whether to enable mini.starter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/starter/starter.nix>[0m

       [1mvim.mini.starter.setupOpts[0m
           Option table to pass into the setup function of mini.starter

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/starter/starter.nix>[0m

       [1mvim.mini.statusline.enable[0m
           Whether to enable mini.statusline.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/statusline/statusline.nix>[0m

       [1mvim.mini.statusline.setupOpts[0m
           Option table to pass into the setup function of mini.statusline

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/statusline/statusline.nix>[0m

       [1mvim.mini.surround.enable[0m
           Whether to enable mini.surround.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/surround/surround.nix>[0m

       [1mvim.mini.surround.setupOpts[0m
           Option table to pass into the setup function of mini.surround

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/surround/surround.nix>[0m

       [1mvim.mini.tabline.enable[0m
           Whether to enable mini.tabline.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/tabline/tabline.nix>[0m

       [1mvim.mini.tabline.setupOpts[0m
           Option table to pass into the setup function of mini.tabline

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/tabline/tabline.nix>[0m

       [1mvim.mini.test.enable[0m
           Whether to enable mini.test.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/test/test.nix>[0m

       [1mvim.mini.test.setupOpts[0m
           Option table to pass into the setup function of mini.test

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/test/test.nix>[0m

       [1mvim.mini.trailspace.enable[0m
           Whether to enable mini.trailspace.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/trailspace/trailspace.nix>[0m

       [1mvim.mini.trailspace.setupOpts[0m
           Option table to pass into the setup function of mini.trailspace

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/trailspace/trailspace.nix>[0m

       [1mvim.mini.visits.enable[0m
           Whether to enable mini.visits.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/visits/visits.nix>[0m

       [1mvim.mini.visits.setupOpts[0m
           Option table to pass into the setup function of mini.visits

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/mini/visits/visits.nix>[0m

       [1mvim.minimap.codewindow.enable[0m
           Whether to enable codewindow plugin for minimap view.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/minimap/codewindow/codewindow.nix>[0m

       [1mvim.minimap.codewindow.mappings.close[0m
           Close minimap [codewindow]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>mc"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/minimap/codewindow/codewindow.nix>[0m

       [1mvim.minimap.codewindow.mappings.open[0m
           Open minimap [codewindow]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>mo"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/minimap/codewindow/codewindow.nix>[0m

       [1mvim.minimap.codewindow.mappings.toggle[0m
           Toggle minimap [codewindow]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>mm"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/minimap/codewindow/codewindow.nix>[0m

       [1mvim.minimap.codewindow.mappings.toggleFocus[0m
           Toggle minimap focus [codewindow]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>mf"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/minimap/codewindow/codewindow.nix>[0m

       [1mvim.minimap.minimap-vim.enable[0m
           Whether to enable minimap view [minimap-vim].

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/minimap/minimap-vim/minimap-vim.nix>[0m

       [1mvim.navigation.harpoon.enable[0m
           Whether to enable Quick bookmarks on keybinds [Harpoon].

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/harpoon/harpoon.nix>[0m

       [1mvim.navigation.harpoon.mappings.file1[0m
           Go to marked file 1 [Harpoon]

           [4mType:[24m null or string

           [4mDefault:[24m "<C-j>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/harpoon/harpoon.nix>[0m

       [1mvim.navigation.harpoon.mappings.file2[0m
           Go to marked file 2 [Harpoon]

           [4mType:[24m null or string

           [4mDefault:[24m "<C-k>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/harpoon/harpoon.nix>[0m

       [1mvim.navigation.harpoon.mappings.file3[0m
           Go to marked file 3 [Harpoon]

           [4mType:[24m null or string

           [4mDefault:[24m "<C-l>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/harpoon/harpoon.nix>[0m

       [1mvim.navigation.harpoon.mappings.file4[0m
           Go to marked file 4 [Harpoon]

           [4mType:[24m null or string

           [4mDefault:[24m "<C-;>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/harpoon/harpoon.nix>[0m

       [1mvim.navigation.harpoon.mappings.listMarks[0m
           List marked files [Harpoon]

           [4mType:[24m null or string

           [4mDefault:[24m "<C-e>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/harpoon/harpoon.nix>[0m

       [1mvim.navigation.harpoon.mappings.markFile[0m
           Mark file [Harpoon]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>a"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/harpoon/harpoon.nix>[0m

       [1mvim.navigation.harpoon.setupOpts[0m
           Option table to pass into the setup function of Harpoon

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/harpoon/harpoon.nix>[0m

       [1mvim.navigation.harpoon.setupOpts.defaults.key[0m
           How the out list key is looked up. This can be useful when using worktrees and using git remote instead of file path

           [4mType:[24m luaInline

           [4mDefault:[0m

               {
                 _type = "lua-inline";
                 expr = ''
                   function()
                     return vim.loop.cwd()
                   end
                 '';
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/harpoon/harpoon.nix>[0m

       [1mvim.navigation.harpoon.setupOpts.defaults.save_on_toggle[0m
           Any time the ui menu is closed then we will save the state back to the backing list, not to the fs

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/harpoon/harpoon.nix>[0m

       [1mvim.navigation.harpoon.setupOpts.defaults.sync_on_ui_close[0m
           Any time the ui menu is closed then the state of the list will be sync’d back to the fs

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/harpoon/harpoon.nix>[0m

       [1mvim.notes.mind-nvim.enable[0m
           Whether to enable note organizer tool for Neovim [mind-nvim].

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/mind-nvim/mind-nvim.nix>[0m

       [1mvim.notes.neorg.enable[0m
           Whether to enable Neorg: An intuitive note-taking and organization tool with a structured nested syntax. .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/neorg/neorg.nix>[0m

       [1mvim.notes.neorg.setupOpts[0m
           Option table to pass into the setup function of Neorg

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/neorg/neorg.nix>[0m

       [1mvim.notes.neorg.setupOpts.load."core.defaults"[0m
           all of the most important modules that any user would want to have a “just works” experience

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/neorg/neorg.nix>[0m

       [1mvim.notes.neorg.setupOpts.load."core.defaults".enable[0m
           Whether to enable all of the most important modules that any user would want to have a “just works” experience .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/neorg/neorg.nix>[0m

       [1mvim.notes.neorg.setupOpts.load."core.defaults".config.disable[0m
           list of modules from to be disabled from core.defaults

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mExample:[0m

               [
                 "core.autocommands"
                 "core.itero"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/neorg/neorg.nix>[0m

       [1mvim.notes.neorg.treesitter.enable[0m
           Whether to enable Neorg treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/neorg/neorg.nix>[0m

       [1mvim.notes.neorg.treesitter.norgPackage[0m
           The norg treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.norg

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/neorg/neorg.nix>[0m

       [1mvim.notes.obsidian.enable[0m
           Whether to enable complementary neovim plugins for Obsidian editor.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/obsidian/obsidian.nix>[0m

       [1mvim.notes.obsidian.setupOpts[0m
           Option table to pass into the setup function of Obsidian.nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/obsidian/obsidian.nix>[0m

       [1mvim.notes.obsidian.setupOpts.completion.nvim_cmp[0m
           If using nvim-cmp, otherwise set to false

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/obsidian/obsidian.nix>[0m

       [1mvim.notes.obsidian.setupOpts.daily_notes.date_format[0m
           Date format used for creating daily notes

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/obsidian/obsidian.nix>[0m

       [1mvim.notes.obsidian.setupOpts.daily_notes.folder[0m
           Directory in which daily notes should be created

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/obsidian/obsidian.nix>[0m

       [1mvim.notes.orgmode.enable[0m
           Whether to enable nvim-orgmode: Neovim plugin for Emacs Orgmode. Get the best of both worlds.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/orgmode/orgmode.nix>[0m

       [1mvim.notes.orgmode.setupOpts[0m
           Option table to pass into the setup function of Orgmode

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/orgmode/orgmode.nix>[0m

       [1mvim.notes.orgmode.setupOpts.org_agenda_files[0m
           List of org files to be used as agenda files.

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "~/Documents/org/*"
                 "~/my-orgs/**/*"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/orgmode/orgmode.nix>[0m

       [1mvim.notes.orgmode.setupOpts.org_default_notes_file[0m
           Default org file to be used for notes.

           [4mType:[24m string

           [4mDefault:[24m "~/Documents/org/refile.org"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/orgmode/orgmode.nix>[0m

       [1mvim.notes.orgmode.treesitter.enable[0m
           Whether to enable Orgmode treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/orgmode/orgmode.nix>[0m

       [1mvim.notes.orgmode.treesitter.orgPackage[0m
           The org treesitter package to use.

           [4mType:[24m package

           [4mDefault:[24m pkgs.vimPlugins.nvim-treesitter.builtGrammars.org

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/orgmode/orgmode.nix>[0m

       [1mvim.notes.todo-comments.enable[0m
           Whether to enable todo-comments: highlight and search for todo comments like TODO, HACK, BUG in your code base.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/todo-comments/todo-comments.nix>[0m

       [1mvim.notes.todo-comments.mappings.quickFix[0m
           Open Todo-s in a quickfix list

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>tdq"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/todo-comments/todo-comments.nix>[0m

       [1mvim.notes.todo-comments.mappings.telescope[0m
           Open Todo-s in telescope

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>tds"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/todo-comments/todo-comments.nix>[0m

       [1mvim.notes.todo-comments.mappings.trouble[0m
           Open Todo-s in Trouble

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>tdt"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/todo-comments/todo-comments.nix>[0m

       [1mvim.notes.todo-comments.setupOpts[0m
           Option table to pass into the setup function of todo-comments.nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/todo-comments/todo-comments.nix>[0m

       [1mvim.notes.todo-comments.setupOpts.highlight.pattern[0m
           vim regex pattern used for highlighting comments

           [4mType:[24m string

           [4mDefault:[24m ".*<(KEYWORDS)(\\([^\\)]*\\))?:"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/todo-comments/todo-comments.nix>[0m

       [1mvim.notes.todo-comments.setupOpts.search.args[0m
           arguments to pass to the search command

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "--color=never"
                 "--no-heading"
                 "--with-filename"
                 "--line-number"
                 "--column"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/todo-comments/todo-comments.nix>[0m

       [1mvim.notes.todo-comments.setupOpts.search.command[0m
           search command

           [4mType:[24m string

           [4mDefault:[24m "\${pkgs.ripgrep}/bin/rg"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/todo-comments/todo-comments.nix>[0m

       [1mvim.notes.todo-comments.setupOpts.search.pattern[0m
           ripgrep regex pattern used for searching comments

           [4mType:[24m string

           [4mDefault:[24m "\\b(KEYWORDS)(\\([^\\)]*\\))?:"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/notes/todo-comments/todo-comments.nix>[0m

       [1mvim.notify.nvim-notify.enable[0m
           Whether to enable nvim-notify notifications.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/notifications/nvim-notify/nvim-notify.nix>[0m

       [1mvim.notify.nvim-notify.setupOpts[0m
           Option table to pass into the setup function of nvim-notify

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/notifications/nvim-notify/nvim-notify.nix>[0m

       [1mvim.notify.nvim-notify.setupOpts.background_colour[0m
           The background colour of the notification

           [4mType:[24m string

           [4mDefault:[24m "NotifyBackground"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/notifications/nvim-notify/nvim-notify.nix>[0m

       [1mvim.notify.nvim-notify.setupOpts.icons[0m
           The icons of the notification

           [4mType:[24m attribute set of string

           [4mDefault:[0m

               {
                 DEBUG = "";
                 ERROR = "";
                 INFO = "";
                 TRACE = "";
                 WARN = "";
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/notifications/nvim-notify/nvim-notify.nix>[0m

       [1mvim.notify.nvim-notify.setupOpts.position[0m
           The position of the notification

           [4mType:[24m one of “top_left”, “top_right”, “bottom_left”, “bottom_right”

           [4mDefault:[24m "top_right"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/notifications/nvim-notify/nvim-notify.nix>[0m

       [1mvim.notify.nvim-notify.setupOpts.render[0m
           Custom rendering method to be used for displaying notifications

           [4mType:[24m one of “default”, “minimal”, “simple”, “compact”, “wrapped-compact” or (luaInline)

           [4mDefault:[24m "compact"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/notifications/nvim-notify/nvim-notify.nix>[0m

       [1mvim.notify.nvim-notify.setupOpts.stages[0m
           The stages of the notification

           [4mType:[24m one of “fade_in_slide_out”, “fade”, “slide”, “static”

           [4mDefault:[24m "fade_in_slide_out"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/notifications/nvim-notify/nvim-notify.nix>[0m

       [1mvim.notify.nvim-notify.setupOpts.timeout[0m
           The timeout of the notification

           [4mType:[24m signed integer

           [4mDefault:[24m 1000

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/notifications/nvim-notify/nvim-notify.nix>[0m

       [1mvim.optPlugins[0m
           List of plugins to optionally load on startup.

           This option has the same type definition as [1mvim.startPlugins [22mand plugins in this list are appended to [1mvim.startPlugins [22mby the wrapper during the build process.

           To avoid overriding packages and dependencies provided by startPlugins, you are recommended to use this option or [1mvim.extraPlugins [22moption.

           [4mType:[24m list of (null or package or one of “blink-cmp”, “aerial-nvim”, “alpha-nvim”, “base16”, “blink-cmp-spell”, “blink-compat”, “blink-emoji-nvim”, “blink-ripgrep-nvim”, “bufdelete-nvim”, “catppuccin”, “ccc-nvim”, “cellular-automaton-nvim”, “chatgpt-nvim”,
           “cheatsheet-nvim”, “cinnamon-nvim”, “cmp-buffer”, “cmp-luasnip”, “cmp-nvim-lsp”, “cmp-path”, “cmp-treesitter”, “codecompanion-nvim”, “codewindow-nvim”, “comment-nvim”, “conform-nvim”, “copilot-cmp”, “copilot-lua”, “crates-nvim”, “csharpls-extended-lsp-nvim”,
           “dashboard-nvim”, “diffview-nvim”, “direnv-vim”, “dracula”, “dressing-nvim”, “elixir-tools-nvim”, “fastaction-nvim”, “fidget-nvim”, “flash-nvim”, “flutter-tools-nvim”, “friendly-snippets”, “fzf-lua”, “gesture-nvim”, “git-conflict-nvim”, “github”,
           “gitlinker-nvim”, “gitsigns-nvim”, “glow-nvim”, “gruvbox”, “hardtime-nvim”, “harpoon”, “haskell-tools-nvim”, “highlight-undo-nvim”, “hop-nvim”, “hydra-nvim”, “icon-picker-nvim”, “image-nvim”, “img-clip”, “indent-blankline-nvim”, “lazydev-nvim”, “leap-nvim”,
           “leetcode-nvim”, “lsp-signature-nvim”, “lspkind-nvim”, “lspsaga-nvim”, “lua-utils-nvim”, “lualine-nvim”, “luasnip”, “lz-n”, “lzn-auto-require”, “markview-nvim”, “mind-nvim”, “mini-ai”, “mini-align”, “mini-animate”, “mini-base16”, “mini-basics”,
           “mini-bracketed”, “mini-bufremove”, “mini-clue”, “mini-colors”, “mini-comment”, “mini-completion”, “mini-cursorword”, “mini-diff”, “mini-doc”, “mini-extra”, “mini-files”, “mini-fuzzy”, “mini-git”, “mini-hipatterns”, “mini-hues”, “mini-icons”,
           “mini-indentscope”, “mini-jump”, “mini-jump2d”, “mini-map”, “mini-misc”, “mini-move”, “mini-notify”, “mini-operators”, “mini-pairs”, “mini-pick”, “mini-sessions”, “mini-snippets”, “mini-splitjoin”, “mini-starter”, “mini-statusline”, “mini-surround”,
           “mini-tabline”, “mini-test”, “mini-trailspace”, “mini-visits”, “minimap-vim”, “mkdir-nvim”, “modes-nvim”, “multicursors-nvim”, “neo-tree-nvim”, “neocord”, “neorg”, “neorg-telescope”, “neovim-session-manager”, “new-file-template-nvim”, “nix-develop-nvim”,
           “noice-nvim”, “none-ls-nvim”, “nord”, “nui-nvim”, “nvim-autopairs”, “nvim-bufferline-lua”, “nvim-cmp”, “nvim-colorizer-lua”, “nvim-cursorline”, “nvim-dap”, “nvim-dap-go”, “nvim-dap-ui”, “nvim-docs-view”, “nvim-lightbulb”, “nvim-lint”, “nvim-lspconfig”,
           “nvim-metals”, “nvim-navbuddy”, “nvim-navic”, “nvim-neoclip-lua”, “nvim-nio”, “nvim-notify”, “nvim-scrollbar”, “nvim-surround”, “nvim-tree-lua”, “nvim-treesitter-context”, “nvim-treesitter-textobjects”, “nvim-ts-autotag”, “nvim-ufo”, “nvim-web-devicons”,
           “obsidian-nvim”, “oil-nvim”, “omnisharp-extended-lsp-nvim”, “onedark”, “orgmode”, “otter-nvim”, “oxocarbon”, “pathlib-nvim”, “plenary-nvim”, “precognition-nvim”, “project-nvim”, “promise-async”, “rainbow-delimiters-nvim”, “registers-nvim”,
           “render-markdown-nvim”, “rose-pine”, “rtp-nvim”, “run-nvim”, “rustaceanvim”, “smartcolumn-nvim”, “snacks-nvim”, “solarized-osaka”, “sqls-nvim”, “tabular”, “telescope”, “tiny-devicons-auto-colors-nvim”, “todo-comments-nvim”, “toggleterm-nvim”, “tokyonight”,
           “trouble”, “ts-error-translator-nvim”, “typst-preview-nvim”, “vim-dirtytalk”, “vim-fugitive”, “vim-illuminate”, “vim-markdown”, “vim-repeat”, “vim-sleuth”, “vim-startify”, “which-key-nvim”, “yanky-nvim”, “nvim-treesitter”, “flutter-tools-patched”,
           “vim-repeat”)

           [4mDefault:[24m [ ]

           [4mExample:[0m

               ''
                 [pkgs.vimPlugins.vim-ghost]
               ''

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/environment/options.nix>[0m

       [1mvim.options[0m
           A freeform attribute set containing vim options to be set as early as possible. If populated, this option will set vim options in the built [1mluaConfigRC [22mafter ‘basic’ and before ‘pluginConfigs’ DAG entries.

               [1mNote[0m
               ‘{foo = "bar";}’ will set ‘vim.o.foo’ to “bar”, where the type of ‘bar’ in the resulting Lua value will be inferred from the type of the value in the ‘{name = value;}’ pair passed to the option.

           [4mType:[24m attribute set of anything

           [4mDefault:[24m { }

           [4mExample:[0m

               {
                 visualbell = true;
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

       [1mvim.options.autoindent[0m
           Enable auto indent

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

       [1mvim.options.cmdheight[0m
           Height of the command pane

           [4mType:[24m signed integer

           [4mDefault:[24m 1

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

       [1mvim.options.cursorlineopt[0m
           Highlight the text line of the cursor with CursorLine hl-CursorLine

           [4mType:[24m one of “line”, “screenline”, “number”, “both”

           [4mDefault:[24m "line"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

       [1mvim.options.mouse[0m
           Set modes for mouse support.

             [1m• [22mn - normal
             [1m• [22mv - visual
             [1m• [22mi - insert
             [1m• [22mc - command-line
             [1m• [22mh - all modes when editing a help file
             [1m• [22ma - all modes
             [1m• [22mr - for hit-enter and more-prompt prompt

           This option takes a string to ensure proper conversion to the corresponding Lua type. As such, we do not check the value passed to this option. Please ensure that any value that is set here is a valid value as per [1mneovim documentation[22m[1].

           [4mType:[24m string

           [4mDefault:[24m "nvi"

           [4mExample:[24m "a"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

            [1m1. [22mhttps://neovim.io/doc/user/options.html#‘mouse’%22

       [1mvim.options.shiftwidth[0m
           Number of spaces to use for each step of (auto)indent. Used for [1mcindent[22m, ‘>>’, ‘<<’, etc.

           When zero the [1mtabstop [22mvalue will be used.

           [4mType:[24m signed integer

           [4mDefault:[24m 8

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

       [1mvim.options.signcolumn[0m
           Whether to show the sign column

           [4mType:[24m string

           [4mDefault:[24m "yes"

           [4mExample:[24m "no"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

       [1mvim.options.splitbelow[0m
           New splits will open below instead of on top

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

       [1mvim.options.splitright[0m
           New splits will open to the right

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

       [1mvim.options.tabstop[0m
           Number of spaces that a ‘<Tab>’ in the file counts for. Also see the [1m:retab [22mcommand, and the [1msofttabstop [22moption.

           [4mType:[24m signed integer

           [4mDefault:[24m 8

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

       [1mvim.options.termguicolors[0m
           Set terminal up for 256 colours

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

       [1mvim.options.tm[0m
           Timeout in ms that Neovim will wait for mapped action to complete

           [4mType:[24m signed integer

           [4mDefault:[24m 500

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

       [1mvim.options.updatetime[0m
           The number of milliseconds till Cursor Hold event is fired

           [4mType:[24m signed integer

           [4mDefault:[24m 300

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

       [1mvim.options.wrap[0m
           Enable word wrapping.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

       [1mvim.pluginOverrides[0m
           Attribute set of plugins to override default values

           [4mType:[24m attribute set of package

           [4mDefault:[24m { }

           [4mExample:[0m

               ''
                 {
                   lazydev-nvim = pkgs.fetchFromGitHub {
                     owner = "folke";
                     repo = "lazydev.nvim";
                     rev = "";
                     hash = "";
                   };
                 }
               ''

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/environment/options.nix>[0m

       [1mvim.pluginRC[0m
           The DAG used to configure plugins. If a string is passed, entryAnywhere is automatically applied.

           [4mType:[24m (DAG of strings concatenated with “\n”) or string

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/rc/options.nix>[0m

       [1mvim.presence.neocord.enable[0m
           Whether to enable neocord plugin for discord rich presence.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/rich-presence/neocord/neocord.nix>[0m

       [1mvim.presence.neocord.setupOpts[0m
           Option table to pass into the setup function of neocord

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/rich-presence/neocord/neocord.nix>[0m

       [1mvim.presence.neocord.setupOpts.enable_line_number[0m
           Show line number on the RPC item

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/rich-presence/neocord/neocord.nix>[0m

       [1mvim.presence.neocord.setupOpts.auto_update[0m
           Automatically update the presence

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/rich-presence/neocord/neocord.nix>[0m

       [1mvim.presence.neocord.setupOpts.blacklist[0m
           List of filetypes to ignore

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mExample:[24m ["Alpha"]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/rich-presence/neocord/neocord.nix>[0m

       [1mvim.presence.neocord.setupOpts.client_id[0m
           Client ID of the application

           [4mType:[24m string

           [4mDefault:[24m "1157438221865717891"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/rich-presence/neocord/neocord.nix>[0m

       [1mvim.presence.neocord.setupOpts.debounce_timeout[0m
           Number of seconds to debounce events

           [4mType:[24m signed integer

           [4mDefault:[24m 10

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/rich-presence/neocord/neocord.nix>[0m

       [1mvim.presence.neocord.setupOpts.editing_text[0m
           Text displayed when editing a file

           [4mType:[24m string

           [4mDefault:[24m "Editing %s"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/rich-presence/neocord/neocord.nix>[0m

       [1mvim.presence.neocord.setupOpts.file_explorer_text[0m
           Text displayed when browsing files

           [4mType:[24m string

           [4mDefault:[24m "Browsing %s"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/rich-presence/neocord/neocord.nix>[0m

       [1mvim.presence.neocord.setupOpts.git_commit_text[0m
           Text displayed when committing changes

           [4mType:[24m string

           [4mDefault:[24m "Committing changes"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/rich-presence/neocord/neocord.nix>[0m

       [1mvim.presence.neocord.setupOpts.line_number_text[0m
           Text displayed when showing line number

           [4mType:[24m string

           [4mDefault:[24m "Line %s out of %s"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/rich-presence/neocord/neocord.nix>[0m

       [1mvim.presence.neocord.setupOpts.log_level[0m
           Log level to be used by the plugin

           [4mType:[24m null or one of “debug”, “info”, “warn”, “error”

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/rich-presence/neocord/neocord.nix>[0m

       [1mvim.presence.neocord.setupOpts.logo[0m
           Logo to be displayed on the RPC item

           This must be either “auto” or an URL to your image of choice

           [4mType:[24m string

           [4mDefault:[24m "auto"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/rich-presence/neocord/neocord.nix>[0m

       [1mvim.presence.neocord.setupOpts.logo_tooltip[0m
           Text displayed when hovering over the Neovim image

           [4mType:[24m string

           [4mDefault:[24m "The One True Text Editor"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/rich-presence/neocord/neocord.nix>[0m

       [1mvim.presence.neocord.setupOpts.main_image[0m
           Main image to be displayed

           [4mType:[24m one of “language”, “logo”

           [4mDefault:[24m "language"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/rich-presence/neocord/neocord.nix>[0m

       [1mvim.presence.neocord.setupOpts.plugin_manager_text[0m
           Text displayed when managing plugins

           [4mType:[24m string

           [4mDefault:[24m "Managing plugins"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/rich-presence/neocord/neocord.nix>[0m

       [1mvim.presence.neocord.setupOpts.reading_text[0m
           Text displayed when reading a file

           [4mType:[24m string

           [4mDefault:[24m "Reading %s"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/rich-presence/neocord/neocord.nix>[0m

       [1mvim.presence.neocord.setupOpts.show_time[0m
           Show time on the RPC item

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/rich-presence/neocord/neocord.nix>[0m

       [1mvim.presence.neocord.setupOpts.terminal_text[0m
           Text displayed when working on the terminal

           [4mType:[24m string

           [4mDefault:[24m "Working on the terminal"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/rich-presence/neocord/neocord.nix>[0m

       [1mvim.presence.neocord.setupOpts.workspace_text[0m
           Text displayed when working on a project

           [4mType:[24m string

           [4mDefault:[24m "Working on %s"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/rich-presence/neocord/neocord.nix>[0m

       [1mvim.preventJunkFiles[0m
           Prevent swapfile and backupfile from being created.

           ‘false’ is the default Neovim behaviour. If you wish to create backup and swapfiles, set this option to ‘false’.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/basic.nix>[0m

       [1mvim.projects.project-nvim.enable[0m
           Whether to enable project-nvim for project management.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/projects/project-nvim/project-nvim.nix>[0m

       [1mvim.projects.project-nvim.setupOpts[0m
           Option table to pass into the setup function of Project.nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/projects/project-nvim/project-nvim.nix>[0m

       [1mvim.projects.project-nvim.setupOpts.detection_methods[0m
           Detection methods to use

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "lsp"
                 "pattern"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/projects/project-nvim/project-nvim.nix>[0m

       [1mvim.projects.project-nvim.setupOpts.exclude_dirs[0m
           Directories to exclude from project root search

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/projects/project-nvim/project-nvim.nix>[0m

       [1mvim.projects.project-nvim.setupOpts.lsp_ignored[0m
           LSP servers no ignore by name

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/projects/project-nvim/project-nvim.nix>[0m

       [1mvim.projects.project-nvim.setupOpts.manual_mode[0m
           don’t automatically change the root directory so the user has the option to manually do so using ‘:ProjectRoot’ command

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/projects/project-nvim/project-nvim.nix>[0m

       [1mvim.projects.project-nvim.setupOpts.patterns[0m
           Patterns to use for pattern detection method

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 ".git"
                 "_darcs"
                 ".hg"
                 ".bzr"
                 ".svn"
                 "Makefile"
                 "package.json"
                 "flake.nix"
                 "cargo.toml"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/projects/project-nvim/project-nvim.nix>[0m

       [1mvim.projects.project-nvim.setupOpts.scope_chdir[0m
           What scope to change the directory

           [4mType:[24m one of “global”, “tab”, “win”

           [4mDefault:[24m "global"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/projects/project-nvim/project-nvim.nix>[0m

       [1mvim.projects.project-nvim.setupOpts.show_hidden[0m
           Show hidden files in telescope picker

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/projects/project-nvim/project-nvim.nix>[0m

       [1mvim.projects.project-nvim.setupOpts.silent_chdir[0m
           Silently change directory when changing project

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/projects/project-nvim/project-nvim.nix>[0m

       [1mvim.python3Packages[0m
           List of python packages to install

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mExample:[24m "[\"pynvim\"]"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/environment/options.nix>[0m

       [1mvim.repl.conjure.enable[0m
           Whether to enable Conjure.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/repl/conjure/conjure.nix>[0m

       [1mvim.runner.run-nvim.enable[0m
           Whether to enable run.nvim.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/runner/run-nvim/run-nvim.nix>[0m

       [1mvim.runner.run-nvim.mappings.run[0m
           Run cached

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>ri"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/runner/run-nvim/run-nvim.nix>[0m

       [1mvim.runner.run-nvim.mappings.runCommand[0m
           Run prompt

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>rc"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/runner/run-nvim/run-nvim.nix>[0m

       [1mvim.runner.run-nvim.mappings.runOverride[0m
           Run and override

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>ro"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/runner/run-nvim/run-nvim.nix>[0m

       [1mvim.runner.run-nvim.setupOpts[0m
           Option table to pass into the setup function of run.nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/runner/run-nvim/run-nvim.nix>[0m

       [1mvim.searchCase[0m
           Set the case sensitivity of search

           [4mType:[24m one of “ignore”, “smart”, “sensitive”

           [4mDefault:[24m "sensitive"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/basic.nix>[0m

       [1mvim.session.nvim-session-manager.enable[0m
           Whether to enable nvim-session-manager: manage sessions like folders in VSCode.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/session/nvim-session-manager/nvim-session-manager.nix>[0m

       [1mvim.session.nvim-session-manager.mappings.deleteSession[0m
           Delete session

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>sd"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/session/nvim-session-manager/nvim-session-manager.nix>[0m

       [1mvim.session.nvim-session-manager.mappings.loadLastSession[0m
           Load last session

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>slt"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/session/nvim-session-manager/nvim-session-manager.nix>[0m

       [1mvim.session.nvim-session-manager.mappings.loadSession[0m
           Load session

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>sl"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/session/nvim-session-manager/nvim-session-manager.nix>[0m

       [1mvim.session.nvim-session-manager.mappings.saveCurrentSession[0m
           Save current session

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>sc"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/session/nvim-session-manager/nvim-session-manager.nix>[0m

       [1mvim.session.nvim-session-manager.setupOpts[0m
           Option table to pass into the setup function of which-key

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/session/nvim-session-manager/nvim-session-manager.nix>[0m

       [1mvim.session.nvim-session-manager.setupOpts.autoload_mode[0m
           Define what to do when Neovim is started without arguments.

           Takes either one of ‘"Disabled"’, ‘"CurrentDir"’, ‘"LastSession’ in which case the value will be inserted into ‘sm.AutoloadMode.<value>’, or an inline Lua value.

           [4mType:[24m one of “Disabled”, “CurrentDir”, “LastSession” or (luaInline)

           [4mDefault:[24m "LastSession"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/session/nvim-session-manager/nvim-session-manager.nix>[0m

       [1mvim.session.nvim-session-manager.setupOpts.autosave_ignore_buftypes[0m
           All buffers of these buffer types will be closed before the session is saved

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/session/nvim-session-manager/nvim-session-manager.nix>[0m

       [1mvim.session.nvim-session-manager.setupOpts.autosave_ignore_dirs[0m
           A list of directories where the session will not be autosaved

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/session/nvim-session-manager/nvim-session-manager.nix>[0m

       [1mvim.session.nvim-session-manager.setupOpts.autosave_ignore_filetypes[0m
           All buffers of these file types will be closed before the session is saved

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "gitcommit"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/session/nvim-session-manager/nvim-session-manager.nix>[0m

       [1mvim.session.nvim-session-manager.setupOpts.autosave_ignore_not_normal[0m
           Plugin will not save a session when no buffers are opened, or all of them are not writable or listed

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/session/nvim-session-manager/nvim-session-manager.nix>[0m

       [1mvim.session.nvim-session-manager.setupOpts.autosave_last_session[0m
           Automatically save last session on exit and on session switch

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/session/nvim-session-manager/nvim-session-manager.nix>[0m

       [1mvim.session.nvim-session-manager.setupOpts.autosave_only_in_session[0m
           Always autosaves session. If ‘true’, only autosaves after a session is active

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/session/nvim-session-manager/nvim-session-manager.nix>[0m

       [1mvim.session.nvim-session-manager.setupOpts.colon_replacer[0m
           The character to which the colon symbol will be replaced for session files

           [4mType:[24m string

           [4mDefault:[24m "++"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/session/nvim-session-manager/nvim-session-manager.nix>[0m

       [1mvim.session.nvim-session-manager.setupOpts.max_path_length[0m
           Shorten the display path if length exceeds this threshold.

           Use ‘0’ if don’t want to shorten the path at all

           [4mType:[24m null or signed integer

           [4mDefault:[24m 80

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/session/nvim-session-manager/nvim-session-manager.nix>[0m

       [1mvim.session.nvim-session-manager.setupOpts.path_replacer[0m
           The character to which the path separator will be replaced for session files

           [4mType:[24m string

           [4mDefault:[24m "__"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/session/nvim-session-manager/nvim-session-manager.nix>[0m

       [1mvim.session.nvim-session-manager.usePicker[0m
           Whether we should use ‘dressing.nvim’ to build a session picker UI

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/session/nvim-session-manager/nvim-session-manager.nix>[0m

       [1mvim.snippets.luasnip.enable[0m
           Whether to enable luasnip.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/snippets/luasnip/luasnip.nix>[0m

       [1mvim.snippets.luasnip.loaders[0m
           Lua code used to load snippet providers.

           [4mType:[24m strings concatenated with “\n”

           [4mDefault:[0m

               require('luasnip.loaders.from_vscode').lazy_load()

           [4mExample:[0m

               require("luasnip.loaders.from_snipmate").lazy_load()

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/snippets/luasnip/luasnip.nix>[0m

       [1mvim.snippets.luasnip.providers[0m
           The snippet provider packages.

               [1mNote[0m
               These are simply appended to {option} ‘vim.startPlugins’.

           [4mType:[24m list of (null or package or one of “blink-cmp”, “aerial-nvim”, “alpha-nvim”, “base16”, “blink-cmp-spell”, “blink-compat”, “blink-emoji-nvim”, “blink-ripgrep-nvim”, “bufdelete-nvim”, “catppuccin”, “ccc-nvim”, “cellular-automaton-nvim”, “chatgpt-nvim”,
           “cheatsheet-nvim”, “cinnamon-nvim”, “cmp-buffer”, “cmp-luasnip”, “cmp-nvim-lsp”, “cmp-path”, “cmp-treesitter”, “codecompanion-nvim”, “codewindow-nvim”, “comment-nvim”, “conform-nvim”, “copilot-cmp”, “copilot-lua”, “crates-nvim”, “csharpls-extended-lsp-nvim”,
           “dashboard-nvim”, “diffview-nvim”, “direnv-vim”, “dracula”, “dressing-nvim”, “elixir-tools-nvim”, “fastaction-nvim”, “fidget-nvim”, “flash-nvim”, “flutter-tools-nvim”, “friendly-snippets”, “fzf-lua”, “gesture-nvim”, “git-conflict-nvim”, “github”,
           “gitlinker-nvim”, “gitsigns-nvim”, “glow-nvim”, “gruvbox”, “hardtime-nvim”, “harpoon”, “haskell-tools-nvim”, “highlight-undo-nvim”, “hop-nvim”, “hydra-nvim”, “icon-picker-nvim”, “image-nvim”, “img-clip”, “indent-blankline-nvim”, “lazydev-nvim”, “leap-nvim”,
           “leetcode-nvim”, “lsp-signature-nvim”, “lspkind-nvim”, “lspsaga-nvim”, “lua-utils-nvim”, “lualine-nvim”, “luasnip”, “lz-n”, “lzn-auto-require”, “markview-nvim”, “mind-nvim”, “mini-ai”, “mini-align”, “mini-animate”, “mini-base16”, “mini-basics”,
           “mini-bracketed”, “mini-bufremove”, “mini-clue”, “mini-colors”, “mini-comment”, “mini-completion”, “mini-cursorword”, “mini-diff”, “mini-doc”, “mini-extra”, “mini-files”, “mini-fuzzy”, “mini-git”, “mini-hipatterns”, “mini-hues”, “mini-icons”,
           “mini-indentscope”, “mini-jump”, “mini-jump2d”, “mini-map”, “mini-misc”, “mini-move”, “mini-notify”, “mini-operators”, “mini-pairs”, “mini-pick”, “mini-sessions”, “mini-snippets”, “mini-splitjoin”, “mini-starter”, “mini-statusline”, “mini-surround”,
           “mini-tabline”, “mini-test”, “mini-trailspace”, “mini-visits”, “minimap-vim”, “mkdir-nvim”, “modes-nvim”, “multicursors-nvim”, “neo-tree-nvim”, “neocord”, “neorg”, “neorg-telescope”, “neovim-session-manager”, “new-file-template-nvim”, “nix-develop-nvim”,
           “noice-nvim”, “none-ls-nvim”, “nord”, “nui-nvim”, “nvim-autopairs”, “nvim-bufferline-lua”, “nvim-cmp”, “nvim-colorizer-lua”, “nvim-cursorline”, “nvim-dap”, “nvim-dap-go”, “nvim-dap-ui”, “nvim-docs-view”, “nvim-lightbulb”, “nvim-lint”, “nvim-lspconfig”,
           “nvim-metals”, “nvim-navbuddy”, “nvim-navic”, “nvim-neoclip-lua”, “nvim-nio”, “nvim-notify”, “nvim-scrollbar”, “nvim-surround”, “nvim-tree-lua”, “nvim-treesitter-context”, “nvim-treesitter-textobjects”, “nvim-ts-autotag”, “nvim-ufo”, “nvim-web-devicons”,
           “obsidian-nvim”, “oil-nvim”, “omnisharp-extended-lsp-nvim”, “onedark”, “orgmode”, “otter-nvim”, “oxocarbon”, “pathlib-nvim”, “plenary-nvim”, “precognition-nvim”, “project-nvim”, “promise-async”, “rainbow-delimiters-nvim”, “registers-nvim”,
           “render-markdown-nvim”, “rose-pine”, “rtp-nvim”, “run-nvim”, “rustaceanvim”, “smartcolumn-nvim”, “snacks-nvim”, “solarized-osaka”, “sqls-nvim”, “tabular”, “telescope”, “tiny-devicons-auto-colors-nvim”, “todo-comments-nvim”, “toggleterm-nvim”, “tokyonight”,
           “trouble”, “ts-error-translator-nvim”, “typst-preview-nvim”, “vim-dirtytalk”, “vim-fugitive”, “vim-illuminate”, “vim-markdown”, “vim-repeat”, “vim-sleuth”, “vim-startify”, “which-key-nvim”, “yanky-nvim”, “nvim-treesitter”, “flutter-tools-patched”,
           “vim-repeat”)

           [4mDefault:[0m

               [
                 "friendly-snippets"
               ]

           [4mExample:[24m ["vimPlugins.vim-snippets"]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/snippets/luasnip/luasnip.nix>[0m

       [1mvim.snippets.luasnip.setupOpts[0m
           Option table to pass into the setup function of LuaSnip

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/snippets/luasnip/luasnip.nix>[0m

       [1mvim.snippets.luasnip.setupOpts.enable_autosnippets[0m
           Whether to enable autosnippets.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/snippets/luasnip/luasnip.nix>[0m

       [1mvim.spellcheck.enable[0m
           Whether to enable Neovim’s built-in spellchecking.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/spellcheck.nix>[0m

       [1mvim.spellcheck.extraSpellWords[0m
           Additional words to be used for spellchecking. The names of each key will be used as the language code for the spell file. For example

               "en.utf-8" = [ ... ];

           will result in ‘en.utf-8.add.spl’ being added to Neovim’s runtime in the [4mspell[24m directory.

               [1mWarning[0m
               The attribute keys must be in ‘"<name>.<encoding>"’ format for Neovim to compile your spellfiles without mangling the resulting file names. Please make sure that you enter the correct value, as nvf does not do any kind of internal checking. Please see
               [1m:help mkspell [22mfor more details.

               Example:

                   # "en" is the name, and "utf-8" is the encoding. For most use cases, utf-8
                   # will be enough, however, you may change it to any encoding format Neovim
                   # accepts, e.g., utf-16.
                   "en.utf-8" = ["nvf" "word_you_want_to_add"];
                   => $out/spell/en-utf-8.add.spl

           Note that while adding a new language, you will still need to add the name of the language (e.g. “en”) to the [1mvim.spellcheck.languages [22mlist by name in order to enable spellchecking for the language. By default only ‘"en"’ is in the list.

           [4mType:[24m attribute set of list of string

           [4mDefault:[24m { }

           [4mExample:[24m {"en.utf-8" = ["nvf" "word_you_want_to_add"];}

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/spellcheck.nix>[0m

       [1mvim.spellcheck.ignoredFiletypes[0m
           A list of filetypes for which spellchecking will be disabled.

               [1mTip[0m
               You may use [1m:echo &filetype [22min Neovim to find out the filetype for a specific buffer.

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "toggleterm"
               ]

           [4mExample:[24m ["markdown" "gitcommit"]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/spellcheck.nix>[0m

       [1mvim.spellcheck.languages[0m
           A list of languages that should be used for spellchecking.

           To add your own language files, you may place your ‘spell’ directory in either [4m$XDG_CONFIG_HOME/nvf[24m or in a path that is included in the [1madditionalRuntimePaths[22m[1] list provided by nvf.

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "en"
               ]

           [4mExample:[24m ["en" "de"]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/spellcheck.nix>[0m

            [1m1. [22msee the [1mvim.additionalRuntimePaths [22moption

       [1mvim.spellcheck.programmingWordlist.enable[0m
           Whether to enable vim-dirtytalk, a wordlist for programmers containing common programming terms.

               [1mNote[0m
               Enabling this option will unconditionally set [1mvim.spellcheck.enable [22mto true as vim-dirtytalk depends on spellchecking having been set up.

           .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/spellcheck.nix>[0m

       [1mvim.startPlugins[0m
           List of plugins to load on startup. This is used internally to add plugins to Neovim’s runtime.

           To add additional plugins to your configuration, consider using the [1mvim.extraPlugins[22m[1] option.

           [4mType:[24m list of (null or package or one of “blink-cmp”, “aerial-nvim”, “alpha-nvim”, “base16”, “blink-cmp-spell”, “blink-compat”, “blink-emoji-nvim”, “blink-ripgrep-nvim”, “bufdelete-nvim”, “catppuccin”, “ccc-nvim”, “cellular-automaton-nvim”, “chatgpt-nvim”,
           “cheatsheet-nvim”, “cinnamon-nvim”, “cmp-buffer”, “cmp-luasnip”, “cmp-nvim-lsp”, “cmp-path”, “cmp-treesitter”, “codecompanion-nvim”, “codewindow-nvim”, “comment-nvim”, “conform-nvim”, “copilot-cmp”, “copilot-lua”, “crates-nvim”, “csharpls-extended-lsp-nvim”,
           “dashboard-nvim”, “diffview-nvim”, “direnv-vim”, “dracula”, “dressing-nvim”, “elixir-tools-nvim”, “fastaction-nvim”, “fidget-nvim”, “flash-nvim”, “flutter-tools-nvim”, “friendly-snippets”, “fzf-lua”, “gesture-nvim”, “git-conflict-nvim”, “github”,
           “gitlinker-nvim”, “gitsigns-nvim”, “glow-nvim”, “gruvbox”, “hardtime-nvim”, “harpoon”, “haskell-tools-nvim”, “highlight-undo-nvim”, “hop-nvim”, “hydra-nvim”, “icon-picker-nvim”, “image-nvim”, “img-clip”, “indent-blankline-nvim”, “lazydev-nvim”, “leap-nvim”,
           “leetcode-nvim”, “lsp-signature-nvim”, “lspkind-nvim”, “lspsaga-nvim”, “lua-utils-nvim”, “lualine-nvim”, “luasnip”, “lz-n”, “lzn-auto-require”, “markview-nvim”, “mind-nvim”, “mini-ai”, “mini-align”, “mini-animate”, “mini-base16”, “mini-basics”,
           “mini-bracketed”, “mini-bufremove”, “mini-clue”, “mini-colors”, “mini-comment”, “mini-completion”, “mini-cursorword”, “mini-diff”, “mini-doc”, “mini-extra”, “mini-files”, “mini-fuzzy”, “mini-git”, “mini-hipatterns”, “mini-hues”, “mini-icons”,
           “mini-indentscope”, “mini-jump”, “mini-jump2d”, “mini-map”, “mini-misc”, “mini-move”, “mini-notify”, “mini-operators”, “mini-pairs”, “mini-pick”, “mini-sessions”, “mini-snippets”, “mini-splitjoin”, “mini-starter”, “mini-statusline”, “mini-surround”,
           “mini-tabline”, “mini-test”, “mini-trailspace”, “mini-visits”, “minimap-vim”, “mkdir-nvim”, “modes-nvim”, “multicursors-nvim”, “neo-tree-nvim”, “neocord”, “neorg”, “neorg-telescope”, “neovim-session-manager”, “new-file-template-nvim”, “nix-develop-nvim”,
           “noice-nvim”, “none-ls-nvim”, “nord”, “nui-nvim”, “nvim-autopairs”, “nvim-bufferline-lua”, “nvim-cmp”, “nvim-colorizer-lua”, “nvim-cursorline”, “nvim-dap”, “nvim-dap-go”, “nvim-dap-ui”, “nvim-docs-view”, “nvim-lightbulb”, “nvim-lint”, “nvim-lspconfig”,
           “nvim-metals”, “nvim-navbuddy”, “nvim-navic”, “nvim-neoclip-lua”, “nvim-nio”, “nvim-notify”, “nvim-scrollbar”, “nvim-surround”, “nvim-tree-lua”, “nvim-treesitter-context”, “nvim-treesitter-textobjects”, “nvim-ts-autotag”, “nvim-ufo”, “nvim-web-devicons”,
           “obsidian-nvim”, “oil-nvim”, “omnisharp-extended-lsp-nvim”, “onedark”, “orgmode”, “otter-nvim”, “oxocarbon”, “pathlib-nvim”, “plenary-nvim”, “precognition-nvim”, “project-nvim”, “promise-async”, “rainbow-delimiters-nvim”, “registers-nvim”,
           “render-markdown-nvim”, “rose-pine”, “rtp-nvim”, “run-nvim”, “rustaceanvim”, “smartcolumn-nvim”, “snacks-nvim”, “solarized-osaka”, “sqls-nvim”, “tabular”, “telescope”, “tiny-devicons-auto-colors-nvim”, “todo-comments-nvim”, “toggleterm-nvim”, “tokyonight”,
           “trouble”, “ts-error-translator-nvim”, “typst-preview-nvim”, “vim-dirtytalk”, “vim-fugitive”, “vim-illuminate”, “vim-markdown”, “vim-repeat”, “vim-sleuth”, “vim-startify”, “which-key-nvim”, “yanky-nvim”, “nvim-treesitter”, “flutter-tools-patched”,
           “vim-repeat”)

           [4mDefault:[0m

               [
                 "plenary-nvim"
               ]

           [4mExample:[0m

               ''
                 [pkgs.vimPlugins.telescope-nvim]
               ''

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/environment/options.nix>[0m

            [1m1. [22msee the [1mvim.extraPlugins [22moption

       [1mvim.statusline.lualine.enable[0m
           Whether to enable lualine statusline plugin.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.activeSection.a[0m
           active config for: | (A) | B | C X | Y | Z |

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 ''
                   {
                     "mode",
                     icons_enabled = true,
                     separator = {
                       left = '▎',
                       right = ''
                     },
                   }
                 ''
                 ''
                   {
                     "",
                     draw_empty = true,
                     separator = { left = '', right = '' }
                   }
                 ''
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.activeSection.b[0m
           active config for: | A | (B) | C X | Y | Z |

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 ''
                   {
                     "filetype",
                     colored = true,
                     icon_only = true,
                     icon = { align = 'left' }
                   }
                 ''
                 ''
                   {
                     "filename",
                     symbols = {modified = ' ', readonly = ' '},
                     separator = {right = ''}
                   }
                 ''
                 ''
                   {
                     "",
                     draw_empty = true,
                     separator = { left = '', right = '' }
                   }
                 ''
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.activeSection.c[0m
           active config for: | A | B | © X | Y | Z |

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 ''
                   {
                     "diff",
                     colored = false,
                     diff_color = {
                       -- Same color values as the general color option can be used here.
                       added    = 'DiffAdd',    -- Changes the diff's added color
                       modified = 'DiffChange', -- Changes the diff's modified color
                       removed  = 'DiffDelete', -- Changes the diff's removed color you
                     },
                     symbols = {added = '+', modified = '~', removed = '-'}, -- Changes the diff symbols
                     separator = {right = ''}
                   }
                 ''
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.activeSection.x[0m
           active config for: | A | B | C (X) | Y | Z |

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 ''
                   {
                     -- Lsp server name
                     function()
                       local buf_ft = vim.bo.filetype
                       local excluded_buf_ft = { toggleterm = true, NvimTree = true, ["neo-tree"] = true, TelescopePrompt = true }

                       if excluded_buf_ft[buf_ft] then
                         return ""
                         end

                       local bufnr = vim.api.nvim_get_current_buf()
                       local clients = vim.lsp.get_clients({ bufnr = bufnr })

                       if vim.tbl_isempty(clients) then
                         return "No Active LSP"
                       end

                       local active_clients = {}
                       for _, client in ipairs(clients) do
                         table.insert(active_clients, client.name)
                       end

                       return table.concat(active_clients, ", ")
                     end,
                     icon = ' ',
                     separator = {left = ''},
                   }
                 ''
                 ''
                   {
                     "diagnostics",
                     sources = {'nvim_lsp', 'nvim_diagnostic', 'nvim_diagnostic', 'vim_lsp', 'coc'},
                     symbols = {error = '󰅙  ', warn = '  ', info = '  ', hint = '󰌵 '},
                     colored = true,
                     update_in_insert = false,
                     always_visible = false,
                     diagnostics_color = {
                       color_error = { fg = 'red' },
                       color_warn = { fg = 'yellow' },
                       color_info = { fg = 'cyan' },
                     },
                   }
                 ''
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.activeSection.y[0m
           active config for: | A | B | C X | (Y) | Z |

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 ''
                   {
                     "",
                     draw_empty = true,
                     separator = { left = '', right = '' }
                   }
                 ''
                 ''
                   {
                     'searchcount',
                     maxcount = 999,
                     timeout = 120,
                     separator = {left = ''}
                   }
                 ''
                 ''
                   {
                     "branch",
                     icon = ' •',
                     separator = {left = ''}
                   }
                 ''
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.activeSection.z[0m
           active config for: | A | B | C X | Y | (Z) |

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 ''
                   {
                     "",
                     draw_empty = true,
                     separator = { left = '', right = '' }
                   }
                 ''
                 ''
                   {
                     "progress",
                     separator = {left = ''}
                   }
                 ''
                 ''
                   {"location"}
                 ''
                 ''
                   {
                     "fileformat",
                     color = {fg='black'},
                     symbols = {
                       unix = '', -- e712
                       dos = '',  -- e70f
                       mac = '',  -- e711
                     }
                   }
                 ''
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.alwaysDivideMiddle[0m
           Always divide middle section

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.componentSeparator.left[0m
           Component separator for left side

           [4mType:[24m string

           [4mDefault:[24m ""

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.componentSeparator.right[0m
           Component separator for right side

           [4mType:[24m string

           [4mDefault:[24m ""

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.disabledFiletypes[0m
           Filetypes to disable lualine on

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "alpha"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.extraActiveSection.a[0m
           Extra entries for activeSection.a

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.extraActiveSection.b[0m
           Extra entries for activeSection.b

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.extraActiveSection.c[0m
           Extra entries for activeSection.c

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.extraActiveSection.x[0m
           Extra entries for activeSection.x

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.extraActiveSection.y[0m
           Extra entries for activeSection.y

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.extraActiveSection.z[0m
           Extra entries for activeSection.z

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.extraInactiveSection.a[0m
           Extra entries for inactiveSection.a

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.extraInactiveSection.b[0m
           Extra entries for inactiveSection.b

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.extraInactiveSection.c[0m
           Extra entries for inactiveSection.c

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.extraInactiveSection.x[0m
           Extra entries for inactiveSection.x

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.extraInactiveSection.y[0m
           Extra entries for inactiveSection.y

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.extraInactiveSection.z[0m
           Extra entries for inactiveSection.z

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.globalStatus[0m
           Enable global status for lualine

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.icons.enable[0m
           Whether to enable icons for lualine.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.ignoreFocus[0m
           If current filetype is in this list it’ll always be drawn as inactive statusline and the last window will be drawn as active statusline.

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "NvimTree"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.inactiveSection.a[0m
           inactive config for: | (A) | B | C X | Y | Z |

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.inactiveSection.b[0m
           inactive config for: | A | (B) | C X | Y | Z |

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.inactiveSection.c[0m
           inactive config for: | A | B | © X | Y | Z |

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "'filename'"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.inactiveSection.x[0m
           inactive config for: | A | B | C (X) | Y | Z |

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "'location'"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.inactiveSection.y[0m
           inactive config for: | A | B | C X | (Y) | Z |

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.inactiveSection.z[0m
           inactive config for: | A | B | C X | Y | (Z) |

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.refresh.statusline[0m
           Refresh rate for lualine

           [4mType:[24m signed integer

           [4mDefault:[24m 1000

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.refresh.tabline[0m
           Refresh rate for tabline

           [4mType:[24m signed integer

           [4mDefault:[24m 1000

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.refresh.winbar[0m
           Refresh rate for winbar

           [4mType:[24m signed integer

           [4mDefault:[24m 1000

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.sectionSeparator.left[0m
           Section separator for left side

           [4mType:[24m string

           [4mDefault:[24m ""

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.sectionSeparator.right[0m
           Section separator for right side

           [4mType:[24m string

           [4mDefault:[24m ""

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.setupOpts[0m
           Option table to pass into the setup function of Lualine

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.statusline.lualine.theme[0m
           Theme for lualine

           [4mType:[24m one of “auto”, “16color”, “ayu_dark”, “ayu_light”, “ayu_mirage”, “ayu”, “base16”, “codedark”, “dracula”, “everforest”, “github_dark”, “github_light”, “github_dark_dimmed”, “github_dark_default”, “github_light_default”, “github_dark_high_contrast”,
           “github_light_high_contrast”, “github_dark_colorblind”, “github_light_colorblind”, “github_dark_tritanopia”, “github_light_tritanopia”, “gruvbox”, “gruvbox_dark”, “gruvbox_light”, “gruvbox-material”, “horizon”, “iceberg_dark”, “iceberg_light”, “iceberg”,
           “jellybeans”, “material”, “modus-vivendi”, “molokai”, “moonfly”, “nightfly”, “nord”, “OceanicNext”, “onedark”, “onelight”, “palenight”, “papercolor_dark”, “papercolor_light”, “PaperColor”, “powerline_dark”, “powerline”, “pywal”, “seoul256”, “solarized_dark”,
           “solarized_light”, “Tomorrow”, “wombat”, “onedark”

           [4mDefault:[24m "`config.vim.theme.name` if theme supports lualine else \"auto\""

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/statusline/lualine/lualine.nix>[0m

       [1mvim.syntaxHighlighting[0m
           Enable syntax highlighting

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/basic.nix>[0m

       [1mvim.tabline.nvimBufferline.enable[0m
           Whether to enable neovim bufferline.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.mappings.closeCurrent[0m
           Close buffer

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.mappings.cycleNext[0m
           Next buffer

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>bn"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.mappings.cyclePrevious[0m
           Previous buffer

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>bp"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.mappings.moveNext[0m
           Move next buffer

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>bmn"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.mappings.movePrevious[0m
           Move previous buffer

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>bmp"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.mappings.pick[0m
           Pick buffer

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>bc"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.mappings.sortByDirectory[0m
           Sort buffers by directory

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>bsd"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.mappings.sortByExtension[0m
           Sort buffers by extension

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>bse"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.mappings.sortById[0m
           Sort buffers by ID

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>bsi"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts[0m
           Option table to pass into the setup function of Bufferline-nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.highlights[0m
           Overrides the highlight groups of bufferline.

           See ‘:help bufferline-highlights’.

           [4mType:[24m (attribute set) or (luaInline)

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.always_show_bufferline[0m
           Whether to always show bufferline

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.auto_toggle_bufferline[0m
           Whether to auto toggle bufferline

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.buffer_close_icon[0m
           Icon for close button

           [4mType:[24m string

           [4mDefault:[24m " 󰅖 "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.close_command[0m
           Command to run when closing a buffer

           [4mType:[24m string or (luaInline)

           [4mDefault:[0m

               {
                 _type = "lua-inline";
                 expr = ''
                   function(bufnum)
                     require("bufdelete").bufdelete(bufnum, false)
                   end
                 '';
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.close_icon[0m
           Icon for close button

           [4mType:[24m string

           [4mDefault:[24m "  "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.color_icons[0m
           Whether or not to add filetype icon highlights

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.custom_filter[0m
           Custom filter function for filtering out buffers.

               [1mNote[0m
               This will be called a lot, so you are encouraged to keep it as short and lightweight as possible unless you are fully aware of the performance implications.

           [4mType:[24m null or (luaInline)

           [4mDefault:[24m null

           [4mExample:[0m

               custom_filter = function(buf_number, buf_numbers)
                 -- filter out filetypes you don't want to see
                 if vim.bo[buf_number].filetype ~= "<i-dont-want-to-see-this>" then
                   return true
                 end
                 -- filter out by buffer name
                 if vim.fn.bufname(buf_number) ~= "<buffer-name-I-dont-want>" then
                     return true
                 end
                 -- filter out based on arbitrary rules
                 -- e.g. filter out vim wiki buffer from tabline in your work repo
                 if vim.fn.getcwd() == "<work-repo>" and vim.bo[buf_number].filetype ~= "wiki" then
                     return true
                 end
                 -- filter out by it's index number in list (don't show first buffer)
                 if buf_numbers[1] ~= buf_number then
                     return true
                 end
               end

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.diagnostics[0m
           Diagnostics provider to be used in buffer LSP indicators

           [4mType:[24m one of false, “nvim_lsp”, “coc”

           [4mDefault:[24m "nvim_lsp"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.diagnostics_indicator[0m
           Function to get the diagnostics indicator. The function should return a string to be used as the indicator.

           Can be set to nil to keep the buffer name highlight, but delete the highlighting.

           [4mType:[24m null or (luaInline)

           [4mDefault:[0m

               {
                 _type = "lua-inline";
                 expr = ''
                   function(count, level, diagnostics_dict, context)
                     local s = " "
                       for e, n in pairs(diagnostics_dict) do
                         local sym = e == "error" and "   "
                           or (e == "warning" and "   " or "  " )
                         s = s .. n .. sym
                       end
                     return s
                   end
                 '';
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.diagnostics_update_in_insert[0m
           Whether to update diagnostics while in insert mode.

           Setting this to true has performance implications, but they may be negligible depending on your setup. Set it to true if you know what you are doing.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.duplicates_across_groups[0m
           Whether to consider duplicate paths in different groups as duplicates

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.enforce_regular_tabs[0m
           Whether to enforce regular tabs

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.get_element_icon[0m
           The function bufferline uses to get the icon. Recommended to leave as default.

           [4mType:[24m null or (luaInline)

           [4mDefault:[24m null

           [4mExample:[0m

               function(element)
                 local custom_map = {my_thing_ft: {icon = "my_thing_icon", hl = "DevIconDefault"}}
                 return custom_map[element.filetype]
               end

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.hover.enabled[0m
           Whether to enable hover.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.hover.delay[0m
           Delay for hover, in ms

           [4mType:[24m signed integer

           [4mDefault:[24m 200

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.hover.reveal[0m
           Reveal hover window

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "close"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.indicator.icon[0m
           The indicator icon to use for the current buffer.

               [1mWarning[0m
               This [1mmust [22mbe omitted while style is not ‘icon’

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.indicator.style[0m
           Style for indicator

           [4mType:[24m one of “icon”, “underline”, “none”

           [4mDefault:[24m "underline"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.left_mouse_command[0m
           Command to run when left clicking a buffer

           [4mType:[24m null or string or (luaInline)

           [4mDefault:[24m "buffer %d"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.left_trunc_marker[0m
           Icon for left truncation

           [4mType:[24m string

           [4mDefault:[24m ""

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.max_name_length[0m
           Max name length

           [4mType:[24m signed integer

           [4mDefault:[24m 18

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.max_prefix_length[0m
           Length of the prefix used when a buffer is de-duplicated

           [4mType:[24m signed integer

           [4mDefault:[24m 15

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.middle_mouse_command[0m
           Command to run when middle clicking a buffer

           [4mType:[24m null or string or (luaInline)

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.mode[0m
           Mode to use for bufferline

           [4mType:[24m one of “tabs”, “buffers”

           [4mDefault:[24m "buffers"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.modified_icon[0m
           Icon for modified buffer

           [4mType:[24m string

           [4mDefault:[24m "● "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.move_wraps_at_ends[0m
           Whether or not the move command “wraps” at the first or last position

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.name_formatter[0m
           ‘name_formatter’ can be used to change the buffer’s label in the bufferline.

               [1mNote[0m
               Some names can/will break the bufferline so use this at your discretion knowing that it has some limitations that will [1mNOT [22mbe fixed.

           [4mType:[24m null or (luaInline)

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.numbers[0m
           Whether or not to show buffer numbers

           [4mType:[24m one of “none”, “ordinal”, “buffer_id”, “both” or (luaInline)

           [4mDefault:[0m

               {
                 _type = "lua-inline";
                 expr = ''
                   function(opts)
                     return string.format('%s·%s', opts.raise(opts.id), opts.lower(opts.ordinal))
                   end
                 '';
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.offsets[0m
           The windows to offset bufferline above, see ‘:help bufferline-offset’

           [4mType:[24m list of (attribute set)

           [4mDefault:[0m

               [
                 {
                   filetype = "NvimTree";
                   highlight = "Directory";
                   separator = true;
                   text = "File Explorer";
                 }
                 {
                   filetype = "neo-tree";
                   highlight = "Directory";
                   separator = true;
                   text = "File Explorer";
                 }
                 {
                   filetype = "snacks_layout_box";
                   highlight = "Directory";
                   separator = true;
                   text = "File Explorer";
                 }
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.persist_buffer_sort[0m
           Whether or not custom sorted buffers should persist

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.right_mouse_command[0m
           Command to run when right clicking a buffer

           [4mType:[24m null or string or (luaInline)

           [4mDefault:[24m "vertical sbuffer %d"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.right_trunc_marker[0m
           Icon for right truncation

           [4mType:[24m string

           [4mDefault:[24m ""

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.separator_style[0m
           The type of separator used to separate buffers and tabs.

           Either one of the listed types, or a list of 2 characters for either side.

           [4mType:[24m null or one of “slant”, “padded_slant”, “slope”, “padded_slope”, “thick”, “thin” or list of string

           [4mDefault:[24m "thin"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.show_buffer_close_icons[0m
           Whether or not to show buffer close icons

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.show_buffer_icons[0m
           Whether or not to show buffer icons

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.show_close_icon[0m
           Whether or not to show the close icon

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.show_duplicate_prefix[0m
           Whether or not to show duplicate buffer prefixes

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.show_tab_indicators[0m
           Whether or not to show tab indicators

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.sort_by[0m
           Method to sort buffers by. Must be one of the supported values, or an inline Lua value.

           [4mType:[24m one of “insert_after_current”, “insert_at_end”, “id”, “extension”, “relative_directory”, “directory”, “tabs” or (luaInline)

           [4mDefault:[24m "extension"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.style_preset[0m
           The base style of bufferline

           [4mType:[24m one of “default”, “minimal”, “no_bold”, “no_italic”

           [4mDefault:[24m "default"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.tab_size[0m
           The size of the tabs in bufferline

           [4mType:[24m signed integer

           [4mDefault:[24m 18

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.themable[0m
           Whether or not to allow highlight groups to be overridden.

           While false, bufferline.nvim sets highlights as default.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.tabline.nvimBufferline.setupOpts.options.truncate_names[0m
           Truncate names

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/tabline/nvim-bufferline/nvim-bufferline.nix>[0m

       [1mvim.telescope.enable[0m
           Whether to enable telescope.nvim: multi-purpose search and picker utility.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.mappings.buffers[0m
           Buffers [Telescope]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>fb"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.mappings.diagnostics[0m
           Diagnostics [Telescope]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>fld"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.mappings.findFiles[0m
           Find files [Telescope]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>ff"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.mappings.findProjects[0m
           Find projects [Telescope]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>fp"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.mappings.gitBranches[0m
           Git branches [Telescope]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>fvb"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.mappings.gitBufferCommits[0m
           Git buffer commits [Telescope]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>fvcb"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.mappings.gitCommits[0m
           Git commits [Telescope]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>fvcw"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.mappings.gitStash[0m
           Git stash [Telescope]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>fvx"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.mappings.gitStatus[0m
           Git status [Telescope]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>fvs"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.mappings.helpTags[0m
           Help tags [Telescope]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>fh"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.mappings.liveGrep[0m
           Live grep [Telescope]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>fg"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.mappings.lspDefinitions[0m
           LSP Definitions [Telescope]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>flD"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.mappings.lspDocumentSymbols[0m
           LSP Document Symbols [Telescope]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>flsb"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.mappings.lspImplementations[0m
           LSP Implementations [Telescope]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>fli"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.mappings.lspReferences[0m
           LSP References [Telescope]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>flr"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.mappings.lspTypeDefinitions[0m
           LSP Type Definitions [Telescope]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>flt"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.mappings.lspWorkspaceSymbols[0m
           LSP Workspace Symbols [Telescope]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>flsw"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.mappings.open[0m
           Open [Telescope]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>ft"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.mappings.resume[0m
           Resume (previous search) [Telescope]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>fr"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.mappings.treesitter[0m
           Treesitter [Telescope]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>fs"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.setupOpts[0m
           Option table to pass into the setup function of Telescope

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.setupOpts.defaults.color_devicons[0m
           Boolean if devicons should be enabled or not.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.setupOpts.defaults.entry_prefix[0m
           Prefix in front of each result entry. Current selection not included.

           [4mType:[24m string

           [4mDefault:[24m "  "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.setupOpts.defaults.file_ignore_patterns[0m
           A table of lua regex that define the files that should be ignored.

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "node_modules"
                 "%.git/"
                 "dist/"
                 "build/"
                 "target/"
                 "result/"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.setupOpts.defaults.initial_mode[0m
           Determines in which mode telescope starts.

           [4mType:[24m one of “insert”, “normal”

           [4mDefault:[24m "insert"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.setupOpts.defaults.layout_config[0m
           Determines the default configuration values for layout strategies. See telescope.layout for details of the configurations options for each strategy.

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.setupOpts.defaults.layout_config.height[0m
           [4mType:[24m floating point number

           [4mDefault:[24m 0.8

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.setupOpts.defaults.layout_config.horizontal.preview_width[0m
           [4mType:[24m floating point number

           [4mDefault:[24m 0.55

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.setupOpts.defaults.layout_config.horizontal.prompt_position[0m
           [4mType:[24m string

           [4mDefault:[24m "top"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.setupOpts.defaults.layout_config.preview_cutoff[0m
           [4mType:[24m signed integer

           [4mDefault:[24m 120

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.setupOpts.defaults.layout_config.vertical.mirror[0m
           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.setupOpts.defaults.layout_config.width[0m
           [4mType:[24m floating point number

           [4mDefault:[24m 0.8

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.setupOpts.defaults.layout_strategy[0m
           Determines the default layout of Telescope pickers. See ‘:help telescope.layout’.

           [4mType:[24m string

           [4mDefault:[24m "horizontal"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.setupOpts.defaults.path_display[0m
           Determines how file paths are displayed.

           [4mType:[24m list of (one of “hidden”, “tail”, “absolute”, “smart”, “shorten”, “truncate”)

           [4mDefault:[0m

               [
                 "absolute"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.setupOpts.defaults.prompt_prefix[0m
           Shown in front of Telescope’s prompt

           [4mType:[24m string

           [4mDefault:[24m "     "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.setupOpts.defaults.selection_caret[0m
           Character(s) to show in front of the current selection

           [4mType:[24m string

           [4mDefault:[24m "  "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.setupOpts.defaults.selection_strategy[0m
           Determines how the cursor acts after each sort iteration.

           [4mType:[24m one of “reset”, “follow”, “row”, “closest”, “none”

           [4mDefault:[24m "reset"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.setupOpts.defaults.set_env[0m
           Set an environment for term_previewer

           [4mType:[24m attribute set of string

           [4mDefault:[0m

               {
                 COLORTERM = "truecolor";
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.setupOpts.defaults.sorting_strategy[0m
           Determines the direction “better” results are sorted towards.

           [4mType:[24m one of “descending”, “ascending”

           [4mDefault:[24m "ascending"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.setupOpts.defaults.vimgrep_arguments[0m
           Defines the command that will be used for ‘live_grep’ and ‘grep_string’ pickers. Make sure that color is set to ‘never’ because telescope does not yet interpret color codes.

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "\${pkgs.ripgrep}/bin/rg"
                 "--color=never"
                 "--no-heading"
                 "--with-filename"
                 "--line-number"
                 "--column"
                 "--smart-case"
                 "--hidden"
                 "--no-ignore"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.setupOpts.defaults.winblend[0m
           pseudo-transparency of keymap hints floating window

           [4mType:[24m signed integer

           [4mDefault:[24m 0

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.telescope.setupOpts.pickers.find_files.find_command[0m
           cmd to use for finding files

           [4mType:[24m (list of string) or (luaInline)

           [4mDefault:[0m

               [
                 "\${pkgs.fd}/bin/fd"
                 "--type=file"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/telescope/telescope.nix>[0m

       [1mvim.terminal.toggleterm.enable[0m
           Whether to enable toggleterm as a replacement to built-in terminal command.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/terminal/toggleterm/toggleterm.nix>[0m

       [1mvim.terminal.toggleterm.lazygit.enable[0m
           Whether to enable LazyGit integration.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/terminal/toggleterm/toggleterm.nix>[0m

       [1mvim.terminal.toggleterm.lazygit.package[0m
           The package that should be used for lazygit. Setting it to null will attempt to use lazygit from your PATH

           [4mType:[24m null or package

           [4mDefault:[24m <derivation lazygit-0.51.1>

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/terminal/toggleterm/toggleterm.nix>[0m

       [1mvim.terminal.toggleterm.lazygit.direction[0m
           Direction of the lazygit window

           [4mType:[24m one of “horizontal”, “vertical”, “tab”, “float”

           [4mDefault:[24m "float"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/terminal/toggleterm/toggleterm.nix>[0m

       [1mvim.terminal.toggleterm.lazygit.mappings.open[0m
           Open lazygit [toggleterm]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>gg"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/terminal/toggleterm/toggleterm.nix>[0m

       [1mvim.terminal.toggleterm.mappings.open[0m
           The keymapping to open toggleterm

           [4mType:[24m null or string

           [4mDefault:[24m "<c-t>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/terminal/toggleterm/toggleterm.nix>[0m

       [1mvim.terminal.toggleterm.setupOpts[0m
           Option table to pass into the setup function of ToggleTerm

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/terminal/toggleterm/toggleterm.nix>[0m

       [1mvim.terminal.toggleterm.setupOpts.enable_winbar[0m
           Enable winbar

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/terminal/toggleterm/toggleterm.nix>[0m

       [1mvim.terminal.toggleterm.setupOpts.direction[0m
           Direction of the terminal

           [4mType:[24m one of “horizontal”, “vertical”, “tab”, “float”

           [4mDefault:[24m "horizontal"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/terminal/toggleterm/toggleterm.nix>[0m

       [1mvim.terminal.toggleterm.setupOpts.size[0m
           Number or lua function which is passed to the current terminal

           [4mType:[24m (luaInline) or signed integer

           [4mDefault:[0m

               {
                 _type = "lua-inline";
                 expr = ''
                   function(term)
                     if term.direction == "horizontal" then
                       return 15
                     elseif term.direction == "vertical" then
                       return vim.o.columns * 0.4
                     end
                   end
                 '';
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/terminal/toggleterm/toggleterm.nix>[0m

       [1mvim.terminal.toggleterm.setupOpts.winbar.enabled[0m
           Whether to enable winbar in terminal.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/terminal/toggleterm/toggleterm.nix>[0m

       [1mvim.terminal.toggleterm.setupOpts.winbar.name_formatter[0m
           Winbar formatter function.

           [4mType:[24m luaInline

           [4mDefault:[0m

               {
                 _type = "lua-inline";
                 expr = ''
                   function(term)
                     return term.name
                   end
                 '';
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/terminal/toggleterm/toggleterm.nix>[0m

       [1mvim.theme.enable[0m
           Enable theming

           [4mType:[24m boolean

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/theme/theme.nix>[0m

       [1mvim.theme.base16-colors.base00[0m
           The base00 color to use

           [4mType:[24m RGB color in hex format

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/theme/theme.nix>[0m

       [1mvim.theme.base16-colors.base01[0m
           The base01 color to use

           [4mType:[24m RGB color in hex format

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/theme/theme.nix>[0m

       [1mvim.theme.base16-colors.base02[0m
           The base02 color to use

           [4mType:[24m RGB color in hex format

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/theme/theme.nix>[0m

       [1mvim.theme.base16-colors.base03[0m
           The base03 color to use

           [4mType:[24m RGB color in hex format

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/theme/theme.nix>[0m

       [1mvim.theme.base16-colors.base04[0m
           The base04 color to use

           [4mType:[24m RGB color in hex format

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/theme/theme.nix>[0m

       [1mvim.theme.base16-colors.base05[0m
           The base05 color to use

           [4mType:[24m RGB color in hex format

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/theme/theme.nix>[0m

       [1mvim.theme.base16-colors.base06[0m
           The base06 color to use

           [4mType:[24m RGB color in hex format

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/theme/theme.nix>[0m

       [1mvim.theme.base16-colors.base07[0m
           The base07 color to use

           [4mType:[24m RGB color in hex format

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/theme/theme.nix>[0m

       [1mvim.theme.base16-colors.base08[0m
           The base08 color to use

           [4mType:[24m RGB color in hex format

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/theme/theme.nix>[0m

       [1mvim.theme.base16-colors.base09[0m
           The base09 color to use

           [4mType:[24m RGB color in hex format

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/theme/theme.nix>[0m

       [1mvim.theme.base16-colors.base0A[0m
           The base0A color to use

           [4mType:[24m RGB color in hex format

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/theme/theme.nix>[0m

       [1mvim.theme.base16-colors.base0B[0m
           The base0B color to use

           [4mType:[24m RGB color in hex format

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/theme/theme.nix>[0m

       [1mvim.theme.base16-colors.base0C[0m
           The base0C color to use

           [4mType:[24m RGB color in hex format

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/theme/theme.nix>[0m

       [1mvim.theme.base16-colors.base0D[0m
           The base0D color to use

           [4mType:[24m RGB color in hex format

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/theme/theme.nix>[0m

       [1mvim.theme.base16-colors.base0E[0m
           The base0E color to use

           [4mType:[24m RGB color in hex format

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/theme/theme.nix>[0m

       [1mvim.theme.base16-colors.base0F[0m
           The base0F color to use

           [4mType:[24m RGB color in hex format

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/theme/theme.nix>[0m

       [1mvim.theme.extraConfig[0m
           Additional lua configuration to add before setup

           [4mType:[24m strings concatenated with “\n”

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/theme/theme.nix>[0m

       [1mvim.theme.name[0m
           Supported themes can be found in [4msupportedThemes.nix[24m. Setting the theme to “base16” enables base16 theming and requires all of the colors in [1mvim.theme.base16-colors [22mto be set.

           [4mType:[24m one of “base16”, “catppuccin”, “dracula”, “github”, “gruvbox”, “mini-base16”, “nord”, “onedark”, “oxocarbon”, “rose-pine”, “solarized-osaka”, “tokyonight”

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/theme/theme.nix>[0m

       [1mvim.theme.style[0m
           Specific style for theme if it supports it

           [4mType:[24m one of “dark”, “darker”, “cool”, “deep”, “warm”, “warmer”

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/theme/theme.nix>[0m

       [1mvim.theme.transparent[0m
           Whether or not transparency should be enabled. Has no effect for themes that do not support transparency

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/theme/theme.nix>[0m

       [1mvim.treesitter.enable[0m
           Whether to enable treesitter, also enabled automatically through language options.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/treesitter.nix>[0m

       [1mvim.treesitter.addDefaultGrammars[0m
           Whether to add the default grammars to the list of grammars to install.

           This option is only relevant if treesitter has been enabled.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/treesitter.nix>[0m

       [1mvim.treesitter.autotagHtml[0m
           Whether to enable autoclose and rename html tag.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/treesitter.nix>[0m

       [1mvim.treesitter.context.enable[0m
           Whether to enable context of current buffer contents [nvim-treesitter-context] .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/ts-context/context.nix>[0m

       [1mvim.treesitter.context.setupOpts[0m
           Option table to pass into the setup function of treesitter-context

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/ts-context/context.nix>[0m

       [1mvim.treesitter.context.setupOpts.line_numbers[0m
           Whether to display line numbers in current context

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/ts-context/context.nix>[0m

       [1mvim.treesitter.context.setupOpts.max_lines[0m
           How many lines the window should span.

           Values >= 0 mean there will be no limit.

           [4mType:[24m signed integer

           [4mDefault:[24m 0

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/ts-context/context.nix>[0m

       [1mvim.treesitter.context.setupOpts.min_window_height[0m
           Minimum editor window height to enable context.

           Values >= 0 mean there will be no limit.

           [4mType:[24m signed integer

           [4mDefault:[24m 0

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/ts-context/context.nix>[0m

       [1mvim.treesitter.context.setupOpts.mode[0m
           Line used to calculate context.

           [4mType:[24m one of “cursor”, “topline”

           [4mDefault:[24m "cursor"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/ts-context/context.nix>[0m

       [1mvim.treesitter.context.setupOpts.multiline_threshold[0m
           Maximum number of lines to collapse for a single context line.

           [4mType:[24m signed integer

           [4mDefault:[24m 20

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/ts-context/context.nix>[0m

       [1mvim.treesitter.context.setupOpts.separator[0m
           Separator between context and content. This option should be a single character string, like ‘-’.

           When separator is set, the context will only show up when there are at least 2 lines above cursorline.

           [4mType:[24m null or string

           [4mDefault:[24m "-"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/ts-context/context.nix>[0m

       [1mvim.treesitter.context.setupOpts.trim_scope[0m
           Which context lines to discard if [1mvim.treesitter.context.setupOpts.max_lines[22m[1] is exceeded.

           [4mType:[24m one of “inner”, “outer”

           [4mDefault:[24m "outer"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/ts-context/context.nix>[0m

            [1m1. [22msee the [1mvim.treesitter.context.setupOpts.max_lines [22moption

       [1mvim.treesitter.context.setupOpts.zindex[0m
           The Z-index of the context window.

           [4mType:[24m signed integer

           [4mDefault:[24m 20

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/ts-context/context.nix>[0m

       [1mvim.treesitter.fold[0m
           Whether to enable fold with treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/treesitter.nix>[0m

       [1mvim.treesitter.grammars[0m
           List of treesitter grammars to install. For grammars to be installed properly, you must use grammars from ‘pkgs.vimPlugins.nvim-treesitter.builtGrammars’.

           For languages already supported by nvf, you may use [1mvim.language.<lang>.treesitter [22moptions, which will automatically add the required grammars to this.

           [4mType:[24m list of package

           [4mDefault:[24m [ ]

           [4mExample:[0m

               pkgs.vimPlugins.nvim-treesitter.builtGrammars; [
                 regex
                 kdl
               ];

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/treesitter.nix>[0m

       [1mvim.treesitter.highlight.enable[0m
           Whether to enable highlighting with treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/treesitter.nix>[0m

       [1mvim.treesitter.highlight.additionalVimRegexHighlighting[0m
           Takes either a boolean or a list of languages.

           Setting this to true will run ‘:h syntax’ and tree-sitter at the same time. You may this to ‘true’ if you depend on ‘syntax’ being enabled (like for indentation).

               [1mNote[0m
               Using this option may slow down your editor, and you may see some duplicate highlights.

           [4mType:[24m boolean or list of string

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/treesitter.nix>[0m

       [1mvim.treesitter.highlight.disable[0m
           List of treesitter grammars to disable highlighting for.

           This option can be either a list, in which case it will be converted to a Lua table containing grammars to disable highlighting for, or a string containing a [1mlua function [22mthat will be read as is.

               [1mWarning[0m
               A comma will be added at the end of your function, so you do not need to add it yourself. Doing so will cause in syntax errors within your Neovim configuration.

           [4mType:[24m (list of string) or (luaInline)

           [4mDefault:[24m [ ]

           [4mExample:[0m

               -- Disable slow treesitter highlight for large files
               function(lang, buf)
                 local max_filesize = 1000 * 1024 -- 1MB
                 local ok, stats = pcall(vim.loop.fs_stat, vim.api.nvim_buf_get_name(buf))
                 if ok and stats and stats.size > max_filesize then
                     return true
                 end
               end

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/treesitter.nix>[0m

       [1mvim.treesitter.incrementalSelection.enable[0m
           Whether to enable incremental selection with treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/treesitter.nix>[0m

       [1mvim.treesitter.incrementalSelection.disable[0m
           List of treesitter grammars to disable incremental selection for.

           This option can be either a list, in which case it will be converted to a Lua table containing grammars to disable indentation for, or a string containing a [1mlua function [22mthat will be read as is.

               [1mWarning[0m
               A comma will be added at the end of your function, so you do not need to add it yourself. Doing so will cause in syntax errors within your Neovim configuration.

           [4mType:[24m (list of string) or (luaInline)

           [4mDefault:[24m [ ]

           [4mExample:[24m ["c" "rust" ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/treesitter.nix>[0m

       [1mvim.treesitter.indent.enable[0m
           Whether to enable indentation with treesitter.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/treesitter.nix>[0m

       [1mvim.treesitter.indent.disable[0m
           List of treesitter grammars to disable indentation for.

           This option can be either a list, in which case it will be converted to a Lua table containing grammars to disable indentation for, or a string containing a [1mlua function [22mthat will be read as is.

               [1mWarning[0m
               A comma will be added at the end of your function, so you do not need to add it yourself. Doing so will cause in syntax errors within your Neovim configuration.

           [4mType:[24m (list of string) or (luaInline)

           [4mDefault:[24m [ ]

           [4mExample:[24m ["c" "rust"]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/treesitter.nix>[0m

       [1mvim.treesitter.mappings.incrementalSelection.decrementByNode[0m
           Decrement selection by node [treesitter]

           [4mType:[24m null or string

           [4mDefault:[24m "grm"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/treesitter.nix>[0m

       [1mvim.treesitter.mappings.incrementalSelection.incrementByNode[0m
           Increment selection by node [treesitter]

           [4mType:[24m null or string

           [4mDefault:[24m "grn"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/treesitter.nix>[0m

       [1mvim.treesitter.mappings.incrementalSelection.incrementByScope[0m
           Increment selection by scope [treesitter]

           [4mType:[24m null or string

           [4mDefault:[24m "grc"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/treesitter.nix>[0m

       [1mvim.treesitter.mappings.incrementalSelection.init[0m
           Init selection [treesitter]

           [4mType:[24m null or string

           [4mDefault:[24m "gnn"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/treesitter.nix>[0m

       [1mvim.treesitter.textobjects.enable[0m
           Whether to enable Treesitter textobjects.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/ts-textobjects/textobjects.nix>[0m

       [1mvim.treesitter.textobjects.setupOpts[0m
           Option table to pass into the setup function of treesitter-textobjects

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mExample:[0m

               {
                 select = {
                   enable = true;
                   keymaps = {
                     af = "@function.outer";
                   };
                   lookahead = true;
                 };
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/treesitter/ts-textobjects/textobjects.nix>[0m

       [1mvim.ui.borders.enable[0m
           Whether to enable visible borders for most windows.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/borders/borders.nix>[0m

       [1mvim.ui.borders.globalStyle[0m
           The global border style to use.

           If a list is given, it should have a length of eight or any divisor of eight. The array will specify the eight chars building up the border in a clockwise fashion starting with the top-left corner. You can specify a different highlight group for each
           character by passing a [char, “YourHighlightGroup”] instead

           [4mType:[24m one of “none”, “single”, “double”, “rounded”, “solid”, “shadow” or list of (string or list of string)

           [4mDefault:[24m "rounded"

           [4mExample:[0m

               [
                 "╔"
                 "═"
                 "╗"
                 "║"
                 "╝"
                 "═"
                 "╚"
                 "║"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/borders/borders.nix>[0m

       [1mvim.ui.borders.plugins.fastaction.enable[0m
           Whether to enable borders for the fastaction plugin.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/borders/borders.nix>[0m

       [1mvim.ui.borders.plugins.fastaction.style[0m
           The border style to use for the fastaction plugin

           [4mType:[24m one of “none”, “single”, “double”, “rounded”, “solid”, “shadow” or list of (string or list of string)

           [4mDefault:[24m "rounded"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/borders/borders.nix>[0m

       [1mvim.ui.borders.plugins.lsp-signature.enable[0m
           Whether to enable borders for the lsp-signature plugin.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/borders/borders.nix>[0m

       [1mvim.ui.borders.plugins.lsp-signature.style[0m
           The border style to use for the lsp-signature plugin

           [4mType:[24m one of “none”, “single”, “double”, “rounded”, “solid”, “shadow” or list of (string or list of string)

           [4mDefault:[24m "rounded"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/borders/borders.nix>[0m

       [1mvim.ui.borders.plugins.lspsaga.enable[0m
           Whether to enable borders for the lspsaga plugin.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/borders/borders.nix>[0m

       [1mvim.ui.borders.plugins.lspsaga.style[0m
           The border style to use for the lspsaga plugin

           [4mType:[24m one of “none”, “single”, “double”, “rounded”, “solid”, “shadow” or list of (string or list of string)

           [4mDefault:[24m "rounded"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/borders/borders.nix>[0m

       [1mvim.ui.borders.plugins.nvim-cmp.enable[0m
           Whether to enable borders for the nvim-cmp plugin.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/borders/borders.nix>[0m

       [1mvim.ui.borders.plugins.nvim-cmp.style[0m
           The border style to use for the nvim-cmp plugin

           [4mType:[24m one of “none”, “single”, “double”, “rounded”, “solid”, “shadow” or list of (string or list of string)

           [4mDefault:[24m "rounded"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/borders/borders.nix>[0m

       [1mvim.ui.borders.plugins.which-key.enable[0m
           Whether to enable borders for the which-key plugin.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/borders/borders.nix>[0m

       [1mvim.ui.borders.plugins.which-key.style[0m
           The border style to use for the which-key plugin

           [4mType:[24m one of “none”, “single”, “double”, “rounded”, “solid”, “shadow” or list of (string or list of string)

           [4mDefault:[24m "rounded"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/borders/borders.nix>[0m

       [1mvim.ui.breadcrumbs.enable[0m
           Whether to enable breadcrumbs.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.lualine.winbar.enable[0m
           Whether to automatically configure a winbar component for Lualine on the Winbar section.

               [1mNote[0m
               This is [1mset to [22m‘true’ [1mby default[22m, which means nvim-navic will occupy ‘winbar.lualine_c’ for the breadcrumbs feature unless this option is set to ‘false’.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.lualine.winbar.alwaysRender[0m
           Whether to always display the breadcrumbs component on winbar.

               [1mNote[0m
               This will pass ‘draw_empty’ to the ‘nvim_navic’ winbar component, which causes the component to be drawn even if it’s empty.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.enable[0m
           Whether to enable navbuddy LSP helper UI. Enabling this option automatically loads and enables nvim-navic.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.appendName[0m
           Insert at the end of name.

           [4mType:[24m string

           [4mDefault:[24m "a"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.appendScope[0m
           Insert at the end of scope.

           [4mType:[24m string

           [4mDefault:[24m "A"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.children[0m
           Navigate to the child node.

           [4mType:[24m string

           [4mDefault:[24m "l"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.close[0m
           Close and return the cursor to its original location.

           [4mType:[24m string

           [4mDefault:[24m "<esc>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.comment[0m
           Comment the node.

           [4mType:[24m string

           [4mDefault:[24m "c"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.delete[0m
           Delete the node.

           [4mType:[24m string

           [4mDefault:[24m "d"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.foldCreate[0m
           Create a new fold of the node.

           [4mType:[24m string

           [4mDefault:[24m "f"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.foldDelete[0m
           Delete the current fold of the node.

           [4mType:[24m string

           [4mDefault:[24m "F"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.help[0m
           Open the mappings help window.

           [4mType:[24m string

           [4mDefault:[24m "g?"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.hsplit[0m
           Open the node in a horizontal split.

           [4mType:[24m string

           [4mDefault:[24m "<C-s>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.insertName[0m
           Insert at the start of name.

           [4mType:[24m string

           [4mDefault:[24m "i"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.insertScope[0m
           Insert at the start of scope.

           [4mType:[24m string

           [4mDefault:[24m "I"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.moveDown[0m
           Move the node down.

           [4mType:[24m string

           [4mDefault:[24m "J"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.moveUp[0m
           Move the node up.

           [4mType:[24m string

           [4mDefault:[24m "K"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.nextSibling[0m
           Navigate to the next sibling node.

           [4mType:[24m string

           [4mDefault:[24m "j"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.parent[0m
           Navigate to the parent node.

           [4mType:[24m string

           [4mDefault:[24m "h"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.previousSibling[0m
           Navigate to the previous sibling node.

           [4mType:[24m string

           [4mDefault:[24m "k"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.rename[0m
           Rename the node.

           [4mType:[24m string

           [4mDefault:[24m "r"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.root[0m
           Navigate to the root node.

           [4mType:[24m string

           [4mDefault:[24m "0"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.select[0m
           Goto the node.

           [4mType:[24m string

           [4mDefault:[24m "<enter>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.telescope[0m
           Start fuzzy finder at the current level.

           [4mType:[24m string

           [4mDefault:[24m "t"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.togglePreview[0m
           Toggle the preview.

           [4mType:[24m string

           [4mDefault:[24m "s"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.visualName[0m
           Select the name visually.

           [4mType:[24m string

           [4mDefault:[24m "v"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.visualScope[0m
           Select the scope visually.

           [4mType:[24m string

           [4mDefault:[24m "V"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.vsplit[0m
           Open the node in a vertical split.

           [4mType:[24m string

           [4mDefault:[24m "<C-v>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.yankName[0m
           Yank the name to system clipboard.

           [4mType:[24m string

           [4mDefault:[24m "y"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.mappings.yankScope[0m
           Yank the scope to system clipboard.

           [4mType:[24m string

           [4mDefault:[24m "Y"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts[0m
           Option table to pass into the setup function of navbuddy

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.Array[0m
           [4mType:[24m string

           [4mDefault:[24m "󰅪 "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.Boolean[0m
           [4mType:[24m string

           [4mDefault:[24m "◩ "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.Class[0m
           [4mType:[24m string

           [4mDefault:[24m "󰌗 "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.Constant[0m
           [4mType:[24m string

           [4mDefault:[24m "󰏿 "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.Constructor[0m
           [4mType:[24m string

           [4mDefault:[24m " "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.Enum[0m
           [4mType:[24m string

           [4mDefault:[24m "󰕘"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.EnumMember[0m
           [4mType:[24m string

           [4mDefault:[24m "󰕘 "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.Event[0m
           [4mType:[24m string

           [4mDefault:[24m " "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.Field[0m
           [4mType:[24m string

           [4mDefault:[24m " "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.File[0m
           [4mType:[24m string

           [4mDefault:[24m "󰈙 "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.Function[0m
           [4mType:[24m string

           [4mDefault:[24m "󰊕 "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.Interface[0m
           [4mType:[24m string

           [4mDefault:[24m "󰕘"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.Key[0m
           [4mType:[24m string

           [4mDefault:[24m "󰌋 "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.Method[0m
           [4mType:[24m string

           [4mDefault:[24m "󰆧 "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.Module[0m
           [4mType:[24m string

           [4mDefault:[24m " "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.Namespace[0m
           [4mType:[24m string

           [4mDefault:[24m "󰌗 "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.Null[0m
           [4mType:[24m string

           [4mDefault:[24m "󰟢 "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.Number[0m
           [4mType:[24m string

           [4mDefault:[24m "󰎠 "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.Object[0m
           [4mType:[24m string

           [4mDefault:[24m "󰅩 "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.Operator[0m
           [4mType:[24m string

           [4mDefault:[24m "󰆕 "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.Package[0m
           [4mType:[24m string

           [4mDefault:[24m " "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.Property[0m
           [4mType:[24m string

           [4mDefault:[24m " "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.String[0m
           [4mType:[24m string

           [4mDefault:[24m " "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.Struct[0m
           [4mType:[24m string

           [4mDefault:[24m "󰌗 "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.TypeParameter[0m
           [4mType:[24m string

           [4mDefault:[24m "󰊄 "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.icons.Variable[0m
           [4mType:[24m string

           [4mDefault:[24m "󰆧 "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.lsp.auto_attach[0m
           Whether to attach to LSP server manually.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.lsp.preference[0m
           The preference list ranking LSP servers.

           [4mType:[24m null or (list of string)

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.node_markers.enable[0m
           Whether to enable node markers.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.node_markers.icons.branch[0m
           [4mType:[24m string

           [4mDefault:[24m " "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.node_markers.icons.leaf[0m
           [4mType:[24m string

           [4mDefault:[24m "  "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.node_markers.icons.leaf_selected[0m
           [4mType:[24m string

           [4mDefault:[24m " → "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.source_buffer.followNode[0m
           Whether to keep the current node in focus in the source buffer.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.source_buffer.highlight[0m
           Whether to highlight the currently focused node in the source buffer.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.source_buffer.reorient[0m
           The mode for reorienting the source buffer after moving nodes.

           [4mType:[24m one of “smart”, “top”, “mid”, “none”

           [4mDefault:[24m "smart"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.source_buffer.scrolloff[0m
           The scrolloff value in the source buffer when Navbuddy is open.

           [4mType:[24m null or signed integer

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.useDefaultMappings[0m
           Add the default Navbuddy keybindings in addition to the keybinding added by this module.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.window.border[0m
           The border style to use.

           [4mType:[24m one of “none”, “single”, “double”, “rounded”, “solid”, “shadow” or list of (string or list of string)

           [4mDefault:[24m "rounded"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.window.scrolloff[0m
           The scrolloff value within a navbuddy window.

           [4mType:[24m null or signed integer

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.window.sections.left.border[0m
           The border style to use for the left section of the Navbuddy UI.

           [4mType:[24m one of “none”, “single”, “double”, “rounded”, “solid”, “shadow” or list of (string or list of string)

           [4mDefault:[24m "rounded"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.window.sections.mid.border[0m
           The border style to use for the middle section of the Navbuddy UI.

           [4mType:[24m one of “none”, “single”, “double”, “rounded”, “solid”, “shadow” or list of (string or list of string)

           [4mDefault:[24m "rounded"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.window.sections.right.border[0m
           The border style to use for the right section of the Navbuddy UI.

           [4mType:[24m one of “none”, “single”, “double”, “rounded”, “solid”, “shadow” or list of (string or list of string)

           [4mDefault:[24m "rounded"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.navbuddy.setupOpts.window.sections.right.preview[0m
           The display mode of the preview on the right section.

           [4mType:[24m one of “leaf”, “always”, “never”

           [4mDefault:[24m "leaf"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.breadcrumbs.source[0m
           The source to be used for breadcrumbs component. Null means no breadcrumbs.

           [4mType:[24m null or value “nvim-navic” (singular enum)

           [4mDefault:[24m "nvim-navic"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/breadcrumbs/breadcrumbs.nix>[0m

       [1mvim.ui.colorizer.enable[0m
           Whether to enable color highlighting [nvim-colorizer.lua].

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts[0m
           Option table to pass into the setup function of colorizer

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.filetypes[0m
           Filetypes to enable on and their option overrides.

           ‘"*"’ means enable on all filetypes. Filetypes prefixed with ‘"!"’ are disabled.

           [4mType:[24m attribute set of (submodule)

           [4mDefault:[24m { }

           [4mExample:[0m

               {
                 "!vim" = { };
                 "*" = { };
                 javascript = {
                   AARRGGBB = false;
                 };
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.filetypes.<name>.AARRGGBB[0m
           Colorize 0xAARRGGBB hex codes

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.filetypes.<name>.RGB[0m
           Colorize #RGB hex codes

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.filetypes.<name>.RRGGBB[0m
           Colorize #RRGGBB hex codes

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.filetypes.<name>.RRGGBBAA[0m
           Colorize #RRGGBBAA hex codes

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.filetypes.<name>.always_update[0m
           Update color values even if buffer is not focused. Example use: cmp_menu, cmp_docs

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.filetypes.<name>.css[0m
           Enable all CSS features: rgb_fn, hsl_fn, names, RGB, RRGGBB

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.filetypes.<name>.css_fn[0m
           Enable all CSS [4mfunctions[24m: rgb_fn, hsl_fn

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.filetypes.<name>.hsl_fn[0m
           Colorize CSS hsl() and hsla() functions

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.filetypes.<name>.mode[0m
           Set the display mode

           [4mType:[24m null or one of “foreground”, “background”

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.filetypes.<name>.names[0m
           Colorize “Name” codes like Blue

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.filetypes.<name>.rgb_fn[0m
           Colorize CSS rgb() and rgba() functions

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.filetypes.<name>.sass[0m
           Enable sass colors

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.filetypes.<name>.tailwind[0m
           Enable tailwind colors

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.filetypes.<name>.virtualtext[0m
           String to display as virtualtext

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.user_default_options[0m
           ‘user_default_options’ is the second parameter to nvim-colorizer’s setup function.

           Anything set here is the inverse of the previous setup configuration.

           [4mType:[24m submodule

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.user_default_options.AARRGGBB[0m
           Colorize 0xAARRGGBB hex codes

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.user_default_options.RGB[0m
           Colorize #RGB hex codes

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.user_default_options.RRGGBB[0m
           Colorize #RRGGBB hex codes

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.user_default_options.RRGGBBAA[0m
           Colorize #RRGGBBAA hex codes

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.user_default_options.always_update[0m
           Update color values even if buffer is not focused. Example use: cmp_menu, cmp_docs

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.user_default_options.css[0m
           Enable all CSS features: rgb_fn, hsl_fn, names, RGB, RRGGBB

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.user_default_options.css_fn[0m
           Enable all CSS [4mfunctions[24m: rgb_fn, hsl_fn

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.user_default_options.hsl_fn[0m
           Colorize CSS hsl() and hsla() functions

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.user_default_options.mode[0m
           Set the display mode

           [4mType:[24m null or one of “foreground”, “background”

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.user_default_options.names[0m
           Colorize “Name” codes like Blue

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.user_default_options.rgb_fn[0m
           Colorize CSS rgb() and rgba() functions

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.user_default_options.sass[0m
           Enable sass colors

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.user_default_options.tailwind[0m
           Enable tailwind colors

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.colorizer.setupOpts.user_default_options.virtualtext[0m
           String to display as virtualtext

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/colorizer/colorizer.nix>[0m

       [1mvim.ui.fastaction.enable[0m
           Whether to enable overriding vim.ui.select with fastaction.nvim.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/fastaction/fastaction-nvim.nix>[0m

       [1mvim.ui.fastaction.setupOpts[0m
           Option table to pass into the setup function of fastaction

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/fastaction/fastaction-nvim.nix>[0m

       [1mvim.ui.illuminate.enable[0m
           Whether to enable automatically highlight other uses of the word under the cursor [vim-illuminate] .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/illuminate/illuminate.nix>[0m

       [1mvim.ui.illuminate.setupOpts[0m
           Option table to pass into the setup function of vim-illuminate

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/illuminate/illuminate.nix>[0m

       [1mvim.ui.illuminate.setupOpts.filetypes_denylist[0m
           Filetypes to not illuminate, this overrides ‘filetypes_allowlist’

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "dirvish"
                 "fugitive"
                 "help"
                 "neo-tree"
                 "notify"
                 "NvimTree"
                 "TelescopePrompt"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/illuminate/illuminate.nix>[0m

       [1mvim.ui.modes-nvim.enable[0m
           Whether to enable modes.nvim’s prismatic line decorations.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/modes/modes.nix>[0m

       [1mvim.ui.modes-nvim.setupOpts.colors[0m
           Option table to pass into the setup function of modes.nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/modes/modes.nix>[0m

       [1mvim.ui.modes-nvim.setupOpts.colors.copy[0m
           The #RRGGBB color code for the visual mode highlights

           [4mType:[24m string

           [4mDefault:[24m "#f5c359"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/modes/modes.nix>[0m

       [1mvim.ui.modes-nvim.setupOpts.colors.delete[0m
           The #RRGGBB color code for the visual mode highlights

           [4mType:[24m string

           [4mDefault:[24m "#c75c6a"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/modes/modes.nix>[0m

       [1mvim.ui.modes-nvim.setupOpts.colors.insert[0m
           The #RRGGBB color code for the visual mode highlights

           [4mType:[24m string

           [4mDefault:[24m "#78ccc5"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/modes/modes.nix>[0m

       [1mvim.ui.modes-nvim.setupOpts.colors.visual[0m
           The #RRGGBB color code for the visual mode highlights

           [4mType:[24m string

           [4mDefault:[24m "#9745be"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/modes/modes.nix>[0m

       [1mvim.ui.modes-nvim.setupOpts.line_opacity.visual[0m
           Set opacity for cursorline and number background

           [4mType:[24m floating point number

           [4mDefault:[24m 0.0

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/modes/modes.nix>[0m

       [1mvim.ui.modes-nvim.setupOpts.setCursorline[0m
           Set a colored cursorline on current line

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/modes/modes.nix>[0m

       [1mvim.ui.noice.enable[0m
           Whether to enable noice.nvim UI modification library.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/noice/noice.nix>[0m

       [1mvim.ui.noice.setupOpts[0m
           Option table to pass into the setup function of noice.nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/noice/noice.nix>[0m

       [1mvim.ui.noice.setupOpts.format.cmdline[0m
           formatting options for the cmdline

           [4mType:[24m null or anything

           [4mDefault:[0m

               {
                 icon = "";
                 lang = "vim";
                 pattern = "^:";
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/noice/noice.nix>[0m

       [1mvim.ui.noice.setupOpts.format.filter[0m
           formatting options for filter

           [4mType:[24m null or anything

           [4mDefault:[0m

               {
                 icon = "";
                 lang = "bash";
                 pattern = "^:%s*!";
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/noice/noice.nix>[0m

       [1mvim.ui.noice.setupOpts.format.help[0m
           formatting options for help

           [4mType:[24m null or anything

           [4mDefault:[0m

               {
                 icon = "󰋖";
                 pattern = "^:%s*he?l?p?%s+";
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/noice/noice.nix>[0m

       [1mvim.ui.noice.setupOpts.format.lua[0m
           formatting options for lua

           [4mType:[24m null or anything

           [4mDefault:[0m

               {
                 icon = "";
                 lang = "lua";
                 pattern = "^:%s*lua%s+";
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/noice/noice.nix>[0m

       [1mvim.ui.noice.setupOpts.format.search_down[0m
           formatting options for search_down

           [4mType:[24m null or anything

           [4mDefault:[0m

               {
                 icon = " ";
                 kind = "search";
                 lang = "regex";
                 pattern = "^/";
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/noice/noice.nix>[0m

       [1mvim.ui.noice.setupOpts.format.search_up[0m
           formatting options for search_up

           [4mType:[24m null or anything

           [4mDefault:[0m

               {
                 icon = " ";
                 kind = "search";
                 lang = "regex";
                 pattern = "^%?";
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/noice/noice.nix>[0m

       [1mvim.ui.noice.setupOpts.lsp.override."cmp.entry.get_documentation"[0m
           override cmp documentation with Noice

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/noice/noice.nix>[0m

       [1mvim.ui.noice.setupOpts.lsp.override."vim.lsp.util.convert_input_to_markdown_lines"[0m
           override the default lsp markdown formatter with Noice

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/noice/noice.nix>[0m

       [1mvim.ui.noice.setupOpts.lsp.override."vim.lsp.util.stylize_markdown"[0m
           override the lsp markdown formatter with Noice

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/noice/noice.nix>[0m

       [1mvim.ui.noice.setupOpts.lsp.signature.enabled[0m
           Whether to enable signature help.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/noice/noice.nix>[0m

       [1mvim.ui.noice.setupOpts.presets.bottom_search[0m
           use a classic bottom cmdline for search

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/noice/noice.nix>[0m

       [1mvim.ui.noice.setupOpts.presets.command_palette[0m
           position the cmdline and popupmenu together

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/noice/noice.nix>[0m

       [1mvim.ui.noice.setupOpts.presets.inc_rename[0m
           enables an input dialog for inc-rename.nvim

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/noice/noice.nix>[0m

       [1mvim.ui.noice.setupOpts.presets.long_message_to_split[0m
           long messages will be sent to a split

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/noice/noice.nix>[0m

       [1mvim.ui.noice.setupOpts.presets.lsp_doc_border[0m
           add a border to hover docs and signature help

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/noice/noice.nix>[0m

       [1mvim.ui.noice.setupOpts.routes[0m
           How to route messages

           [4mType:[24m list of (submodule)

           [4mDefault:[24m "Hide written messages"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/noice/noice.nix>[0m

       [1mvim.ui.noice.setupOpts.routes.*.filter[0m
           a filter for messages matching this route

           [4mType:[24m anything

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/noice/noice.nix>[0m

       [1mvim.ui.noice.setupOpts.routes.*.opts[0m
           options for the view and the route

           [4mType:[24m null or anything

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/noice/noice.nix>[0m

       [1mvim.ui.noice.setupOpts.routes.*.view[0m
           how this route is viewed

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/noice/noice.nix>[0m

       [1mvim.ui.nvim-ufo.enable[0m
           Whether to enable nvim-ufo.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/nvim-ufo/nvim-ufo.nix>[0m

       [1mvim.ui.nvim-ufo.setupOpts[0m
           Option table to pass into the setup function of nvim-ufo

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/nvim-ufo/nvim-ufo.nix>[0m

       [1mvim.ui.smartcolumn.enable[0m
           Whether to enable line length indicator.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/smartcolumn/smartcolumn.nix>[0m

       [1mvim.ui.smartcolumn.setupOpts[0m
           Option table to pass into the setup function of smartcolumn.nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/smartcolumn/smartcolumn.nix>[0m

       [1mvim.ui.smartcolumn.setupOpts.colorcolumn[0m
           The position at which the column will be displayed. Set to null to disable

           [4mType:[24m null or string or list of string

           [4mDefault:[24m "120"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/smartcolumn/smartcolumn.nix>[0m

       [1mvim.ui.smartcolumn.setupOpts.custom_colorcolumn[0m
           The position at which smart column should be displayed for each individual buffer type

           [4mType:[24m attribute set of (string or list of string)

           [4mDefault:[24m { }

           [4mExample:[0m

               vim.ui.smartcolumn.setupOpts.custom_colorcolumn = {
                 nix = "110";
                 ruby = "120";
                 java = "130";
                 go = ["90" "130"];
               };

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/smartcolumn/smartcolumn.nix>[0m

       [1mvim.ui.smartcolumn.setupOpts.disabled_filetypes[0m
           The filetypes smartcolumn will be disabled for.

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "help"
                 "text"
                 "markdown"
                 "NvimTree"
                 "alpha"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/ui/smartcolumn/smartcolumn.nix>[0m

       [1mvim.undoFile.enable[0m
           Whether to enable undofile for persistent undo behaviour.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/basic.nix>[0m

       [1mvim.undoFile.path[0m
           Path to the directory in which undo history will be stored

           [4mType:[24m string or (luaInline)

           [4mDefault:[0m

               mkLuaInline "vim.fn.stdpath('state') .. '/undo'"

           [4mExample:[0m

               mkLuaInline "os.getenv('XDG_DATA_HOME') .. '/nvf/undo'"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/neovim/init/basic.nix>[0m

       [1mvim.utility.ccc.enable[0m
           Whether to enable ccc color picker for neovim.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/ccc/ccc.nix>[0m

       [1mvim.utility.ccc.mappings.decrease10[0m
           Decrease the value times delta of the slider

           [4mType:[24m null or string

           [4mDefault:[24m "<H>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/ccc/ccc.nix>[0m

       [1mvim.utility.ccc.mappings.increase10[0m
           Increase the value times delta of the slider

           [4mType:[24m null or string

           [4mDefault:[24m "<L>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/ccc/ccc.nix>[0m

       [1mvim.utility.ccc.mappings.quit[0m
           Cancel and close the UI without replace or insert

           [4mType:[24m null or string

           [4mDefault:[24m "<Esc>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/ccc/ccc.nix>[0m

       [1mvim.utility.diffview-nvim.enable[0m
           Whether to enable diffview-nvim: cycle through diffs for all modified files for any git rev.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/diffview/diffview.nix>[0m

       [1mvim.utility.diffview-nvim.setupOpts[0m
           Option table to pass into the setup function of Fidget

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/diffview/diffview.nix>[0m

       [1mvim.utility.direnv.enable[0m
           Whether to enable syncing nvim shell environment with direnv’s using ‘direnv.vim’.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/direnv/direnv.nix>[0m

       [1mvim.utility.icon-picker.enable[0m
           Whether to enable nerdfonts icon picker for nvim.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/icon-picker/icon-picker.nix>[0m

       [1mvim.utility.images.image-nvim.enable[0m
           Whether to enable image support in Neovim [image.nvim].

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/images/image-nvim/image-nvim.nix>[0m

       [1mvim.utility.images.image-nvim.setupOpts[0m
           Option table to pass into the setup function of image.nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/images/image-nvim/image-nvim.nix>[0m

       [1mvim.utility.images.image-nvim.setupOpts.backend[0m
           The backend to use for rendering images.

             [1m• [22mkitty - best in class, works great and is very snappy
             [1m• [22mueberzug - backed by ueberzugpp, supports any terminal, but has lower performance

           [4mType:[24m one of “kitty”, “ueberzug”

           [4mDefault:[24m "ueberzug"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/images/image-nvim/image-nvim.nix>[0m

       [1mvim.utility.images.image-nvim.setupOpts.editorOnlyRenderWhenFocused[0m
           Whether to enable only rendering images when the editor is focused.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/images/image-nvim/image-nvim.nix>[0m

       [1mvim.utility.images.image-nvim.setupOpts.hijackFilePatterns[0m
           File patterns to hijack for image.nvim. This is useful for filetypes that don’t have a dedicated integration.

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "*.png"
                 "*.jpg"
                 "*.jpeg"
                 "*.gif"
                 "*.webp"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/images/image-nvim/image-nvim.nix>[0m

       [1mvim.utility.images.image-nvim.setupOpts.integrations.markdown.enable[0m
           Whether to enable image.nvim in markdown files.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/images/image-nvim/image-nvim.nix>[0m

       [1mvim.utility.images.image-nvim.setupOpts.integrations.markdown.clearInInsertMode[0m
           Whether to enable clearing of images when entering insert mode.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/images/image-nvim/image-nvim.nix>[0m

       [1mvim.utility.images.image-nvim.setupOpts.integrations.markdown.downloadRemoteImages[0m
           Whether to enable downloading remote images.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/images/image-nvim/image-nvim.nix>[0m

       [1mvim.utility.images.image-nvim.setupOpts.integrations.markdown.filetypes[0m
           Filetypes to enable image.nvim in. Markdown extensions (i.e. quarto) can go here

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "markdown"
                 "vimwiki"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/images/image-nvim/image-nvim.nix>[0m

       [1mvim.utility.images.image-nvim.setupOpts.integrations.markdown.onlyRenderAtCursor[0m
           Whether to enable only rendering images at cursor.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/images/image-nvim/image-nvim.nix>[0m

       [1mvim.utility.images.image-nvim.setupOpts.integrations.maxWidth[0m
           The maximum width of images to render. Images larger than this will be scaled down to fit within this width.

           [4mType:[24m null or signed integer

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/images/image-nvim/image-nvim.nix>[0m

       [1mvim.utility.images.image-nvim.setupOpts.integrations.neorg.enable[0m
           Whether to enable image.nvim in Neorg files.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/images/image-nvim/image-nvim.nix>[0m

       [1mvim.utility.images.image-nvim.setupOpts.integrations.neorg.clearInInsertMode[0m
           Whether to enable clearing of images when entering insert mode.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/images/image-nvim/image-nvim.nix>[0m

       [1mvim.utility.images.image-nvim.setupOpts.integrations.neorg.downloadRemoteImages[0m
           Whether to enable downloading remote images.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/images/image-nvim/image-nvim.nix>[0m

       [1mvim.utility.images.image-nvim.setupOpts.integrations.neorg.filetypes[0m
           Filetypes to enable image.nvim in.

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "neorg"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/images/image-nvim/image-nvim.nix>[0m

       [1mvim.utility.images.image-nvim.setupOpts.integrations.neorg.onlyRenderAtCursor[0m
           Whether to enable only rendering images at cursor.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/images/image-nvim/image-nvim.nix>[0m

       [1mvim.utility.images.image-nvim.setupOpts.maxHeight[0m
           The maximum height of images to render. Images larger than this will be scaled down to fit within this height.

           [4mType:[24m null or signed integer

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/images/image-nvim/image-nvim.nix>[0m

       [1mvim.utility.images.image-nvim.setupOpts.maxHeightWindowPercentage[0m
           The maximum height of images to render as a percentage of the window height. Images larger than this will be scaled down to fit within this height.

           [4mType:[24m null or signed integer

           [4mDefault:[24m 50

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/images/image-nvim/image-nvim.nix>[0m

       [1mvim.utility.images.image-nvim.setupOpts.maxWidthWindowPercentage[0m
           The maximum width of images to render as a percentage of the window width. Images larger than this will be scaled down to fit within this width.

           [4mType:[24m null or signed integer

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/images/image-nvim/image-nvim.nix>[0m

       [1mvim.utility.images.image-nvim.setupOpts.windowOverlapClear.enable[0m
           Whether to enable clearing of images when they overlap with the window.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/images/image-nvim/image-nvim.nix>[0m

       [1mvim.utility.images.image-nvim.setupOpts.windowOverlapClear.ftIgnore[0m
           Filetypes to ignore window overlap clearing in.

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "cmp_menu"
                 "cmp_docs"
                 ""
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/images/image-nvim/image-nvim.nix>[0m

       [1mvim.utility.images.img-clip.enable[0m
           Whether to enable img-clip to paste images into any markup language.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/images/img-clip/img-clip.nix>[0m

       [1mvim.utility.images.img-clip.setupOpts[0m
           Option table to pass into the setup function of img-clip

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/images/img-clip/img-clip.nix>[0m

       [1mvim.utility.leetcode-nvim.enable[0m
           Whether to enable complementary neovim plugin for leetcode.nvim.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/leetcode-nvim/leetcode-nvim.nix>[0m

       [1mvim.utility.leetcode-nvim.setupOpts[0m
           Option table to pass into the setup function of leetcode-nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/leetcode-nvim/leetcode-nvim.nix>[0m

       [1mvim.utility.leetcode-nvim.setupOpts.arg[0m
           Argument for Neovim

           [4mType:[24m string

           [4mDefault:[24m "leetcode.nvim"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/leetcode-nvim/leetcode-nvim.nix>[0m

       [1mvim.utility.leetcode-nvim.setupOpts.cn.enabled[0m
           Whether to enable leetcode.cn instead of leetcode.com.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/leetcode-nvim/leetcode-nvim.nix>[0m

       [1mvim.utility.leetcode-nvim.setupOpts.cn.translate_problems[0m
           Whether to enable translation for problem questions.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/leetcode-nvim/leetcode-nvim.nix>[0m

       [1mvim.utility.leetcode-nvim.setupOpts.cn.translator[0m
           Whether to enable translator.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/leetcode-nvim/leetcode-nvim.nix>[0m

       [1mvim.utility.leetcode-nvim.setupOpts.image_support[0m
           Whether to enable question description images using image.nvim (image-nvim must be enabled)…

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/leetcode-nvim/leetcode-nvim.nix>[0m

       [1mvim.utility.leetcode-nvim.setupOpts.lang[0m
           Language to start your session with

           [4mType:[24m one of “cpp”, “java”, “python”, “python3”, “c”, “csharp”, “javascript”, “typescript”, “php”, “swift”, “kotlin”, “dart”, “golang”, “ruby”, “scala”, “rust”, “racket”, “erlang”, “elixir”, “bash”

           [4mDefault:[24m "python3"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/leetcode-nvim/leetcode-nvim.nix>[0m

       [1mvim.utility.leetcode-nvim.setupOpts.logging[0m
           Whether to enable logging for leetcode.nvim status notifications…

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/leetcode-nvim/leetcode-nvim.nix>[0m

       [1mvim.utility.leetcode-nvim.setupOpts.plugins.non_standalone[0m
           Whether to enable leetcode.nvim in a non-standalone mode.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/leetcode-nvim/leetcode-nvim.nix>[0m

       [1mvim.utility.leetcode-nvim.setupOpts.storage.cache[0m
           Cache storage directory

           [4mType:[24m luaInline

           [4mDefault:[0m

               {
                 _type = "lua-inline";
                 expr = "vim.fn.stdpath(\"cache\") .. \"/leetcode\"";
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/leetcode-nvim/leetcode-nvim.nix>[0m

       [1mvim.utility.leetcode-nvim.setupOpts.storage.home[0m
           Home storage directory

           [4mType:[24m luaInline

           [4mDefault:[0m

               {
                 _type = "lua-inline";
                 expr = "vim.fn.stdpath(\"data\") .. \"/leetcode\"";
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/leetcode-nvim/leetcode-nvim.nix>[0m

       [1mvim.utility.mkdir.enable[0m
           Whether to enable parent directory creation when editing a nested path that does not exist using ‘mkdir.nvim’ .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/mkdir/mkdir.nix>[0m

       [1mvim.utility.motion.flash-nvim.enable[0m
           Whether to enable enhanced code navigation with flash.nvim.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/flash/flash.nix>[0m

       [1mvim.utility.motion.flash-nvim.mappings.jump[0m
           Jump

           [4mType:[24m null or string

           [4mDefault:[24m "s"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/flash/flash.nix>[0m

       [1mvim.utility.motion.flash-nvim.mappings.remote[0m
           Remote Flash

           [4mType:[24m null or string

           [4mDefault:[24m "r"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/flash/flash.nix>[0m

       [1mvim.utility.motion.flash-nvim.mappings.toggle[0m
           Toggle Flash Search

           [4mType:[24m null or string

           [4mDefault:[24m "<c-s>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/flash/flash.nix>[0m

       [1mvim.utility.motion.flash-nvim.mappings.treesitter[0m
           Treesitter

           [4mType:[24m null or string

           [4mDefault:[24m "S"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/flash/flash.nix>[0m

       [1mvim.utility.motion.flash-nvim.mappings.treesitter_search[0m
           Treesitter Search

           [4mType:[24m null or string

           [4mDefault:[24m "R"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/flash/flash.nix>[0m

       [1mvim.utility.motion.flash-nvim.setupOpts[0m
           Option table to pass into the setup function of flash-nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/flash/flash.nix>[0m

       [1mvim.utility.motion.hop.enable[0m
           Whether to enable Hop.nvim plugin (easy motion).

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/hop/hop.nix>[0m

       [1mvim.utility.motion.hop.mappings.hop[0m
           Jump to occurrences [hop.nvim]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>h"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/hop/hop.nix>[0m

       [1mvim.utility.motion.leap.enable[0m
           Whether to enable leap.nvim plugin (easy motion).

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/leap/leap.nix>[0m

       [1mvim.utility.motion.leap.mappings.leapBackwardTill[0m
           Leap backward till

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>sX"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/leap/leap.nix>[0m

       [1mvim.utility.motion.leap.mappings.leapBackwardTo[0m
           Leap backward to

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>sS"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/leap/leap.nix>[0m

       [1mvim.utility.motion.leap.mappings.leapForwardTill[0m
           Leap forward till

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>sx"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/leap/leap.nix>[0m

       [1mvim.utility.motion.leap.mappings.leapForwardTo[0m
           Leap forward to

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>ss"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/leap/leap.nix>[0m

       [1mvim.utility.motion.leap.mappings.leapFromWindow[0m
           Leap from window

           [4mType:[24m null or string

           [4mDefault:[24m "gs"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/leap/leap.nix>[0m

       [1mvim.utility.motion.precognition.enable[0m
           Whether to enable assisted motion discovery[precognition.nvim].

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/precognition/precognition.nix>[0m

       [1mvim.utility.motion.precognition.setupOpts[0m
           Option table to pass into the setup function of precognition.nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/precognition/precognition.nix>[0m

       [1mvim.utility.motion.precognition.setupOpts.disabled_fts[0m
           Filetypes that automatically disable ‘precognition’

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "startify"
               ]

           [4mExample:[24m ["startify"]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/precognition/precognition.nix>[0m

       [1mvim.utility.motion.precognition.setupOpts.gutterHints[0m
           What motions display and at what priority. Only appears in gutters

           [4mType:[24m attribute set of (submodule)

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/precognition/precognition.nix>[0m

       [1mvim.utility.motion.precognition.setupOpts.gutterHints.<name>.prio[0m
           The priority of the hint

           [4mType:[24m signed integer

           [4mDefault:[24m 1

           [4mExample:[24m 10

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/precognition/precognition.nix>[0m

       [1mvim.utility.motion.precognition.setupOpts.gutterHints.<name>.text[0m
           The easier-to-read depiction of the motion

           [4mType:[24m string

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/precognition/precognition.nix>[0m

       [1mvim.utility.motion.precognition.setupOpts.highlightColor[0m
           The highlight for the virtual text

           [4mType:[24m attribute set of string

           [4mDefault:[0m

               {
                 link = "Comment";
               }

           [4mExample:[0m

               { link = "Comment"; }
               # or
               { foreground = "#0000FF"; background = "#000000"; };

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/precognition/precognition.nix>[0m

       [1mvim.utility.motion.precognition.setupOpts.hints[0m
           What motions display, and at what priority

           [4mType:[24m attribute set of (submodule)

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/precognition/precognition.nix>[0m

       [1mvim.utility.motion.precognition.setupOpts.hints.<name>.prio[0m
           The priority of the hint

           [4mType:[24m signed integer

           [4mDefault:[24m 1

           [4mExample:[24m 10

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/precognition/precognition.nix>[0m

       [1mvim.utility.motion.precognition.setupOpts.hints.<name>.text[0m
           The easier-to-read depiction of the motion

           [4mType:[24m string

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/precognition/precognition.nix>[0m

       [1mvim.utility.motion.precognition.setupOpts.showBlankVirtLine[0m
           Whether to show a blank virtual line when no movements are shown

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/precognition/precognition.nix>[0m

       [1mvim.utility.motion.precognition.setupOpts.startVisible[0m
           Whether to start ‘precognition’ automatically

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/motion/precognition/precognition.nix>[0m

       [1mvim.utility.multicursors.enable[0m
           Whether to enable vscode like multiple cursors [multicursor.nvim].

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/multicursors/multicursors.nix>[0m

       [1mvim.utility.multicursors.setupOpts[0m
           Option table to pass into the setup function of multicursors

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/multicursors/multicursors.nix>[0m

       [1mvim.utility.multicursors.setupOpts.DEBUG_MODE[0m
           Enable debug mode.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/multicursors/multicursors.nix>[0m

       [1mvim.utility.multicursors.setupOpts.create_commands[0m
           Create Multicursor user commands

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/multicursors/multicursors.nix>[0m

       [1mvim.utility.multicursors.setupOpts.generate_hints[0m
           The configuration for generating hints

           [4mType:[24m submodule

           [4mDefault:[0m

               {
                 config = {
                   column_count = null;
                   max_hint_length = 25;
                 };
                 extend = true;
                 insert = true;
                 normal = true;
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/multicursors/multicursors.nix>[0m

       [1mvim.utility.multicursors.setupOpts.generate_hints.config[0m
           The configuration for generating hints for multicursors.nvim

           [4mType:[24m submodule

           [4mDefault:[0m

               {
                 column_count = null;
                 max_hint_length = 25;
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/multicursors/multicursors.nix>[0m

       [1mvim.utility.multicursors.setupOpts.generate_hints.config.column_count[0m
           The number of columns to use for the hint window

           [4mType:[24m null or signed integer

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/multicursors/multicursors.nix>[0m

       [1mvim.utility.multicursors.setupOpts.generate_hints.config.max_hint_length[0m
           The maximum length of the hint

           [4mType:[24m signed integer

           [4mDefault:[24m 25

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/multicursors/multicursors.nix>[0m

       [1mvim.utility.multicursors.setupOpts.generate_hints.extend[0m
           Generate hints for the extend mode

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/multicursors/multicursors.nix>[0m

       [1mvim.utility.multicursors.setupOpts.generate_hints.insert[0m
           Generate hints for the insert mode

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/multicursors/multicursors.nix>[0m

       [1mvim.utility.multicursors.setupOpts.generate_hints.normal[0m
           Generate hints for the normal mode

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/multicursors/multicursors.nix>[0m

       [1mvim.utility.multicursors.setupOpts.hint_config[0m
           The configuration for the hint window

           [4mType:[24m submodule

           [4mDefault:[0m

               {
                 float_opts = {
                   border = "none";
                 };
                 position = "bottom";
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/multicursors/multicursors.nix>[0m

       [1mvim.utility.multicursors.setupOpts.hint_config.float_opts[0m
           The options for the floating hint window

           [4mType:[24m submodule

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/multicursors/multicursors.nix>[0m

       [1mvim.utility.multicursors.setupOpts.hint_config.float_opts.border[0m
           The border style for the hint window

           [4mType:[24m string

           [4mDefault:[24m "none"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/multicursors/multicursors.nix>[0m

       [1mvim.utility.multicursors.setupOpts.hint_config.position[0m
           The position of the hint window

           [4mType:[24m string

           [4mDefault:[24m "bottom"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/multicursors/multicursors.nix>[0m

       [1mvim.utility.multicursors.setupOpts.mode_keys[0m
           The keys to use for each mode

           [4mType:[24m attribute set of string

           [4mDefault:[0m

               {
                 append = "a";
                 change = "c";
                 extend = "e";
                 insert = "i";
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/multicursors/multicursors.nix>[0m

       [1mvim.utility.multicursors.setupOpts.nowait[0m
           Don’t wait for the cursor to move before updating the cursor

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/multicursors/multicursors.nix>[0m

       [1mvim.utility.multicursors.setupOpts.updatetime[0m
           The time in milliseconds to wait before updating the cursor in insert mode

           [4mType:[24m signed integer

           [4mDefault:[24m 50

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/multicursors/multicursors.nix>[0m

       [1mvim.utility.new-file-template.enable[0m
           new-file-template.nvim: Automatically insert a template on new files in neovim.

               [1mNote[0m
               For custom templates add a directory containing ‘lua/templates/*.lua’ to ‘vim.additionalRuntimePaths’.

           More documentation on the templates available at [1mcustom-template-docs[22m[1]

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/new-file-template/new-file-template.nix>[0m

            [1m1. [22mhttps://github.com/otavioschwanck/new-file-template.nvim?tab=readme-ov-file#creating-new-templates

       [1mvim.utility.new-file-template.setupOpts[0m
           Option table to pass into the setup function of nvim-file-template.nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/new-file-template/new-file-template.nix>[0m

       [1mvim.utility.new-file-template.setupOpts.disableAutocmd[0m
           Disable the autocmd that creates the template

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/new-file-template/new-file-template.nix>[0m

       [1mvim.utility.new-file-template.setupOpts.disableFiletype[0m
           Disable default templates for specific filetypes

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/new-file-template/new-file-template.nix>[0m

       [1mvim.utility.new-file-template.setupOpts.disableInsert[0m
           Enter insert mode after inserting the template

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/new-file-template/new-file-template.nix>[0m

       [1mvim.utility.new-file-template.setupOpts.disableSpecific[0m
           Disable specific regexp for the default templates.

           [4mType:[24m attribute set of list of string

           [4mDefault:[24m { }

           [4mExample:[24m "{ ruby = [\".*\"]; }"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/new-file-template/new-file-template.nix>[0m

       [1mvim.utility.new-file-template.setupOpts.suffixAsFiletype[0m
           Use suffix of filename rather than ‘vim.bo.filetype’ as filetype

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/new-file-template/new-file-template.nix>[0m

       [1mvim.utility.nix-develop.enable[0m
           Whether to enable in-neovim ‘nix develop’, ‘nix shell’, and more using ‘nix-develop.nvim’.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/nix-develop/nix-develop.nix>[0m

       [1mvim.utility.oil-nvim.enable[0m
           Whether to enable Neovim file explorer: edit your filesystem like a buffer [oil-nvim] .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/oil-nvim/oil-nvim.nix>[0m

       [1mvim.utility.oil-nvim.setupOpts[0m
           Option table to pass into the setup function of oil-nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/oil-nvim/oil-nvim.nix>[0m

       [1mvim.utility.outline.aerial-nvim.enable[0m
           Whether to enable Aerial.nvim.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/outline/aerial-nvim/aerial-nvim.nix>[0m

       [1mvim.utility.outline.aerial-nvim.mappings.toggle[0m
           Toggle aerial window

           [4mType:[24m null or string

           [4mDefault:[24m "gO"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/outline/aerial-nvim/aerial-nvim.nix>[0m

       [1mvim.utility.outline.aerial-nvim.setupOpts[0m
           Option table to pass into the setup function of aerial.nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/outline/aerial-nvim/aerial-nvim.nix>[0m

       [1mvim.utility.preview.glow.enable[0m
           Whether to enable markdown preview in neovim with glow.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/preview/glow/glow.nix>[0m

       [1mvim.utility.preview.glow.mappings.openPreview[0m
           Open preview

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>p"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/preview/glow/glow.nix>[0m

       [1mvim.utility.preview.markdownPreview.enable[0m
           Whether to enable Markdown preview in neovim with markdown-preview.nvim.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/preview/markdown-preview/markdown-preview.nix>[0m

       [1mvim.utility.preview.markdownPreview.alwaysAllowPreview[0m
           Allow preview on all filetypes

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/preview/markdown-preview/markdown-preview.nix>[0m

       [1mvim.utility.preview.markdownPreview.autoClose[0m
           Automatically close the preview window after leaving a Markdown buffer

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/preview/markdown-preview/markdown-preview.nix>[0m

       [1mvim.utility.preview.markdownPreview.autoStart[0m
           Automatically open the preview window after entering a Markdown buffer

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/preview/markdown-preview/markdown-preview.nix>[0m

       [1mvim.utility.preview.markdownPreview.broadcastServer[0m
           Allow for outside and network wide connections

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/preview/markdown-preview/markdown-preview.nix>[0m

       [1mvim.utility.preview.markdownPreview.customIP[0m
           IP-address to use

           [4mType:[24m string

           [4mDefault:[24m ""

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/preview/markdown-preview/markdown-preview.nix>[0m

       [1mvim.utility.preview.markdownPreview.customPort[0m
           Port to use

           [4mType:[24m string

           [4mDefault:[24m ""

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/preview/markdown-preview/markdown-preview.nix>[0m

       [1mvim.utility.preview.markdownPreview.filetypes[0m
           Allowed filetypes

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "markdown"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/preview/markdown-preview/markdown-preview.nix>[0m

       [1mvim.utility.preview.markdownPreview.lazyRefresh[0m
           Only update preview when saving or leaving insert mode

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/preview/markdown-preview/markdown-preview.nix>[0m

       [1mvim.utility.sleuth.enable[0m
           Whether to enable automatically adjusting options such as ‘shiftwidth’ or ‘expandtab’, using ‘vim-sleuth’ .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/sleuth/sleuth.nix>[0m

       [1mvim.utility.snacks-nvim.enable[0m
           Whether to enable collection of QoL plugins for Neovim [snacks-nvim] .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/snacks-nvim/snacks-nvim.nix>[0m

       [1mvim.utility.snacks-nvim.setupOpts[0m
           Option table to pass into the setup function of snacks-nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/snacks-nvim/snacks-nvim.nix>[0m

       [1mvim.utility.surround.enable[0m
           Whether to enable nvim-surround, Neovim plugin to add/change/delete surrounding delimiter pairs with ease.

               [1mNote[0m
               The default mappings deviate from upstream to avoid conflicts with nvim-leap. You may change those in your configuration if you do not use nvim-leap

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/surround/surround.nix>[0m

       [1mvim.utility.surround.setupOpts[0m
           Option table to pass into the setup function of nvim-surround

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/surround/surround.nix>[0m

       [1mvim.utility.surround.setupOpts.keymaps.change[0m
           keymap for change

           [4mType:[24m string

           [4mDefault:[24m "gzr"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/surround/surround.nix>[0m

       [1mvim.utility.surround.setupOpts.keymaps.change_line[0m
           keymap for change_line

           [4mType:[24m string

           [4mDefault:[24m "gZR"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/surround/surround.nix>[0m

       [1mvim.utility.surround.setupOpts.keymaps.delete[0m
           keymap for delete

           [4mType:[24m string

           [4mDefault:[24m "gzd"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/surround/surround.nix>[0m

       [1mvim.utility.surround.setupOpts.keymaps.insert[0m
           keymap for insert

           [4mType:[24m string

           [4mDefault:[24m "<C-g>z"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/surround/surround.nix>[0m

       [1mvim.utility.surround.setupOpts.keymaps.insert_line[0m
           keymap for insert_line

           [4mType:[24m string

           [4mDefault:[24m "<C-g>Z"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/surround/surround.nix>[0m

       [1mvim.utility.surround.setupOpts.keymaps.normal[0m
           keymap for normal

           [4mType:[24m string

           [4mDefault:[24m "gz"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/surround/surround.nix>[0m

       [1mvim.utility.surround.setupOpts.keymaps.normal_cur[0m
           keymap for normal_cur

           [4mType:[24m string

           [4mDefault:[24m "gZ"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/surround/surround.nix>[0m

       [1mvim.utility.surround.setupOpts.keymaps.normal_cur_line[0m
           keymap for normal_cur_line

           [4mType:[24m string

           [4mDefault:[24m "gZZ"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/surround/surround.nix>[0m

       [1mvim.utility.surround.setupOpts.keymaps.normal_line[0m
           keymap for normal_line

           [4mType:[24m string

           [4mDefault:[24m "gzz"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/surround/surround.nix>[0m

       [1mvim.utility.surround.setupOpts.keymaps.visual[0m
           keymap for visual

           [4mType:[24m string

           [4mDefault:[24m "gz"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/surround/surround.nix>[0m

       [1mvim.utility.surround.setupOpts.keymaps.visual_line[0m
           keymap for visual_line

           [4mType:[24m string

           [4mDefault:[24m "gZ"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/surround/surround.nix>[0m

       [1mvim.utility.surround.useVendoredKeybindings[0m
           Use alternative set of keybindings that avoids conflicts with other popular plugins, e.g. nvim-leap

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/surround/surround.nix>[0m

       [1mvim.utility.vim-wakatime.enable[0m
           Whether to enable automatic time tracking and metrics generated from your programming activity [vim-wakatime] .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/wakatime/vim-wakatime.nix>[0m

       [1mvim.utility.vim-wakatime.cli-package[0m
           The package that should be used for wakatime-cli. Set as null to use the default path in [1m$XDG_DATA_HOME[0m

           [4mType:[24m null or package

           [4mDefault:[24m <derivation wakatime-cli-1.115.3>

           [4mExample:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/wakatime/vim-wakatime.nix>[0m

       [1mvim.utility.yanky-nvim.enable[0m
           Whether to enable improved Yank and Put functionalities for Neovim [yanky-nvim] .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/yanky-nvim/yanky-nvim.nix>[0m

       [1mvim.utility.yanky-nvim.setupOpts[0m
           Option table to pass into the setup function of yanky-nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/yanky-nvim/yanky-nvim.nix>[0m

       [1mvim.utility.yanky-nvim.setupOpts.ring.storage[0m
           storage mode for ring values.

             [1m• shada[22m: this will save pesistantly using Neovim ShaDa feature. This means that history will be persisted between each session of Neovim.
             [1m• memory[22m: each Neovim instance will have his own history and it will be lost between sessions.
             [1m• sqlite[22m: more reliable than ‘shada’, requires ‘sqlite.lua’ as a dependency. nvf will add this dependency to ‘PATH’ automatically.

           [4mType:[24m one of “shada”, “sqlite”, “memory”

           [4mDefault:[24m "shada"

           [4mExample:[24m "sqlite"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/yanky-nvim/yanky-nvim.nix>[0m

       [1mvim.utility.yazi-nvim.enable[0m
           Whether to enable companion plugin for the yazi terminal file manager [yazi-nvim] .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/yazi-nvim/yazi-nvim.nix>[0m

       [1mvim.utility.yazi-nvim.mappings.openYazi[0m
           Open yazi at the current file [yazi.nvim]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>-"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/yazi-nvim/yazi-nvim.nix>[0m

       [1mvim.utility.yazi-nvim.mappings.openYaziDir[0m
           Open the file manager in nvim’s working directory [yazi.nvim]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>cw"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/yazi-nvim/yazi-nvim.nix>[0m

       [1mvim.utility.yazi-nvim.mappings.yaziToggle[0m
           Resume the last yazi session [yazi.nvim]

           [4mType:[24m null or string

           [4mDefault:[24m "<c-up>"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/yazi-nvim/yazi-nvim.nix>[0m

       [1mvim.utility.yazi-nvim.setupOpts[0m
           Option table to pass into the setup function of yazi-nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/yazi-nvim/yazi-nvim.nix>[0m

       [1mvim.utility.yazi-nvim.setupOpts.open_for_directories[0m
           Whether to open Yazi instead of netrw

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/utility/yazi-nvim/yazi-nvim.nix>[0m

       [1mvim.viAlias[0m
           Enable the ‘vi’ alias for ‘nvim’

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/environment/options.nix>[0m

       [1mvim.vimAlias[0m
           Enable the ‘vim’ alias for ‘nvim’

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/environment/options.nix>[0m

       [1mvim.visuals.cellular-automaton.enable[0m
           Whether to enable cellular-automaton to help you cope with stubborn code [cellular-automaton].

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/cellular-automaton/cellular-automaton.nix>[0m

       [1mvim.visuals.cellular-automaton.animation.register[0m
           Whether to enable registering configured animation(s) automatically.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/cellular-automaton/cellular-automaton.nix>[0m

       [1mvim.visuals.cellular-automaton.animation.setup[0m
           Configuration used to generate an animation to be registered.

           The final value for ‘ca_config’ will be used to register a new animation using ‘require("cellular-automaton").register_animation(ca_config)’

               [1mWarning[0m
               ‘ca_config’ [1mmust [22meval to a valid Lua table. nvf does not and cannot perform any kind of validation on your Lua code, so bogus values will result in errors when the animation is registered.

           [4mType:[24m luaInline

           [4mDefault:[0m

               {
                 _type = "lua-inline";
                 expr = ''
                   local ca_config = {
                     fps = 50,
                     name = 'slide',
                   }

                   -- init function is invoked only once at the start
                   -- config.init = function (grid)
                   --
                   -- end

                   -- update function
                   ca_config.update = function (grid)
                   for i = 1, #grid do
                     local prev = grid[i][#(grid[i])]
                       for j = 1, #(grid[i]) do
                         grid[i][j], prev = prev, grid[i][j]
                       end
                     end
                     return true
                   end
                 '';
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/cellular-automaton/cellular-automaton.nix>[0m

       [1mvim.visuals.cellular-automaton.mappings.makeItRain[0m
           Make it rain [cellular-automaton]

           [4mType:[24m null or string

           [4mDefault:[24m "<leader>fml"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/cellular-automaton/cellular-automaton.nix>[0m

       [1mvim.visuals.cinnamon-nvim.enable[0m
           Whether to enable smooth scrolling for ANY command [cinnamon-nvim].

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/cinnamon-nvim/cinnamon-nvim.nix>[0m

       [1mvim.visuals.cinnamon-nvim.setupOpts[0m
           Option table to pass into the setup function of cinnamon.nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/cinnamon-nvim/cinnamon-nvim.nix>[0m

       [1mvim.visuals.cinnamon-nvim.setupOpts.keymaps.basic[0m
           Whether to enable basic animation keymaps.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/cinnamon-nvim/cinnamon-nvim.nix>[0m

       [1mvim.visuals.cinnamon-nvim.setupOpts.keymaps.extra[0m
           Whether to enable extra animation keymaps.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/cinnamon-nvim/cinnamon-nvim.nix>[0m

       [1mvim.visuals.cinnamon-nvim.setupOpts.options[0m
           Scroll options

           [4mType:[24m attribute set

           [4mDefault:[0m

               {
                 count_only = false;
                 mode = "cursor";
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/cinnamon-nvim/cinnamon-nvim.nix>[0m

       [1mvim.visuals.fidget-nvim.enable[0m
           Whether to enable nvim LSP UI element [fidget-nvim].

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts[0m
           Option table to pass into the setup function of Fidget

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.integration.nvim-tree.enable[0m
           Integrate with nvim-tree/nvim-tree.lua (if enabled)

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.integration.xcodebuild-nvim.enable[0m
           Integrate with wojciech-kulik/xcodebuild.nvim (if enabled)

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.logger.float_precision[0m
           Limit the number of decimals displayed for floats

           [4mType:[24m floating point number

           [4mDefault:[24m 0.01

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.logger.level[0m
           Minimum logging level

           [4mType:[24m one of “debug”, “error”, “info”, “trace”, “warn”, “off”

           [4mDefault:[24m "warn"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.logger.max_size[0m
           Maximum log file size, in KB

           [4mType:[24m signed integer

           [4mDefault:[24m 10000

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.logger.path[0m
           Where Fidget writes its logs to

           [4mType:[24m luaInline

           [4mDefault:[0m

               {
                 _type = "lua-inline";
                 expr = ''
                   string.format("%s/fidget.nvim.log", vim.fn.stdpath("cache"))
                 '';
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.notification.configs[0m
           How to configure notification groups when instantiated

           [4mType:[24m attribute set of (luaInline)

           [4mDefault:[0m

               {
                 default = {
                   _type = "lua-inline";
                   expr = "require('fidget.notification').default_config";
                 };
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.notification.filter[0m
           Minimum notifications level

           [4mType:[24m one of “debug”, “info”, “warn”, “error”

           [4mDefault:[24m "info"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.notification.history_size[0m
           Number of removed messages to retain in history

           [4mType:[24m signed integer

           [4mDefault:[24m 128

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.notification.override_vim_notify[0m
           Automatically override vim.notify() with Fidget

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.notification.poll_rate[0m
           How frequently to update and render notifications

           [4mType:[24m signed integer

           [4mDefault:[24m 10

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.notification.redirect[0m
           Conditionally redirect notifications to another backend

           [4mType:[24m luaInline

           [4mDefault:[0m

               {
                 _type = "lua-inline";
                 expr = ''
                   function(msg, level, opts)
                     if opts and opts.on_open then
                       return require("fidget.integration.nvim-notify").delegate(msg, level, opts)
                     end
                   end
                 '';
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.notification.view.group_separator[0m
           Separator between notification groups

           [4mType:[24m string

           [4mDefault:[24m "---"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.notification.view.group_separator_hl[0m
           Highlight group used for group separator

           [4mType:[24m string

           [4mDefault:[24m "Comment"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.notification.view.icon_separator[0m
           Separator between group name and icon

           [4mType:[24m string

           [4mDefault:[24m " "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.notification.view.render_message[0m
           How to render notification messages

           [4mType:[24m luaInline

           [4mDefault:[0m

               {
                 _type = "lua-inline";
                 expr = ''
                   function(msg, cnt)
                     return cnt == 1 and msg or string.format("(%dx) %s", cnt, msg)
                   end
                 '';
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.notification.view.stack_upwards[0m
           Display notification items from bottom to top

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.notification.window.align[0m
           How to align the notification window

           [4mType:[24m one of “top”, “bottom”

           [4mDefault:[24m "bottom"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.notification.window.border[0m
           Border style of the notification window

           [4mType:[24m one of “none”, “single”, “double”, “rounded”, “solid”, “shadow” or list of (string or list of string)

           [4mDefault:[24m "none"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.notification.window.max_height[0m
           Maximum height of the notification window

           [4mType:[24m signed integer

           [4mDefault:[24m 0

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.notification.window.max_width[0m
           Maximum width of the notification window

           [4mType:[24m signed integer

           [4mDefault:[24m 0

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.notification.window.normal_hl[0m
           Base highlight group in the notification window

           [4mType:[24m string

           [4mDefault:[24m "Comment"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.notification.window.relative[0m
           What the notification window position is relative to

           [4mType:[24m one of “editor”, “win”

           [4mDefault:[24m "editor"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.notification.window.winblend[0m
           Background color opacity in the notification window

           [4mType:[24m signed integer

           [4mDefault:[24m 100

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.notification.window.x_padding[0m
           Padding from right edge of window boundary

           [4mType:[24m signed integer

           [4mDefault:[24m 1

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.notification.window.y_padding[0m
           Padding from bottom edge of window boundary

           [4mType:[24m signed integer

           [4mDefault:[24m 0

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.notification.window.zindex[0m
           Stacking priority of the notification window

           [4mType:[24m signed integer

           [4mDefault:[24m 45

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.done_icon[0m
           Icon shown when LSP progress tasks are completed

           [4mType:[24m string

           [4mDefault:[24m "✓"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.done_style[0m
           Highlight group for completed LSP tasks

           [4mType:[24m string

           [4mDefault:[24m "Constant"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.done_ttl[0m
           How long a message should persist when complete

           [4mType:[24m signed integer

           [4mDefault:[24m 3

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.format_annote[0m
           How to format a progress annotation

           [4mType:[24m luaInline

           [4mDefault:[0m

               {
                 _type = "lua-inline";
                 expr = ''
                   function(msg) return msg.title end
                 '';
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.format_group_name[0m
           How to format a progress notification group’s name

           [4mType:[24m luaInline

           [4mDefault:[0m

               {
                 _type = "lua-inline";
                 expr = ''
                   function(group) return tostring(group) end
                 '';
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.format_message[0m
           How to format a progress message

           [4mType:[24m luaInline

           [4mDefault:[0m

               {
                 _type = "lua-inline";
                 expr = ''
                   require("fidget.progress.display").default_format_message
                 '';
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.group_style[0m
           Highlight group for group name (LSP server name)

           [4mType:[24m string

           [4mDefault:[24m "Title"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.icon_style[0m
           Highlight group for group icons

           [4mType:[24m string

           [4mDefault:[24m "Question"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.overrides[0m
           Overrides the default configuration for a notification group defined in [1mvim.visuals.fidget-nvim.setupOpts.notification.configs[22m[1].

           If any of the fields are null, the value from the default configuration is used.

           If default configuration is not defined, the following defaults are used:

                  {
                      name = "Notifications",
                      icon = "❰❰",
                      ttl = 5,
                      group_style = "Title",
                      icon_style = "Special",
                      annote_style = "Question",
                      debug_style = "Comment",
                      info_style = "Question",
                      warn_style = "WarningMsg",
                      error_style = "ErrorMsg",
                      debug_annote = "DEBUG",
                      info_annote = "INFO",
                      warn_annote = "WARN",
                      error_annote = "ERROR",
                      update_hook = function(item)
                        notification.set_content_key(item)
                      end,
                  }

           [4mType:[24m attribute set of (submodule)

           [4mDefault:[24m { }

           [4mExample:[0m

               {
                 rust_analyzer = {
                   name = "Rust Analyzer";
                 };
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

            [1m1. [22msee the [1mvim.visuals.fidget-nvim.setupOpts.notification.configs [22moption

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.annote_separator[0m
           Separator between message from annote

           [4mType:[24m null or string

           [4mDefault:[24m " "

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.annote_style[0m
           Default style used to highlight item annotes

           [4mType:[24m null or string

           [4mDefault:[24m "Question"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.debug_annote[0m
           Default annotation for debug items

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.debug_style[0m
           Style used to highlight debug item annotes

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.error_annote[0m
           Default annotation for error items

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.error_style[0m
           Style used to highlight error item annotes

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.group_style[0m
           Style used to highlight group name

           [4mType:[24m null or string

           [4mDefault:[24m "Title"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.icon[0m
           Icon of the group, displayed in the notification window. Can be a string or a function that returns a string.

           If a function, it is invoked every render cycle with the items list, useful for rendering animations and other dynamic content.

               [1mNote[0m
               If you’re looking for detailed information into the function signature, you can refer to the fidget API documentation available [1mhere[22m[1]

           [4mType:[24m null or string or (luaInline)

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

            [1m1. [22mhttps://github.com/j-hui/fidget.nvim/blob/1ba38e4cbb24683973e00c2e36f53ae64da38ef5/doc/fidget-api.txt#L70-L77

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.icon_on_left[0m
           If true, icon is rendered on the left instead of right

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.icon_style[0m
           Style used to highlight icon, if null, use group_style

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.info_annote[0m
           Default annotation for info items

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.info_style[0m
           Style used to highlight info item annotes

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.name[0m
           Name of the group, displayed in the notification window. Can be a string or a function that returns a string.

           If a function, it is invoked every render cycle with the items list, useful for rendering animations and other dynamic content.

               [1mNote[0m
               If you’re looking for detailed information into the function signature, you can refer to the fidget API documentation available [1mhere[22m[1]

           [4mType:[24m null or string or (luaInline)

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

            [1m1. [22mhttps://github.com/j-hui/fidget.nvim/blob/1ba38e4cbb24683973e00c2e36f53ae64da38ef5/doc/fidget-api.txt#L70-L77

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.priority[0m
           Order in which group should be displayed

           [4mType:[24m null or signed integer

           [4mDefault:[24m 50

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.render_limit[0m
           How many notification items to show at once

           [4mType:[24m null or signed integer

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.skip_history[0m
           Whether messages should be preserved in history

           [4mType:[24m null or boolean

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.ttl[0m
           How long a notification item should exist

           [4mType:[24m null or signed integer

           [4mDefault:[24m 5

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.update_hook[0m
           Called when an item is updated.

           If false, no action is taken. If a function, it is invoked with the item being updated.

               [1mNote[0m
               If you’re looking for detailed information into the function signature, you can refer to the fidget API documentation available [1mhere[22m[1]

           [4mType:[24m null or boolean or (luaInline)

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

            [1m1. [22mhttps://github.com/j-hui/fidget.nvim/blob/1ba38e4cbb24683973e00c2e36f53ae64da38ef5/doc/fidget-api.txt#L114

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.warn_annote[0m
           Default annotation for warn items

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.overrides.<name>.warn_style[0m
           Style used to highlight warn item annotes

           [4mType:[24m null or string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.priority[0m
           Priority of the progress notification

           [4mType:[24m signed integer

           [4mDefault:[24m 30

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.progress_icon.pattern[0m
           Pattern shown when LSP progress tasks are in progress

           [4mType:[24m one of “dots”, “dots_negative”, “dots_snake”, “dots_footsteps”, “dots_hop”, “line”, “pipe”, “dots_ellipsis”, “dots_scrolling”, “star”, “flip”, “hamburger”, “grow_vertical”, “grow_horizontal”, “noise”, “dots_bounce”, “triangle”, “arc”, “circle”,
           “square_corners”, “circle_quarters”, “circle_halves”, “dots_toggle”, “box_toggle”, “arrow”, “zip”, “bouncing_bar”, “bouncing_ball”, “clock”, “earth”, “moon”, “dots_pulse”, “meter”

           [4mDefault:[24m "dots"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.progress_icon.period[0m
           Period of the pattern

           [4mType:[24m signed integer

           [4mDefault:[24m 1

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.progress_style[0m
           Highlight group for in-progress LSP tasks

           [4mType:[24m string

           [4mDefault:[24m "WarningMsg"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.progress_ttl[0m
           How long a message should persist when in progress

           [4mType:[24m signed integer

           [4mDefault:[24m 99999

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.render_limit[0m
           Maximum number of messages to render

           [4mType:[24m signed integer

           [4mDefault:[24m 16

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.display.skip_history[0m
           Skip adding messages to history

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.ignore[0m
           Ignore LSP servers by name

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.ignore_done_already[0m
           Ignore new tasks that are already done

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.ignore_empty_message[0m
           Ignore new tasks with empty messages

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.lsp.log_handler[0m
           Log ‘$/progress’ handler invocations

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.lsp.progress_ringbuf_size[0m
           Nvim’s LSP client ring buffer size

           [4mType:[24m signed integer

           [4mDefault:[24m 100

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.notification_group[0m
           How to get a progress message’s notification group key

           [4mType:[24m luaInline

           [4mDefault:[0m

               {
                 _type = "lua-inline";
                 expr = ''
                   function(msg)
                     return msg.lsp_client.name
                   end
                 '';
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.poll_rate[0m
           How frequently to poll for LSP progress messages

           [4mType:[24m signed integer

           [4mDefault:[24m 0

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.fidget-nvim.setupOpts.progress.suppress_on_insert[0m
           Suppress new messages when in insert mode

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/fidget-nvim/fidget.nix>[0m

       [1mvim.visuals.highlight-undo.enable[0m
           Whether to enable highlight undo [highlight-undo].

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/highlight-undo/highlight-undo.nix>[0m

       [1mvim.visuals.highlight-undo.setupOpts[0m
           Option table to pass into the setup function of highlight-undo

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/highlight-undo/highlight-undo.nix>[0m

       [1mvim.visuals.highlight-undo.setupOpts.duration[0m
           Duration of the highlight

           [4mType:[24m signed integer

           [4mDefault:[24m 500

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/highlight-undo/highlight-undo.nix>[0m

       [1mvim.visuals.indent-blankline.enable[0m
           Whether to enable indentation guides [indent-blankline].

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/indent-blankline/indent-blankline.nix>[0m

       [1mvim.visuals.indent-blankline.setupOpts[0m
           Option table to pass into the setup function of indent-blankline

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/indent-blankline/indent-blankline.nix>[0m

       [1mvim.visuals.indent-blankline.setupOpts.debounce[0m
           Debounce time in milliseconds

           [4mType:[24m signed integer

           [4mDefault:[24m 200

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/indent-blankline/indent-blankline.nix>[0m

       [1mvim.visuals.indent-blankline.setupOpts.indent.char[0m
           Character(s) for indentation guide

           [4mType:[24m string or list of string

           [4mDefault:[24m "│"

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/indent-blankline/indent-blankline.nix>[0m

       [1mvim.visuals.indent-blankline.setupOpts.indent.highlight[0m
           The highlight group(s) applied to the indentation guide.

           See ‘:help ibl.config.indent.highlight’.

           [4mType:[24m null or string or list of string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/indent-blankline/indent-blankline.nix>[0m

       [1mvim.visuals.indent-blankline.setupOpts.indent.priority[0m
           Virtual text priority for the indentation guide

           [4mType:[24m signed integer

           [4mDefault:[24m 1

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/indent-blankline/indent-blankline.nix>[0m

       [1mvim.visuals.indent-blankline.setupOpts.indent.repeat_linebreak[0m
           Repeat indentation guides on wrapped lines

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/indent-blankline/indent-blankline.nix>[0m

       [1mvim.visuals.indent-blankline.setupOpts.indent.smart_indent_cap[0m
           Caps the number of indentation levels based on surrounding code

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/indent-blankline/indent-blankline.nix>[0m

       [1mvim.visuals.indent-blankline.setupOpts.indent.tab_char[0m
           Character(s) for tab indentation guide.

           See ‘:help ibl.config.indent.tab_char’.

           [4mType:[24m null or string or list of string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/indent-blankline/indent-blankline.nix>[0m

       [1mvim.visuals.indent-blankline.setupOpts.scope.enabled[0m
           Highlight current scope from treesitter

           [4mType:[24m boolean

           [4mDefault:[24m config.vim.treesitter.enable

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/indent-blankline/indent-blankline.nix>[0m

       [1mvim.visuals.indent-blankline.setupOpts.scope.char[0m
           The character(s) for the scope indentation guide

           [4mType:[24m string or list of string

           [4mDefault:[24m config.vim.visuals.indent-blankline.setupOpts.indent.char

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/indent-blankline/indent-blankline.nix>[0m

       [1mvim.visuals.indent-blankline.setupOpts.scope.exclude.language[0m
           The list of treesitter languages to disable scope for.

           ‘*’ can be used as a wildcard for every language/node type.

           [4mType:[24m list of string

           [4mDefault:[24m [ ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/indent-blankline/indent-blankline.nix>[0m

       [1mvim.visuals.indent-blankline.setupOpts.scope.exclude.node_type[0m
           Nodes to ignore in scope checking, per language.

           ‘*’ can be used as a wildcard for every language.

           [4mType:[24m attribute set of list of string

           [4mDefault:[0m

               {
                 "*" = [
                   "source_file"
                   "program"
                 ];
                 lua = [
                   "chunk"
                 ];
                 python = [
                   "module"
                 ];
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/indent-blankline/indent-blankline.nix>[0m

       [1mvim.visuals.indent-blankline.setupOpts.scope.highlight[0m
           The highlight group(s) applied to the scope.

           See ‘:help ’ibl.config.scope.highlight`.

           [4mType:[24m null or string or list of string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/indent-blankline/indent-blankline.nix>[0m

       [1mvim.visuals.indent-blankline.setupOpts.scope.include.node_type[0m
           Additional nodes to be used for scope checking, per language

           [4mType:[24m attribute set of list of string

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/indent-blankline/indent-blankline.nix>[0m

       [1mvim.visuals.indent-blankline.setupOpts.scope.injected_languages[0m
           Check for injected languages (treesitter)

           [4mType:[24m boolean

           [4mDefault:[24m config.vim.treesitter.enable

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/indent-blankline/indent-blankline.nix>[0m

       [1mvim.visuals.indent-blankline.setupOpts.scope.priority[0m
           Virtual text priority for the scope

           [4mType:[24m signed integer

           [4mDefault:[24m 1024

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/indent-blankline/indent-blankline.nix>[0m

       [1mvim.visuals.indent-blankline.setupOpts.scope.show_end[0m
           Show an underline on the last line of the scope

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/indent-blankline/indent-blankline.nix>[0m

       [1mvim.visuals.indent-blankline.setupOpts.scope.show_exact_scope[0m
           Show the scope underline at the exact start of the scope, even if that’s to the right of the indentation guide

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/indent-blankline/indent-blankline.nix>[0m

       [1mvim.visuals.indent-blankline.setupOpts.scope.show_start[0m
           Show an underline on the first line of the scope

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/indent-blankline/indent-blankline.nix>[0m

       [1mvim.visuals.indent-blankline.setupOpts.viewport_buffer.max[0m
           Number of lines above and below of what is currently visible in the window

           [4mType:[24m signed integer

           [4mDefault:[24m 500

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/indent-blankline/indent-blankline.nix>[0m

       [1mvim.visuals.indent-blankline.setupOpts.viewport_buffer.min[0m
           Number of lines above and below of what is currently visible in the window

           [4mType:[24m signed integer

           [4mDefault:[24m 30

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/indent-blankline/indent-blankline.nix>[0m

       [1mvim.visuals.indent-blankline.setupOpts.whitespace.highlight[0m
           The highlight group(s) applied to whitespace.

           See ‘:help ibl.config.whitespace.highlight’.

           [4mType:[24m null or string or list of string

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/indent-blankline/indent-blankline.nix>[0m

       [1mvim.visuals.indent-blankline.setupOpts.whitespace.remove_blankline_trail[0m
           Remove trailing whitespace on blanklines

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/indent-blankline/indent-blankline.nix>[0m

       [1mvim.visuals.nvim-cursorline.enable[0m
           Whether to enable cursor word and line highlighting [nvim-cursorline].

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/nvim-cursorline/nvim-cursorline.nix>[0m

       [1mvim.visuals.nvim-cursorline.setupOpts[0m
           Option table to pass into the setup function of nvim-cursorline

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/nvim-cursorline/nvim-cursorline.nix>[0m

       [1mvim.visuals.nvim-cursorline.setupOpts.cursorline.enable[0m
           Whether to enable cursor line highlighting.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/nvim-cursorline/nvim-cursorline.nix>[0m

       [1mvim.visuals.nvim-cursorline.setupOpts.cursorline.number[0m
           If true, ‘vim.wo.cursorlineopt’ will be set to “number” when the trigger conditions are met.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/nvim-cursorline/nvim-cursorline.nix>[0m

       [1mvim.visuals.nvim-cursorline.setupOpts.cursorline.timeout[0m
           Cursorline timeout

           [4mType:[24m signed integer

           [4mDefault:[24m 1000

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/nvim-cursorline/nvim-cursorline.nix>[0m

       [1mvim.visuals.nvim-cursorline.setupOpts.cursorword.enable[0m
           Whether to enable cursor word highlighting.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/nvim-cursorline/nvim-cursorline.nix>[0m

       [1mvim.visuals.nvim-cursorline.setupOpts.cursorword.hl.underline[0m
           Whether to underline matching cursorword

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/nvim-cursorline/nvim-cursorline.nix>[0m

       [1mvim.visuals.nvim-cursorline.setupOpts.cursorword.min_length[0m
           The min_length option defines the minimum number of characters a word must have to be highlighted as a “cursor word.” Any word shorter than this value will be ignored and not highlighted.

           [4mType:[24m signed integer

           [4mDefault:[24m 3

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/nvim-cursorline/nvim-cursorline.nix>[0m

       [1mvim.visuals.nvim-cursorline.setupOpts.cursorword.timeout[0m
           Cursorword timeout

           [4mType:[24m signed integer

           [4mDefault:[24m 1000

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/nvim-cursorline/nvim-cursorline.nix>[0m

       [1mvim.visuals.nvim-scrollbar.enable[0m
           Whether to enable extensible Neovim Scrollbar [nvim-scrollbar].

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/nvim-scrollbar/scrollbar-nvim.nix>[0m

       [1mvim.visuals.nvim-scrollbar.setupOpts[0m
           Option table to pass into the setup function of scrollbar-nvim

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/nvim-scrollbar/scrollbar-nvim.nix>[0m

       [1mvim.visuals.nvim-scrollbar.setupOpts.excluded_filetypes[0m
           Filetypes to hide the scrollbar on

           [4mType:[24m list of string

           [4mDefault:[0m

               [
                 "prompt"
                 "TelescopePrompt"
                 "noice"
                 "NvimTree"
                 "neo-tree"
                 "alpha"
                 "notify"
                 "Navbuddy"
                 "fastaction_popup"
               ]

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/nvim-scrollbar/scrollbar-nvim.nix>[0m

       [1mvim.visuals.nvim-web-devicons.enable[0m
           Whether to enable Neovim dev icons [nvim-web-devicons].

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/nvim-web-devicons/nvim-web-devicons.nix>[0m

       [1mvim.visuals.nvim-web-devicons.setupOpts[0m
           Option table to pass into the setup function of nvim-web-devicons

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/nvim-web-devicons/nvim-web-devicons.nix>[0m

       [1mvim.visuals.nvim-web-devicons.setupOpts.color_icons[0m
           Whether to enable different highlight colors per icon.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/nvim-web-devicons/nvim-web-devicons.nix>[0m

       [1mvim.visuals.nvim-web-devicons.setupOpts.override[0m
           Your personal icon overrides.

           You can specify color or cterm_color instead of specifying both of them. DevIcon will be appended to ‘name’

           [4mType:[24m attribute set of (attribute set)

           [4mDefault:[24m { }

           [4mExample:[0m

               {
                 zsh = {
                   name = "Zsh";
                   icon = "";
                   color = "#428850";
                   cterm_color = "65";
                 };
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/nvim-web-devicons/nvim-web-devicons.nix>[0m

       [1mvim.visuals.nvim-web-devicons.setupOpts.variant[0m
           Set the light or dark variant manually, instead of relying on ‘background’

           [4mType:[24m null or one of “light”, “dark”

           [4mDefault:[24m null

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/nvim-web-devicons/nvim-web-devicons.nix>[0m

       [1mvim.visuals.rainbow-delimiters.enable[0m
           Whether to enable rainbow-delimiters.

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/rainbow-delimiters/rainbow-delimiters.nix>[0m

       [1mvim.visuals.rainbow-delimiters.setupOpts[0m
           Option table to pass into the setup function of rainbow-delimiters

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/rainbow-delimiters/rainbow-delimiters.nix>[0m

       [1mvim.visuals.tiny-devicons-auto-colors.enable[0m
           Whether to enable alternative nvim-web-devicons icon colors [tiny-devicons-auto-colors].

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/tiny-devicons-auto-colors/tiny-devicons-auto-colors.nix>[0m

       [1mvim.visuals.tiny-devicons-auto-colors.setupOpts[0m
           Option table to pass into the setup function of tiny-devicons-auto-colors

           You can pass in any additional options even if they’re not listed in the docs

           [4mType:[24m anything

           [4mDefault:[24m { }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/tiny-devicons-auto-colors/tiny-devicons-auto-colors.nix>[0m

       [1mvim.visuals.tiny-devicons-auto-colors.setupOpts.factors.cache.enabled[0m
           Whether to enable caching of icon colors. This will greatly improve performance.

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/tiny-devicons-auto-colors/tiny-devicons-auto-colors.nix>[0m

       [1mvim.visuals.tiny-devicons-auto-colors.setupOpts.factors.cache.path[0m
           Path to the cache file

           [4mType:[24m luaInline

           [4mDefault:[0m

               {
                 _type = "lua-inline";
                 expr = "vim.fn.stdpath(\"cache\") .. \"/tiny-devicons-auto-colors-cache.json\"";
               }

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/tiny-devicons-auto-colors/tiny-devicons-auto-colors.nix>[0m

       [1mvim.visuals.tiny-devicons-auto-colors.setupOpts.factors.chroma[0m
           Chroma factor of icons

           [4mType:[24m signed integer

           [4mDefault:[24m 1

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/tiny-devicons-auto-colors/tiny-devicons-auto-colors.nix>[0m

       [1mvim.visuals.tiny-devicons-auto-colors.setupOpts.factors.hue[0m
           Hue factor of icons

           [4mType:[24m floating point number

           [4mDefault:[24m 1.25

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/tiny-devicons-auto-colors/tiny-devicons-auto-colors.nix>[0m

       [1mvim.visuals.tiny-devicons-auto-colors.setupOpts.factors.lightness[0m
           Lightness factor of icons

           [4mType:[24m floating point number

           [4mDefault:[24m 1.76

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/plugins/visuals/tiny-devicons-auto-colors/tiny-devicons-auto-colors.nix>[0m

       [1mvim.withNodeJs[0m
           Whether to enable NodeJs support in the Neovim wrapper .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/environment/options.nix>[0m

       [1mvim.withPython3[0m
           Whether to enable Python3 support in the Neovim wrapper .

           [4mType:[24m boolean

           [4mDefault:[24m false

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/environment/options.nix>[0m

       [1mvim.withRuby[0m
           Whether to enable Ruby support in the Neovim wrapper. .

           [4mType:[24m boolean

           [4mDefault:[24m true

           [4mExample:[24m true

           [4mDeclared[24m [4mby:[0m
               [1m<nvf/modules/wrapper/environment/options.nix>[0m

[1mAUTHORS[0m
       nvf contributors

nvf                                                                                                                             January 1, 1980                                                                                                                         [4mnvf[24m(5)
